{"version":3,"file":"static/js/537.37638467.chunk.js","mappings":"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","sources":["services/prayerIntentService.js","services/mindStateService.js","services/lifestyleCompassService.js","components/lifestyle-compass/CompassBackground.js","components/lifestyle-compass/IslamicPatternDecoration.js","components/lifestyle-compass/LifestyleCompass.js"],"sourcesContent":["/**\n * Prayer Intent Service\n * \n * This service handles all the personalized response generation for the Prayer Intent Assistant.\n * It analyzes user queries and provides tailored guidance for enhancing prayer experience.\n */\n\nimport analyticsService from './analyticsService';\n\n// Intent categories with their associated keywords\nconst INTENT_CATEGORIES = {\n  FOCUS: ['focus', 'concentrate', 'distraction', 'attention', 'mind', 'wander', 'khushu'],\n  GRATITUDE: ['gratitude', 'thankful', 'appreciation', 'grateful', 'blessing', 'thank'],\n  CONNECTION: ['connect', 'connection', 'presence', 'feel', 'closeness', 'relationship', 'spiritual'],\n  MEANING: ['meaning', 'understand', 'translation', 'comprehend', 'knowledge', 'learn'],\n  CONSISTENCY: ['consistency', 'regular', 'daily', 'routine', 'habit', 'miss', 'forget'],\n  MOTIVATION: ['motivation', 'inspire', 'energy', 'lazy', 'tired', 'difficult', 'hard'],\n  EMOTION: ['emotion', 'feel', 'heart', 'cry', 'tears', 'moved', 'touched', 'joy'],\n  POSTURE: ['posture', 'stand', 'bow', 'prostration', 'sitting', 'physical', 'movement', 'pain', 'back'],\n  DOUBT: ['doubt', 'question', 'uncertain', 'confused', 'worry', 'waswas', 'thoughts'],\n  TIME: ['time', 'rush', 'hurry', 'quick', 'busy', 'schedule', 'late', 'work'],\n};\n\n// Detailed response database for each category\nconst RESPONSES = {\n  FOCUS: [\n    {\n      intention: \"Developing deep focus in prayer\",\n      explanation: \"Before beginning your prayer, take a moment of silence to clear your mind. Focus on your breathing for 30 seconds, and with each breath remind yourself that you are about to stand before Allah. As you begin your prayer, focus intensely on each word as you recite, as if you are having a direct conversation with Allah who is watching you.\",\n      arabicDua: \"رَبِّ اشْرَحْ لِي صَدْرِي وَيَسِّرْ لِي أَمْرِي\",\n      transliteration: \"Rabbi-shrah lee sadree wa yassir lee amree\",\n      translation: \"My Lord, expand for me my chest [with assurance] and ease for me my task\",\n      reference: \"Surah Taha 20:25-26\"\n    },\n    {\n      intention: \"Overcoming distractions during prayer\",\n      explanation: \"Distractions are a test from Shaitan. When you notice your mind wandering, don't get frustrated - simply acknowledge the distraction and gently return your focus to the prayer. Consider praying in a quiet space with minimal visual distractions. Many scholars suggest looking at the place of prostration while praying to maintain focus.\",\n      arabicDua: \"اللَّهُمَّ إِنِّي أَعُوذُ بِكَ مِنْ الْهَمِّ وَالْحُزْنِ، وَأَعُوذُ بِكَ مِنْ العَجْزِ وَالْكَسَلِ\",\n      transliteration: \"Allahumma inni a'udhu bika minal-hammi wal-hazan, wa a'udhu bika minal-'ajzi wal-kasal\",\n      translation: \"O Allah, I seek refuge in You from anxiety and grief, and I seek refuge in You from inability and laziness\",\n      reference: \"Sahih Bukhari\"\n    },\n    {\n      intention: \"Achieving khushu' (mindful presence)\",\n      explanation: \"Khushu' is the heart of prayer. To achieve it, understand the meaning of what you're reciting - reflect deeply on each verse of the Quran as you recite it. Imagine the words manifesting in reality around you. When reciting verses about Paradise, imagine its beauty; when reciting about Hellfire, feel its warning.\",\n      arabicDua: \"اللَّهُمَّ اجْعَلْ فِي قَلْبِي نُورًا، وَفِي لِسَانِي نُورًا، وَفِي سَمْعِي نُورًا، وَفِي بَصَرِي نُورًا\",\n      transliteration: \"Allahumma-j'al fee qalbee nooran, wa fee lisaanee nooran, wa fee sam'ee nooran, wa fee basaree nooran\",\n      translation: \"O Allah, place light in my heart, and light on my tongue, and light in my hearing, and light in my sight\",\n      reference: \"Sahih Muslim\"\n    }\n  ],\n  GRATITUDE: [\n    {\n      intention: \"Cultivating gratitude in prayer\",\n      explanation: \"Before beginning prayer, take a moment to count three specific blessings in your life - perhaps your health, family, and faith. As you recite 'Alhamdulillah' (All praise is due to Allah), truly feel gratitude for these blessings, recognizing that all good comes from Allah alone.\",\n      arabicDua: \"اللَّهُمَّ أَعِنِّي عَلَى ذِكْرِكَ وَشُكْرِكَ وَحُسْنِ عِبَادَتِكَ\",\n      transliteration: \"Allahumma a'inni 'ala dhikrika wa shukrika wa husni 'ibadatik\",\n      translation: \"O Allah, help me to remember You, to thank You, and to worship You in the best way\",\n      reference: \"Abu Dawud\"\n    },\n    {\n      intention: \"Recognizing Allah's blessings\",\n      explanation: \"Allah says, 'If you are grateful, I will surely increase you [in favor]' (Quran 14:7). As you stand for prayer, mentally list the blessings you often take for granted - the ability to breathe, to see, to hear, to think. Let this awareness fill your heart with humility and your eyes with tears of gratitude.\",\n      arabicDua: \"رَبِّ أَوْزِعْنِي أَنْ أَشْكُرَ نِعْمَتَكَ الَّتِي أَنْعَمْتَ عَلَيَّ وَعَلَى وَالِدَيَّ\",\n      transliteration: \"Rabbi awzi'ni an ashkura ni'mataka-llati an'amta 'alayya wa 'ala walidayya\",\n      translation: \"My Lord, enable me to be grateful for Your favor which You have bestowed upon me and upon my parents\",\n      reference: \"Surah An-Naml 27:19\"\n    },\n    {\n      intention: \"Thanking Allah in times of difficulty\",\n      explanation: \"True gratitude is thanking Allah even in difficult times, recognizing that trials are a means of purification. Before prayer, reflect on a current challenge and identify potential hidden blessings within it. The Prophet Muhammad (peace be upon him) said, 'How wonderful is the affair of the believer, for all his affairs are good.'\",\n      arabicDua: \"الْحَمْدُ لِلَّهِ عَلَى كُلِّ حَالٍ\",\n      transliteration: \"Alhamdulillahi 'ala kulli hal\",\n      translation: \"Praise be to Allah in all circumstances\",\n      reference: \"Common phrase based on Islamic teachings\"\n    }\n  ],\n  CONNECTION: [\n    {\n      intention: \"Deepening spiritual connection\",\n      explanation: \"When you stand for prayer, imagine standing directly before Allah. Strip away all worldly distractions and visualize yourself in the divine presence. The Prophet Muhammad (peace be upon him) said, 'Worship Allah as if you see Him, for if you do not see Him, He sees you.' Let this awareness transform your prayer experience.\",\n      arabicDua: \"اللَّهُمَّ اجْعَلْنِي مِنَ التَّوَّابِينَ وَاجْعَلْنِي مِنَ الْمُتَطَهِّرِينَ\",\n      transliteration: \"Allahumma-j'alni minat-tawwabeena wa-j'alni minal-mutatahhireen\",\n      translation: \"O Allah, make me among those who return to You in repentance and make me among those who purify themselves\",\n      reference: \"Tirmidhi\"\n    },\n    {\n      intention: \"Feeling Allah's presence\",\n      explanation: \"To feel Allah's presence, begin by quieting the noise within. Before prayer, find a clean, quiet place and take a few deep breaths. Remember that Allah is closer to you than your jugular vein (Quran 50:16). As you enter prayer with this consciousness, each movement becomes an intimate conversation with your Creator.\",\n      arabicDua: \"اللَّهُمَّ إِنِّي أَسْأَلُكَ حُبَّكَ وَحُبَّ مَنْ يُحِبُّكَ وَحُبَّ عَمَلٍ يُقَرِّبُنِي إِلَى حُبِّكَ\",\n      transliteration: \"Allahumma inni as'aluka hubbaka wa hubba man yuhibbuka wa hubba 'amalin yuqarribuni ila hubbik\",\n      translation: \"O Allah, I ask You for Your love, the love of those who love You, and the love of deeds that bring me closer to Your love\",\n      reference: \"Tirmidhi\"\n    },\n    {\n      intention: \"Strengthening your relationship with Allah\",\n      explanation: \"Just as human relationships require consistent communication, your relationship with Allah strengthens through regular, sincere prayer. When you pray, speak to Allah with the intimacy of a loving servant. Share your hopes, fears, and dreams in your personal supplications after obligatory prayers, and listen with your heart for guidance.\",\n      arabicDua: \"يَا مُقَلِّبَ الْقُلُوبِ ثَبِّتْ قَلْبِي عَلَى دِينِكَ\",\n      transliteration: \"Ya muqallibal-qulub, thabbit qalbi 'ala dinik\",\n      translation: \"O Turner of hearts, make my heart firm upon Your religion\",\n      reference: \"Tirmidhi\"\n    }\n  ],\n  MEANING: [\n    {\n      intention: \"Understanding what you recite\",\n      explanation: \"Take time to learn the meaning of the surahs and duas you recite in prayer. Start with Al-Fatiha, understanding each verse deeply. When you recite with understanding, the words transform from mere sounds to profound communication with Allah. Try to spend 10 minutes daily learning the translation of what you commonly recite.\",\n      arabicDua: \"رَبِّ زِدْنِي عِلْمًا\",\n      transliteration: \"Rabbi zidni 'ilma\",\n      translation: \"My Lord, increase me in knowledge\",\n      reference: \"Surah Taha 20:114\"\n    },\n    {\n      intention: \"Connecting with Quranic recitation\",\n      explanation: \"The Quran was revealed as a guidance and healing for hearts. Choose surahs for your prayer that resonate with your current life situation. Before prayer, briefly read the translation of what you plan to recite. As you recite during prayer, let the meaning flow through your heart, not just your tongue.\",\n      arabicDua: \"اللَّهُمَّ ارْحَمْنِي بِالْقُرْآنِ وَاجْعَلْهُ لِي إِمَامًا وَنُورًا وَهُدًى وَرَحْمَةً\",\n      transliteration: \"Allahummar-hamni bil-Qur'ani waj'alhu li imaman wa nuran wa hudan wa rahmah\",\n      translation: \"O Allah, have mercy on me through the Quran, and make it for me a leader, a light, a guidance and a mercy\",\n      reference: \"Ibn Majah\"\n    },\n    {\n      intention: \"Deepening knowledge of prayer rituals\",\n      explanation: \"Understanding the spiritual significance behind each prayer movement enhances your experience. When you bow (ruku), feel your heart bowing in humility. In prostration (sujood), recognize it as the position of ultimate submission where you are closest to Allah. Study the Prophet's prayer to refine your own practice.\",\n      arabicDua: \"اللَّهُمَّ انْفَعْنِي بِمَا عَلَّمْتَنِي وَعَلِّمْنِي مَا يَنْفَعُنِي وَزِدْنِي عِلْمًا\",\n      transliteration: \"Allahumma-nfa'ni bima 'allamtani wa 'allimni ma yanfa'uni wa zidni 'ilma\",\n      translation: \"O Allah, benefit me by that which You have taught me, teach me that which will benefit me, and increase me in knowledge\",\n      reference: \"Ibn Majah\"\n    }\n  ],\n  CONSISTENCY: [\n    {\n      intention: \"Establishing prayer consistency\",\n      explanation: \"Consistency in prayer is built through habit formation. Choose specific locations and times for each prayer and stick to them. When traveling or during disruptions, prioritize finding time for prayer. Remember, the most beloved deeds to Allah are those done regularly, even if small.\",\n      arabicDua: \"رَبَّنَا وَاجْعَلْنَا مُسْلِمَيْنِ لَكَ وَمِن ذُرِّيَّتِنَا أُمَّةً مُّسْلِمَةً لَّكَ وَأَرِنَا مَنَاسِكَنَا\",\n      transliteration: \"Rabbana waj'alna muslimayni laka wa min dhurriyyatina ummatan muslimatan lak, wa arina manasikana\",\n      translation: \"Our Lord, make us submissive to You and from our descendants a community submissive to You. And show us our rites [of worship]\",\n      reference: \"Surah Al-Baqarah 2:128\"\n    },\n    {\n      intention: \"Overcoming missed prayers\",\n      explanation: \"If you miss prayers, don't let shame keep you from returning. Make up missed prayers when you remember them, and renew your commitment. Consider using digital reminders, prayer apps, or asking a friend to check in with you. Remember, each day is a new opportunity to strengthen your prayer routine.\",\n      arabicDua: \"اللَّهُمَّ إِنِّي ظَلَمْتُ نَفْسِي ظُلْمًا كَثِيرًا وَلَا يَغْفِرُ الذُّنُوبَ إِلَّا أَنْتَ فَاغْفِرْ لِي مَغْفِرَةً مِنْ عِنْدِكَ وَارْحَمْنِي\",\n      transliteration: \"Allahumma inni zalamtu nafsi zulman kathiran, wa la yaghfiru-dh-dhunuba illa ant, faghfir li maghfiratan min 'indik, war-hamni\",\n      translation: \"O Allah, I have wronged myself greatly, and none forgives sins except You, so grant me forgiveness from You and have mercy on me\",\n      reference: \"Bukhari and Muslim\"\n    },\n    {\n      intention: \"Building a lifelong prayer habit\",\n      explanation: \"View your prayers not as isolated events but as pillars of your daily life. Connect each prayer with specific activities - Fajr with morning routine, Dhuhr with lunch break, Asr with afternoon work, Maghrib with dinner, and Isha with bedtime. This anchoring makes prayer a natural part of your day rather than an interruption.\",\n      arabicDua: \"اللَّهُمَّ أَعِنِّي عَلَى ذِكْرِكَ وَشُكْرِكَ وَحُسْنِ عِبَادَتِكَ\",\n      transliteration: \"Allahumma a'inni 'ala dhikrika wa shukrika wa husni 'ibadatik\",\n      translation: \"O Allah, help me to remember You, to thank You, and to worship You in the best way\",\n      reference: \"Abu Dawud\"\n    }\n  ],\n  MOTIVATION: [\n    {\n      intention: \"Finding motivation to pray\",\n      explanation: \"When motivation wanes, remember that prayer is not just a duty but a privilege - a personal audience with the Creator of the universe. Reflect on the verse: 'Seek help through patience and prayer' (Quran 2:153), recognizing that prayer itself is the solution to feeling unmotivated. Start with just two rakats with full concentration.\",\n      arabicDua: \"اللَّهُمَّ إِنِّي أَسْأَلُكَ الْهُدَى وَالتُّقَى وَالْعَفَافَ وَالْغِنَى\",\n      transliteration: \"Allahumma inni as'alukal-huda wat-tuqa wal-'afafa wal-ghina\",\n      translation: \"O Allah, I ask You for guidance, piety, abstinence and self-sufficiency\",\n      reference: \"Muslim\"\n    },\n    {\n      intention: \"Overcoming spiritual laziness\",\n      explanation: \"Spiritual laziness (futur) affects everyone periodically. Combat it by varying your prayer routine - try praying in a different location, learning new surahs to recite, or focusing on a different aspect of prayer each day. Remember that Shaitan wants you to abandon prayer; each prayer completed despite feeling lazy is especially valuable.\",\n      arabicDua: \"اللَّهُمَّ إِنِّي أَعُوذُ بِكَ مِنَ الْهَمِّ وَالْحَزَنِ وَالْعَجْزِ وَالْكَسَلِ\",\n      transliteration: \"Allahumma inni a'udhu bika minal-hammi wal-hazani wal-'ajzi wal-kasal\",\n      translation: \"O Allah, I seek refuge in You from anxiety and grief, and from inability and laziness\",\n      reference: \"Bukhari\"\n    },\n    {\n      intention: \"Rekindling love for prayer\",\n      explanation: \"To rekindle your love for prayer, remember its sweetness. The Prophet Muhammad (peace be upon him) said, 'The comfort of my eyes is in prayer.' Try to pray extra nawafil (voluntary prayers) in the quiet of night, even if brief, to reconnect with the peace prayer brings and gradually rebuild your enthusiasm.\",\n      arabicDua: \"اللَّهُمَّ اجْعَلْ حُبَّكَ أَحَبَّ إِلَيَّ مِنْ نَفْسِي وَسَمْعِي وَبَصَرِي وَمَالِي\",\n      transliteration: \"Allahummaj'al hubbaka ahabba ilayya min nafsi wa sam'i wa basari wa mali\",\n      translation: \"O Allah, make Your love dearer to me than my soul, my hearing, my sight, and my wealth\",\n      reference: \"Authenticated by Al-Albani\"\n    }\n  ],\n  EMOTION: [\n    {\n      intention: \"Connecting emotionally in prayer\",\n      explanation: \"Prayer is not meant to be mechanical but a heartfelt conversation. Try personalizing your prayers by adding your own duas in your language after the required recitations. Reflect on Allah's names that resonate with your current situation - if seeking forgiveness, focus on Ar-Rahman (The Most Merciful); if needing provision, focus on Ar-Razzaq (The Provider).\",\n      arabicDua: \"اللَّهُمَّ لَكَ الْحَمْدُ كُلُّهُ، اللَّهُمَّ لاَ قَابِضَ لِمَا بَسَطْتَ، وَلاَ بَاسِطَ لِمَا قَبَضْتَ\",\n      transliteration: \"Allahumma lakal-hamdu kulluh, Allahumma la qabida lima basatta, wa la basita lima qabadta\",\n      translation: \"O Allah, all praise is due to You. O Allah, none can withhold what You give, and none can give what You withhold\",\n      reference: \"Muslim\"\n    },\n    {\n      intention: \"Finding joy in prayer\",\n      explanation: \"Joy in prayer often comes from presence and gratitude. Before beginning, take a moment to truly feel grateful for the opportunity to connect with Allah. During prayer, engage all your senses - feel your body's movements, listen to the beauty of recitation, and let your heart respond to the words you speak.\",\n      arabicDua: \"اللَّهُمَّ إِنِّي أَسْأَلُكَ نَعِيمًا لاَ يَنْفَدُ، وَقُرَّةَ عَيْنٍ لاَ تَنْقَطِعُ\",\n      transliteration: \"Allahumma inni as'aluka na'iman la yanfad, wa qurrata 'aynin la tanqati'\",\n      translation: \"O Allah, I ask You for bliss that does not diminish and for the coolness of my eyes that never ceases\",\n      reference: \"An-Nasa'i\"\n    },\n    {\n      intention: \"Praying with a heavy heart\",\n      explanation: \"In times of sadness, let prayer be your refuge. The Prophet Muhammad (peace be upon him) would increase in prayer during difficult times. Don't feel you must hide your emotions in prayer - Allah knows what's in your heart. Allow tears to flow if they come, and let your sadness transform into a deeper connection with Allah, the ultimate source of comfort.\",\n      arabicDua: \"اللَّهُمَّ إِنِّي أَعُوذُ بِكَ مِنَ الْهَمِّ وَالْحَزَنِ، وَالْعَجْزِ وَالْكَسَلِ، وَالْبُخْلِ وَالْجُبْنِ، وَضَلَعِ الدَّيْنِ، وَغَلَبَةِ الرِّجَالِ\",\n      transliteration: \"Allahumma inni a'udhu bika minal-hammi wal-hazani, wal-'ajzi wal-kasali, wal-bukhli wal-jubni, wa dala'id-dayni wa ghalabatir-rijal\",\n      translation: \"O Allah, I seek refuge in You from anxiety and sorrow, inability and laziness, stinginess and cowardice, the burden of debt and being overpowered by men\",\n      reference: \"Bukhari\"\n    }\n  ],\n  POSTURE: [\n    {\n      intention: \"Improving physical presence in prayer\",\n      explanation: \"Prayer posture affects your mental state and focus. Stand straight with your gaze fixed on the place of prostration. Feel the dignity in your standing, the humility in your bowing, and the complete submission in your prostration. Move deliberately between positions, giving each its due time rather than rushing.\",\n      arabicDua: \"اللَّهُمَّ لَكَ رَكَعْتُ، وَبِكَ آمَنْتُ، وَلَكَ أَسْلَمْتُ، خَشَعَ لَكَ سَمْعِي وَبَصَرِي وَمُخِّي وَعَظْمِي وَعَصَبِي\",\n      transliteration: \"Allahumma laka raka'tu, wa bika amantu, wa laka aslamtu, khasha'a laka sam'i wa basari wa mukhkhi wa 'azmi wa 'asabi\",\n      translation: \"O Allah, to You I bow, in You I believe, to You I submit. My hearing, sight, mind, bones, and sinews are humbled before You\",\n      reference: \"Muslim\"\n    },\n    {\n      intention: \"Dealing with physical discomfort in prayer\",\n      explanation: \"If you experience physical pain during prayer, remember that Islam emphasizes ease: 'Allah intends for you ease and does not intend for you hardship' (Quran 2:185). You may pray sitting if standing is difficult, or lying down if sitting is difficult. Focus on maintaining khushu' (concentration) despite physical limitations.\",\n      arabicDua: \"بِسْمِ اللَّهِ الَّذِي لَا يَضُرُّ مَعَ اسْمِهِ شَيْءٌ فِي الْأَرْضِ وَلَا فِي السَّمَاءِ وَهُوَ السَّمِيعُ الْعَلِيمُ\",\n      transliteration: \"Bismillahil-ladhi la yadurru ma'as-mihi shay'un fil-ardi wa la fis-sama'i wa huwas-sami'ul-'alim\",\n      translation: \"In the name of Allah, with Whose name nothing can cause harm on earth or in heaven, and He is the All-Hearing, All-Knowing\",\n      reference: \"Abu Dawud, Tirmidhi\"\n    },\n    {\n      intention: \"Understanding the spiritual meaning of prayer positions\",\n      explanation: \"Each prayer position has profound spiritual significance. When you raise your hands for Takbir, you cast aside worldly concerns. In Qiyam (standing), you stand in honor before Allah. Ruku' (bowing) represents reverence, while Sujud (prostration) symbolizes ultimate submission, placing the noblest part of your body - the face - upon the ground.\",\n      arabicDua: \"سُبْحَانَ رَبِّيَ الْعَظِيمِ وَبِحَمْدِهِ، سُبْحَانَ رَبِّيَ الْأَعْلَى وَبِحَمْدِهِ\",\n      transliteration: \"Subhana Rabbiyal-'Azimi wa bihamdihi, Subhana Rabbiyal-A'la wa bihamdihi\",\n      translation: \"Glory to my Lord the Great and praise Him, Glory to my Lord the Most High and praise Him\",\n      reference: \"Abu Dawud, Tirmidhi\"\n    }\n  ],\n  DOUBT: [\n    {\n      intention: \"Overcoming doubts during prayer\",\n      explanation: \"Doubts (waswas) during prayer often come from Shaitan trying to break your concentration. When they occur, mentally say 'A'udhu billahi min ash-shaytaan ir-rajeem' (I seek refuge in Allah from the accursed Satan) and refocus. Remember that doubts are a test - the Prophet said, 'This is clear faith' when companions reported experiencing waswas but rejecting it.\",\n      arabicDua: \"رَبِّ أَعُوذُ بِكَ مِنْ هَمَزَاتِ الشَّيَاطِينِ وَأَعُوذُ بِكَ رَبِّ أَنْ يَحْضُرُونِ\",\n      transliteration: \"Rabbi a'udhu bika min hamazatish-shayateeni wa a'udhu bika Rabbi an yahduroon\",\n      translation: \"My Lord, I seek refuge in You from the incitements of the devils, and I seek refuge in You, my Lord, lest they be present with me\",\n      reference: \"Surah Al-Mu'minun 23:97-98\"\n    },\n    {\n      intention: \"Addressing uncertainty in faith\",\n      explanation: \"Periods of uncertainty are normal in faith development. The companions asked questions constantly. When doubts arise in prayer, acknowledge them without judgment, then recommit yourself to the present moment of worship. Outside of prayer, seek knowledge from reliable sources to address your specific questions.\",\n      arabicDua: \"يَا مُقَلِّبَ الْقُلُوبِ ثَبِّتْ قَلْبِي عَلَى دِينِكَ\",\n      transliteration: \"Ya muqallibal-quloob, thabbit qalbi 'ala dinik\",\n      translation: \"O Turner of hearts, make my heart firm upon Your religion\",\n      reference: \"Tirmidhi\"\n    },\n    {\n      intention: \"Finding certainty in worship\",\n      explanation: \"Certainty (yaqeen) grows through consistent worship even during periods of doubt. The Prophet Muhammad (peace be upon him) increased in worship during difficult times. If you're unsure about aspects of prayer, study the Prophet's method in detail. Knowledge and practice together strengthen certainty.\",\n      arabicDua: \"اللَّهُمَّ اهْدِنِي فِيمَنْ هَدَيْتَ، وَعَافِنِي فِيمَنْ عَافَيْتَ، وَتَوَلَّنِي فِيمَنْ تَوَلَّيْتَ\",\n      transliteration: \"Allahumma-hdini fiman hadayt, wa 'afini fiman 'afayt, wa tawallani fiman tawallayt\",\n      translation: \"O Allah, guide me among those whom You have guided, pardon me among those whom You have pardoned, turn to me in friendship among those on whom You have turned in friendship\",\n      reference: \"Qunut Dua, Abu Dawud, Tirmidhi\"\n    }\n  ],\n  TIME: [\n    {\n      intention: \"Finding time for prayer in a busy schedule\",\n      explanation: \"In our busy world, prayer requires intentional prioritization. Plan your day around prayer times rather than trying to fit prayers into your schedule. Set alarms 10 minutes before each prayer time. Remember the Quranic wisdom that 'success comes from prayer' (Surah Al-Mu'minun 23:1-2), making prayer your source of productivity rather than an interruption.\",\n      arabicDua: \"اللَّهُمَّ بَارِكْ لِي فِي وَقْتِي\",\n      transliteration: \"Allahumma barik li fi waqti\",\n      translation: \"O Allah, bless my time\",\n      reference: \"Derived from Islamic teachings on seeking barakah (blessings)\"\n    },\n    {\n      intention: \"Praying with full presence despite rush\",\n      explanation: \"When time is limited, it's better to pray a shorter prayer with full concentration than to rush through a longer one. Focus on quality over quantity. The Prophet Muhammad (peace be upon him) advised moderation in worship to maintain consistency. Even in haste, pause briefly between prayer positions to maintain proper form and mindfulness.\",\n      arabicDua: \"رَبَّنَا لَا تُؤَاخِذْنَا إِن نَّسِينَا أَوْ أَخْطَأْنَا\",\n      transliteration: \"Rabbana la tu'akhidhna in nasina aw akhta'na\",\n      translation: \"Our Lord, do not impose blame upon us if we have forgotten or erred\",\n      reference: \"Surah Al-Baqarah 2:286\"\n    },\n    {\n      intention: \"Balancing worldly duties with prayer\",\n      explanation: \"Islam recognizes the need to balance worldly responsibilities with worship. The early Muslims worked diligently while maintaining their prayers. Schedule short breaks for prayer during work, and communicate respectfully with colleagues about your needs. Remember that prayer rejuvenates you spiritually and mentally, actually improving your productivity.\",\n      arabicDua: \"اللَّهُمَّ إِنِّي أَسْأَلُكَ عِلْمًا نَافِعًا، وَرِزْقًا طَيِّبًا، وَعَمَلًا مُتَقَبَّلًا\",\n      transliteration: \"Allahumma inni as'aluka 'ilman nafi'an, wa rizqan tayyiban, wa 'amalan mutaqabbalan\",\n      translation: \"O Allah, I ask You for beneficial knowledge, good provision, and acceptable deeds\",\n      reference: \"Ibn Majah\"\n    }\n  ],\n  // Default response when no specific category is matched\n  DEFAULT: [\n    {\n      intention: \"Enhancing your prayer experience\",\n      explanation: \"Prayer is your spiritual connection with Allah. Try approaching each prayer with renewed intention, focusing on the meaning of the words you recite. Remember that the Prophet Muhammad (peace be upon him) described prayer as 'the comfort of my eyes.' Create a clean, quiet prayer space where you can minimize distractions.\",\n      arabicDua: \"اللَّهُمَّ افْتَحْ لِي أَبْوَابَ رَحْمَتِكَ\",\n      transliteration: \"Allahumma-ftah li abwaba rahmatik\",\n      translation: \"O Allah, open for me the gates of Your mercy\",\n      reference: \"Muslim\"\n    },\n    {\n      intention: \"Nurturing mindfulness in prayer\",\n      explanation: \"Before beginning prayer, take a moment to remind yourself who you're standing before. The companions would prepare mentally and physically for prayer because they understood its significance. During prayer, try to feel the meaning of each position - the humility of bowing, the surrender of prostration, and the direct conversation of sitting before Allah.\",\n      arabicDua: \"اللَّهُمَّ اجْعَلْنِي مِنَ التَّوَّابِينَ وَاجْعَلْنِي مِنَ الْمُتَطَهِّرِينَ\",\n      transliteration: \"Allahumma-j'alni minat-tawwabeena wa-j'alni minal-mutatahhireen\",\n      translation: \"O Allah, make me among those who return to You in repentance and make me among those who purify themselves\",\n      reference: \"Tirmidhi\"\n    }\n  ]\n};\n\n/**\n * Analyze text to determine the primary intent category\n * @param {string} text - User input to analyze\n * @returns {string} - The identified category code\n */\nconst analyzeIntent = (text) => {\n  if (!text) return 'DEFAULT';\n  \n  // Convert to lowercase for easier matching\n  const lowerText = text.toLowerCase();\n  \n  // Score each category based on keyword matches\n  const scores = Object.entries(INTENT_CATEGORIES).map(([category, keywords]) => {\n    const matchCount = keywords.filter(keyword => lowerText.includes(keyword)).length;\n    return { category, score: matchCount };\n  });\n  \n  // Get the highest scoring category\n  const bestMatch = scores.reduce((best, current) => \n    current.score > best.score ? current : best, { category: 'DEFAULT', score: 0 });\n  \n  // If no good match is found, return DEFAULT category\n  return bestMatch.score > 0 ? bestMatch.category : 'DEFAULT';\n};\n\n/**\n * Select the most relevant response from the category\n * @param {string} category - Intent category\n * @param {string} originalQuery - User's original query\n * @returns {Object} - The selected response\n */\nconst selectResponse = (category, originalQuery = '') => {\n  const categoryResponses = RESPONSES[category] || RESPONSES.DEFAULT;\n  \n  // If we have multiple responses in the category, try to pick the most relevant\n  if (categoryResponses.length > 1 && originalQuery) {\n    const lowerQuery = originalQuery.toLowerCase();\n    \n    // Simple relevance scoring based on word overlap\n    const mostRelevant = categoryResponses.map(response => {\n      const relevanceText = `${response.intention} ${response.explanation}`.toLowerCase();\n      \n      // Count how many words from the query appear in the response\n      const queryWords = lowerQuery.split(/\\s+/);\n      const matchCount = queryWords.filter(word => \n        word.length > 3 && relevanceText.includes(word)\n      ).length;\n      \n      return { response, score: matchCount };\n    }).reduce((best, current) => \n      current.score > best.score ? current : best, \n      { response: categoryResponses[0], score: 0 }\n    );\n    \n    return mostRelevant.response;\n  }\n  \n  // If simple matching doesn't work, just return a random response from the category\n  return categoryResponses[Math.floor(Math.random() * categoryResponses.length)];\n};\n\n/**\n * Get personalized prayer intent guidance based on user input\n * @param {string} userInput - The user's query or intention description\n * @returns {Promise<Object>} - Prayer intent guidance response\n */\nexport const getPrayerIntentGuidance = async (userInput) => {\n  try {\n    // Analyze the user's intent\n    const intentCategory = analyzeIntent(userInput);\n    \n    // Track the detected category (useful for analytics)\n    analyticsService.trackPrayerIntentEvent('intent_analyzed', userInput, intentCategory);\n    \n    // Select the most relevant response\n    const guidance = selectResponse(intentCategory, userInput);\n    \n    // Add metadata to help with tracking and improvement\n    return {\n      ...guidance,\n      category: intentCategory,\n      timestamp: new Date().toISOString()\n    };\n  } catch (error) {\n    console.error('Error generating prayer intent guidance:', error);\n    \n    // Track the error\n    analyticsService.trackError('prayer_intent_guidance', error.message, {\n      query: userInput\n    });\n    \n    // Return a fallback response\n    return RESPONSES.DEFAULT[0];\n  }\n};\n\n/**\n * Get suggested intentions based on user history and popular queries\n * @param {Array} history - User's previous intentions (optional)\n * @returns {Array} - List of suggested intentions\n */\nexport const getSuggestedIntentions = (history = []) => {\n  // Default suggestions covering various categories\n  const defaultSuggestions = [\n    \"Help me focus during prayer\",\n    \"I feel disconnected in prayer\",\n    \"I want to feel more gratitude when praying\",\n    \"I rush through my prayers\",\n    \"I don't understand what I'm reciting\"\n  ];\n  \n  // If we have user history, we could personalize suggestions\n  // This is a simplified version - a real implementation would use more sophisticated logic\n  if (history && history.length > 0) {\n    // Extract categories from user history\n    const historicalCategories = history\n      .filter(item => item.response && item.response.category)\n      .map(item => item.response.category);\n    \n    // If user has shown interest in specific categories, prioritize new suggestions from those\n    if (historicalCategories.length > 0) {\n      const favoriteCategoryCode = getMostFrequent(historicalCategories);\n      const relatedSuggestions = INTENT_CATEGORIES[favoriteCategoryCode]\n        .map(keyword => {\n          // Create a natural language suggestion based on the keyword\n          return keyword.length > 4 \n            ? `How can I improve my prayer ${keyword}?`\n            : `I struggle with ${keyword} in my prayers`;\n        })\n        .slice(0, 3); // Take up to 3 related suggestions\n      \n      // Combine personalized suggestions with some defaults\n      return [...relatedSuggestions, ...defaultSuggestions].slice(0, 5);\n    }\n  }\n  \n  return defaultSuggestions;\n};\n\n/**\n * Helper function to find most frequent item in an array\n */\nconst getMostFrequent = (arr) => {\n  const counts = arr.reduce((a, c) => {\n    a[c] = (a[c] || 0) + 1;\n    return a;\n  }, {});\n  \n  return Object.keys(counts).reduce((a, b) => counts[a] > counts[b] ? a : b, null);\n};\n\nconst prayerIntentService = {\n  getPrayerIntentGuidance,\n  getSuggestedIntentions\n};\n\nexport default prayerIntentService;","/**\n * Mind State Service\n * \n * This service handles spiritual state assessments through questionnaires\n * and provides visualizations based on the user's current spiritual state.\n */\n\nimport analyticsService from './analyticsService';\n\n// Mind state categories with descriptions\nexport const MIND_STATES = {\n  SERENE: {\n    id: 'SERENE',\n    title: 'Serene & Present',\n    description: 'Your heart is at peace and receptive to spiritual connection',\n    color: '#a8d5ba', // Soft green\n    backgroundImage: 'serene-nature.jpg',\n    recommendation: 'This is an excellent state for deep, meaningful prayer. Focus on gratitude.'\n  },\n  REFLECTIVE: {\n    id: 'REFLECTIVE',\n    title: 'Reflective & Contemplative',\n    description: 'You\\'re in a thoughtful state, seeking meaning and understanding',\n    color: '#94b0da', // Soft blue\n    backgroundImage: 'reflective-sky.jpg',\n    recommendation: 'Channel your contemplative energy into understanding the meanings of your prayer.'\n  },\n  ANXIOUS: {\n    id: 'ANXIOUS',\n    title: 'Anxious & Distracted',\n    description: 'Your mind is busy with concerns, making focus challenging',\n    color: '#f9c784', // Warm amber\n    backgroundImage: 'calming-waves.jpg',\n    recommendation: 'Begin with deep breathing and shorter prayers with complete focus.'\n  },\n  GRATEFUL: {\n    id: 'GRATEFUL',\n    title: 'Grateful & Appreciative',\n    description: 'Your heart is filled with thankfulness and recognition of blessings',\n    color: '#bbdefb', // Light blue\n    backgroundImage: 'sunrise-glow.jpg',\n    recommendation: 'Express your gratitude explicitly in your prayers and personal supplications.'\n  },\n  SEEKING: {\n    id: 'SEEKING',\n    title: 'Seeking & Yearning',\n    description: 'You\\'re actively seeking guidance and spiritual nourishment',\n    color: '#d0bdf4', // Soft purple\n    backgroundImage: 'starry-night.jpg',\n    recommendation: 'Incorporate specific questions or needs in your personal supplications.'\n  },\n  DISCONNECTED: {\n    id: 'DISCONNECTED',\n    title: 'Spiritually Disconnected',\n    description: 'You\\'re feeling distant from your spiritual practice',\n    color: '#e0e0e0', // Soft gray\n    backgroundImage: 'misty-forest.jpg',\n    recommendation: 'Start with simple remembrance phrases and be patient with yourself.'\n  },\n  FATIGUED: {\n    id: 'FATIGUED',\n    title: 'Physically or Mentally Fatigued',\n    description: 'Your energy levels are low, affecting your spiritual focus',\n    color: '#ffcc80', // Soft orange\n    backgroundImage: 'gentle-sunset.jpg',\n    recommendation: 'Consider shorter but fully engaged prayers, perhaps sitting if needed.'\n  },\n  INSPIRED: {\n    id: 'INSPIRED',\n    title: 'Inspired & Motivated',\n    description: 'You feel spiritually uplifted and ready to engage deeply',\n    color: '#c5e1a5', // Light green\n    backgroundImage: 'lush-gardens.jpg',\n    recommendation: 'Channel this energy into extended worship and deeper contemplation.'\n  }\n};\n\n// Assessment questions to determine mind state\nconst QUESTIONNAIRE = [\n  {\n    id: 'energy',\n    question: 'How would you describe your energy level right now?',\n    options: [\n      { text: 'Calm and balanced', states: ['SERENE', 'REFLECTIVE'] },\n      { text: 'Energetic and uplifted', states: ['INSPIRED', 'GRATEFUL'] },\n      { text: 'Restless or anxious', states: ['ANXIOUS'] },\n      { text: 'Low or depleted', states: ['FATIGUED', 'DISCONNECTED'] }\n    ]\n  },\n  {\n    id: 'focus',\n    question: 'How easy is it for you to focus at this moment?',\n    options: [\n      { text: 'I can focus easily', states: ['SERENE', 'INSPIRED'] },\n      { text: 'I\\'m somewhat distracted', states: ['REFLECTIVE', 'SEEKING'] },\n      { text: 'My mind is racing with thoughts', states: ['ANXIOUS'] },\n      { text: 'I\\'m struggling to concentrate', states: ['FATIGUED', 'DISCONNECTED'] }\n    ]\n  },\n  {\n    id: 'connection',\n    question: 'How connected do you feel spiritually right now?',\n    options: [\n      { text: 'Deeply connected', states: ['INSPIRED', 'GRATEFUL'] },\n      { text: 'Somewhat connected', states: ['SERENE', 'REFLECTIVE'] },\n      { text: 'Seeking connection', states: ['SEEKING'] },\n      { text: 'Feeling distant', states: ['DISCONNECTED', 'ANXIOUS'] }\n    ]\n  },\n  {\n    id: 'gratitude',\n    question: 'How present is gratitude in your heart at this moment?',\n    options: [\n      { text: 'Overwhelmingly grateful', states: ['GRATEFUL'] },\n      { text: 'Appreciative of many things', states: ['SERENE', 'INSPIRED'] },\n      { text: 'Focused on other feelings', states: ['REFLECTIVE', 'SEEKING'] },\n      { text: 'Difficult to feel grateful now', states: ['ANXIOUS', 'DISCONNECTED'] }\n    ]\n  },\n  {\n    id: 'purpose',\n    question: 'What is your primary intention for prayer right now?',\n    options: [\n      { text: 'Seeking peace and presence', states: ['SERENE', 'ANXIOUS'] },\n      { text: 'Expressing gratitude', states: ['GRATEFUL'] },\n      { text: 'Seeking guidance or answers', states: ['SEEKING', 'REFLECTIVE'] },\n      { text: 'Fulfilling my obligation', states: ['DISCONNECTED', 'FATIGUED'] },\n      { text: 'Deepening my spiritual practice', states: ['INSPIRED'] }\n    ]\n  }\n];\n\n/**\n * Get the questionnaire for mind state assessment\n * @returns {Array} List of questions with options\n */\nexport const getMindStateQuestionnaire = () => {\n  return QUESTIONNAIRE;\n};\n\n/**\n * Analyze questionnaire responses to determine the user's mind state\n * @param {Object} responses - Object mapping question IDs to selected option indices\n * @returns {Object} The determined mind state with visualization properties\n */\nexport const analyzeMindState = (responses) => {\n  try {\n    if (!responses || Object.keys(responses).length === 0) {\n      // Return a default mind state if no responses\n      return MIND_STATES.REFLECTIVE;\n    }\n    \n    // Collect all potential states from the responses\n    const stateVotes = {};\n    Object.entries(responses).forEach(([questionId, optionIndex]) => {\n      const question = QUESTIONNAIRE.find(q => q.id === questionId);\n      if (question && question.options[optionIndex]) {\n        const states = question.options[optionIndex].states || [];\n        states.forEach(state => {\n          stateVotes[state] = (stateVotes[state] || 0) + 1;\n        });\n      }\n    });\n    \n    // Find the state(s) with the most votes\n    let maxVotes = 0;\n    let topStates = [];\n    \n    Object.entries(stateVotes).forEach(([state, votes]) => {\n      if (votes > maxVotes) {\n        maxVotes = votes;\n        topStates = [state];\n      } else if (votes === maxVotes) {\n        topStates.push(state);\n      }\n    });\n    \n    // If there are multiple top states, choose one based on priority\n    // (in a real app, you might use more sophisticated logic)\n    const selectedStateId = topStates[0] || 'REFLECTIVE'; // Default to REFLECTIVE if no match\n    \n    // Track the determined state for analytics\n    analyticsService.trackEvent('mind_state_determined', {\n      state: selectedStateId,\n      responsesGiven: Object.keys(responses).length\n    });\n    \n    return MIND_STATES[selectedStateId];\n  } catch (error) {\n    console.error('Error analyzing mind state:', error);\n    // Return a fallback state\n    return MIND_STATES.REFLECTIVE;\n  }\n};\n\n/**\n * Get all possible mind states\n * @returns {Object} Dictionary of all mind states\n */\nexport const getAllMindStates = () => {\n  return MIND_STATES;\n};\n\n/**\n * Get visualization properties for a specific mind state\n * @param {string} stateId - Mind state identifier\n * @returns {Object} Visualization properties for the state\n */\nexport const getVisualizationForState = (stateId) => {\n  const state = MIND_STATES[stateId] || MIND_STATES.REFLECTIVE;\n  \n  return {\n    color: state.color,\n    backgroundImage: state.backgroundImage,\n    title: state.title\n  };\n};\n\n/**\n * Get tailored prayer recommendations based on mind state\n * @param {string} stateId - Mind state identifier\n * @param {string} prayerType - Type of prayer (optional)\n * @returns {Object} Personalized recommendations\n */\nexport const getPrayerRecommendations = (stateId, prayerType = 'general') => {\n  const state = MIND_STATES[stateId] || MIND_STATES.REFLECTIVE;\n  \n  // Base recommendations from the state\n  const baseRecommendation = {\n    text: state.recommendation,\n    practices: []\n  };\n  \n  // Add specific practices based on the state\n  switch (stateId) {\n    case 'ANXIOUS':\n      baseRecommendation.practices = [\n        'Begin with 2 minutes of deep breathing',\n        'Focus only on the current prayer position',\n        'If thoughts wander, gently label them \"thinking\" and return to prayer'\n      ];\n      break;\n    case 'FATIGUED':\n      baseRecommendation.practices = [\n        'Consider praying sitting if needed',\n        'Focus on quality over quantity',\n        'Recite shorter surahs with full understanding'\n      ];\n      break;\n    case 'DISCONNECTED':\n      baseRecommendation.practices = [\n        'Begin with simple dhikr (remembrance)',\n        'Don\\'t judge yourself for feeling distant',\n        'Focus on the physical sensations of prayer movements'\n      ];\n      break;\n    case 'SERENE':\n      baseRecommendation.practices = [\n        'Extend your prostrations slightly',\n        'Add personal duas after obligatory prayers',\n        'Reflect deeply on the meanings of what you recite'\n      ];\n      break;\n    case 'INSPIRED':\n      baseRecommendation.practices = [\n        'Consider additional voluntary prayers',\n        'Extend your worship with Quran recitation',\n        'Journal your spiritual insights after prayer'\n      ];\n      break;\n    default:\n      baseRecommendation.practices = [\n        'Focus on the meaning of what you recite',\n        'Be mindful of each prayer position',\n        'Add personal supplications in your own language'\n      ];\n  }\n  \n  // In a more complex implementation, you could further customize\n  // based on prayerType (Fajr, Dhuhr, etc.)\n  \n  return baseRecommendation;\n};\n\nconst mindStateService = {\n  getMindStateQuestionnaire,\n  analyzeMindState,\n  getAllMindStates,\n  getVisualizationForState,\n  getPrayerRecommendations\n};\n\nexport default mindStateService;","/**\n * Lifestyle Compass Service\n * \n * This service provides personalized Islamic lifestyle guidance based on\n * users' goals, current situations, and spiritual state.\n */\n\nimport analyticsService from './analyticsService';\nimport prayerIntentService from './prayerIntentService';\nimport mindStateService from './mindStateService';\n\n// Life areas that the compass covers\nexport const LIFE_AREAS = {\n  FAITH: {\n    id: 'FAITH',\n    title: 'Faith & Spiritual Growth',\n    description: 'Strengthen your connection with Allah and deepen your spiritual practice',\n    icon: 'faith',\n    color: '#3f51b5', // Deep blue\n    badges: ['TAHAJJUD_DEVOTEE', 'KHUSHU_MASTER', 'DHIKR_PRACTITIONER']\n  },\n  PRAYER: {\n    id: 'PRAYER',\n    title: 'Prayer & Worship',\n    description: 'Enhance your salah and develop consistency in worship',\n    icon: 'prayer',\n    color: '#673ab7', // Deep purple\n    badges: ['FAJR_CHAMPION', 'CONSISTENT_WORSHIPPER', 'PRAYER_FOCUS']\n  },\n  QURAN: {\n    id: 'QURAN',\n    title: 'Quran & Knowledge',\n    description: 'Build your relationship with the Quran and Islamic knowledge',\n    icon: 'quran',\n    color: '#4caf50', // Green\n    badges: ['QURAN_COMPANION', 'KNOWLEDGE_SEEKER', 'MEMORIZATION_MILESTONE']\n  },\n  FAMILY: {\n    id: 'FAMILY',\n    title: 'Family & Relationships',\n    description: 'Nurture family life and relationships according to Islamic values',\n    icon: 'family',\n    color: '#e91e63', // Pink\n    badges: ['FAMILY_LEADER', 'PARENT_MENTOR', 'MARRIAGE_DEVOTEE']\n  },\n  COMMUNITY: {\n    id: 'COMMUNITY',\n    title: 'Community & Service',\n    description: 'Engage meaningfully with your community and serve others',\n    icon: 'community',\n    color: '#ff9800', // Orange\n    badges: ['COMMUNITY_PILLAR', 'SADAQAH_GIVER', 'DAWAH_AMBASSADOR']\n  },\n  HEALTH: {\n    id: 'HEALTH',\n    title: 'Health & Wellbeing',\n    description: 'Care for your physical and mental health the Islamic way',\n    icon: 'health',\n    color: '#009688', // Teal\n    badges: ['WELLNESS_WARRIOR', 'HEALTHY_HABITS', 'MINDFUL_MUSLIM']\n  },\n  ETHICS: {\n    id: 'ETHICS',\n    title: 'Character & Ethics',\n    description: 'Develop your akhlaq (character) and Islamic ethics',\n    icon: 'ethics',\n    color: '#795548', // Brown\n    badges: ['PATIENCE_MASTER', 'TRUTH_CHAMPION', 'GRATITUDE_PRACTITIONER']\n  },\n  LIFESTYLE: {\n    id: 'LIFESTYLE',\n    title: 'Daily Life & Habits',\n    description: 'Integrate Islamic principles into your daily routines',\n    icon: 'lifestyle',\n    color: '#2196f3', // Blue\n    badges: ['SUNNAH_PRACTITIONER', 'BALANCED_LIVING', 'HALAL_CONSUMER']\n  }\n};\n\n// Badges users can earn through the compass journeys\nexport const BADGES = {\n  // Faith & Spiritual Growth\n  TAHAJJUD_DEVOTEE: {\n    id: 'TAHAJJUD_DEVOTEE',\n    title: 'Tahajjud Devotee',\n    description: 'Establish a regular practice of night prayer',\n    level: 2,\n    area: 'FAITH',\n    requirements: 'Perform Tahajjud prayer at least 3 times per week for 4 weeks',\n    icon: 'night_prayer'\n  },\n  KHUSHU_MASTER: {\n    id: 'KHUSHU_MASTER',\n    title: 'Khushu Master',\n    description: 'Develop deep concentration in prayer',\n    level: 3,\n    area: 'FAITH',\n    requirements: 'Complete the Khushu development program and practice mindful prayer techniques',\n    icon: 'focus'\n  },\n  DHIKR_PRACTITIONER: {\n    id: 'DHIKR_PRACTITIONER',\n    title: 'Dhikr Practitioner',\n    description: 'Establish regular remembrance of Allah',\n    level: 1,\n    area: 'FAITH',\n    requirements: 'Maintain daily morning and evening adhkar for 21 days',\n    icon: 'remembrance'\n  },\n  \n  // Prayer & Worship\n  FAJR_CHAMPION: {\n    id: 'FAJR_CHAMPION',\n    title: 'Fajr Champion',\n    description: 'Consistently wake for Fajr prayer on time',\n    level: 2,\n    area: 'PRAYER',\n    requirements: 'Pray Fajr on time for 30 consecutive days',\n    icon: 'dawn'\n  },\n  CONSISTENT_WORSHIPPER: {\n    id: 'CONSISTENT_WORSHIPPER',\n    title: 'Consistent Worshipper',\n    description: 'Maintain regularity in all five daily prayers',\n    level: 2,\n    area: 'PRAYER',\n    requirements: 'Complete all five daily prayers on time for 21 consecutive days',\n    icon: 'prayer_beads'\n  },\n  PRAYER_FOCUS: {\n    id: 'PRAYER_FOCUS',\n    title: 'Prayer Focus',\n    description: 'Develop deep concentration in prayer',\n    level: 1,\n    area: 'PRAYER',\n    requirements: 'Complete the prayer mindfulness program',\n    icon: 'meditation'\n  },\n  \n  // Quran & Knowledge\n  QURAN_COMPANION: {\n    id: 'QURAN_COMPANION',\n    title: 'Quran Companion',\n    description: 'Develop a consistent relationship with the Quran',\n    level: 1,\n    area: 'QURAN',\n    requirements: 'Read Quran daily for at least 10 minutes for 30 days',\n    icon: 'book'\n  },\n  KNOWLEDGE_SEEKER: {\n    id: 'KNOWLEDGE_SEEKER',\n    title: 'Knowledge Seeker',\n    description: 'Pursue Islamic knowledge consistently',\n    level: 2,\n    area: 'QURAN',\n    requirements: 'Complete 5 Islamic courses or books',\n    icon: 'scholar'\n  },\n  MEMORIZATION_MILESTONE: {\n    id: 'MEMORIZATION_MILESTONE',\n    title: 'Memorization Milestone',\n    description: 'Commit Quranic surahs to memory',\n    level: 3,\n    area: 'QURAN',\n    requirements: 'Memorize a new surah or portion of the Quran',\n    icon: 'brain'\n  },\n  \n  // Family & Relationships\n  FAMILY_LEADER: {\n    id: 'FAMILY_LEADER',\n    title: 'Family Leader',\n    description: 'Lead your family in Islamic activities',\n    level: 2,\n    area: 'FAMILY',\n    requirements: 'Establish and maintain regular family Islamic activities for 1 month',\n    icon: 'family_group'\n  },\n  PARENT_MENTOR: {\n    id: 'PARENT_MENTOR',\n    title: 'Parent Mentor',\n    description: 'Guide children with Islamic principles',\n    level: 2,\n    area: 'FAMILY',\n    requirements: 'Implement structured Islamic education with your children',\n    icon: 'teaching'\n  },\n  MARRIAGE_DEVOTEE: {\n    id: 'MARRIAGE_DEVOTEE',\n    title: 'Marriage Devotee',\n    description: 'Strengthen marital bonds through Islamic practices',\n    level: 2,\n    area: 'FAMILY',\n    requirements: 'Complete the Islamic marriage enhancement program',\n    icon: 'heart'\n  },\n  \n  // Additional badges for other life areas would be defined similarly\n  COMMUNITY_PILLAR: {\n    id: 'COMMUNITY_PILLAR',\n    title: 'Community Pillar',\n    description: 'Actively contribute to your local Muslim community',\n    level: 2,\n    area: 'COMMUNITY',\n    requirements: 'Volunteer regularly with your local masjid or Islamic organization',\n    icon: 'mosque'\n  },\n  \n  SADAQAH_GIVER: {\n    id: 'SADAQAH_GIVER',\n    title: 'Sadaqah Giver',\n    description: 'Practice regular charity',\n    level: 1,\n    area: 'COMMUNITY',\n    requirements: 'Give sadaqah consistently for 8 weeks',\n    icon: 'charity'\n  },\n  \n  SUNNAH_PRACTITIONER: {\n    id: 'SUNNAH_PRACTITIONER',\n    title: 'Sunnah Practitioner',\n    description: 'Incorporate prophetic practices into daily life',\n    level: 1,\n    area: 'LIFESTYLE',\n    requirements: 'Adopt and maintain 5 sunnah practices in your routine',\n    icon: 'star'\n  }\n};\n\n// Resource types\nconst RESOURCE_TYPES = {\n  ARTICLE: 'article',\n  VIDEO: 'video',\n  AUDIO: 'audio',\n  BOOK: 'book',\n  DUA: 'dua',\n  HADITH: 'hadith',\n  QURAN: 'quran_verse',\n  INFOGRAPHIC: 'infographic',\n  COMMUNITY_TIP: 'community_tip',\n  APP: 'app',\n  COURSE: 'course',\n  TOOL: 'tool'\n};\n\n// Database of paths indexed by life area\nconst PATH_DATABASE = {\n  PRAYER: {\n    'prayer_consistency': {\n      id: 'prayer_consistency',\n      title: 'Establish Prayer Consistency',\n      description: 'Build a reliable prayer routine that fits your lifestyle and strengthens your spiritual practice.',\n      duration: '30 days',\n      difficulty: 'moderate',\n      prerequisites: [],\n      relatedPaths: ['prayer_focus', 'morning_routine'],\n      keywords: ['salah', 'prayer', 'consistency', 'routine', 'discipline'],\n      targetAudience: ['busy professionals', 'students', 'parents', 'beginners'],\n      badges: ['CONSISTENT_WORSHIPPER'],\n      milestones: [\n        {\n          title: 'Understanding Your Schedule',\n          steps: [\n            {\n              type: 'reflect',\n              description: 'Analyze your daily routine to identify prayer time challenges',\n              action: 'scheduleAnalysis',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.ARTICLE,\n                  title: 'Mapping Your Day for Prayer Success',\n                  url: '/resources/schedule-analysis',\n                  estimatedTime: '10 min'\n                }\n              ]\n            },\n            {\n              type: 'plan',\n              description: 'Set specific prayer time goals based on your schedule analysis',\n              action: 'setGoals',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.TOOL,\n                  title: 'Prayer Schedule Planner',\n                  url: '/tools/prayer-planner',\n                  estimatedTime: '15 min'\n                }\n              ]\n            }\n          ]\n        },\n        {\n          title: 'Creating Prayer Habits',\n          steps: [\n            {\n              type: 'habit',\n              description: 'Set up prayer notifications and reminders',\n              frequency: 'daily',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.ARTICLE,\n                  title: 'Effective Prayer Reminder Systems',\n                  url: '/resources/prayer-reminders',\n                  estimatedTime: '8 min'\n                }\n              ]\n            },\n            {\n              type: 'practice',\n              description: 'Identify and prepare dedicated prayer spaces at home, work, and other locations',\n              action: 'mapPrayerSpaces',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.ARTICLE,\n                  title: 'Creating Prayer-Friendly Spaces',\n                  url: '/resources/prayer-spaces',\n                  estimatedTime: '7 min'\n                },\n                {\n                  type: RESOURCE_TYPES.COMMUNITY_TIP,\n                  title: 'From the Community: Creative Prayer Spaces',\n                  content: \"I keep a compact prayer kit in my office drawer with a small mat, compass, and schedule. It's made praying at work much easier. - Aisha M.\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          title: 'Overcoming Challenges',\n          steps: [\n            {\n              type: 'learn',\n              description: 'Learn techniques for praying while traveling or in difficult situations',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.ARTICLE,\n                  title: 'Prayer During Travel: A Practical Guide',\n                  url: '/resources/travel-prayer',\n                  estimatedTime: '12 min'\n                },\n                {\n                  type: RESOURCE_TYPES.HADITH,\n                  title: 'Hadith on Prayer Concessions',\n                  content: 'Narrated Anas bin Malik: The Prophet would join together two prayers when traveling.',\n                  source: 'Sahih Bukhari'\n                }\n              ]\n            },\n            {\n              type: 'community',\n              description: 'Learn strategies others use to maintain prayer consistency',\n              action: 'communityInsights',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.COMMUNITY_TIP,\n                  title: 'From the Community: Work Prayer Solutions',\n                  content: \"I negotiated a short break time with my manager specifically for prayers. Being upfront about my needs made it much easier. - Omar K.\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          title: 'Building Long-term Consistency',\n          steps: [\n            {\n              type: 'habit',\n              description: 'Link prayers to existing habits in your routine',\n              frequency: 'daily',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.ARTICLE,\n                  title: 'Habit Stacking for Prayer Consistency',\n                  url: '/resources/habit-stacking',\n                  estimatedTime: '8 min'\n                }\n              ]\n            },\n            {\n              type: 'reflect',\n              description: 'Track your progress and adjust your strategy based on results',\n              action: 'journeyReflection',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.TOOL,\n                  title: 'Prayer Consistency Tracker',\n                  url: '/tools/prayer-tracker',\n                  estimatedTime: '5 min daily'\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    },\n    'prayer_focus': {\n      id: 'prayer_focus',\n      title: 'Deepen Your Prayer Focus',\n      description: 'Develop khushu\\' (mindful concentration) in prayer to transform your experience of worship.',\n      duration: '21 days',\n      difficulty: 'moderate',\n      prerequisites: [],\n      relatedPaths: ['prayer_consistency', 'mindfulness'],\n      keywords: ['khushu', 'concentration', 'mindfulness', 'presence', 'focus'],\n      targetAudience: ['all muslims', 'spiritual seekers'],\n      badges: ['PRAYER_FOCUS', 'KHUSHU_MASTER'],\n      milestones: [\n        {\n          title: 'Understanding Khushu\\'',\n          steps: [\n            {\n              type: 'learn',\n              description: 'Learn about the concept and importance of khushu\\' in prayer',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.ARTICLE,\n                  title: 'The Essence of Khushu\\' in Prayer',\n                  url: '/resources/khushu-essence',\n                  estimatedTime: '12 min'\n                },\n                {\n                  type: RESOURCE_TYPES.QURAN,\n                  title: 'Quran on Khushu\\'',\n                  content: 'Successful indeed are the believers who are humble in their prayers',\n                  reference: 'Surah Al-Mu\\'minun 23:1-2'\n                }\n              ]\n            },\n            {\n              type: 'reflect',\n              description: 'Assess your current level of focus during prayer',\n              action: 'mindStateAssessment',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.TOOL,\n                  title: 'Prayer Focus Self-Assessment',\n                  url: '/tools/focus-assessment',\n                  estimatedTime: '8 min'\n                }\n              ]\n            }\n          ]\n        },\n        {\n          title: 'Preparation for Focus',\n          steps: [\n            {\n              type: 'practice',\n              description: 'Develop a pre-prayer ritual to prepare your mind',\n              frequency: 'before each prayer',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.ARTICLE,\n                  title: 'Creating a Pre-Prayer Mindfulness Ritual',\n                  url: '/resources/pre-prayer-ritual',\n                  estimatedTime: '7 min'\n                },\n                {\n                  type: RESOURCE_TYPES.AUDIO,\n                  title: 'Guided Pre-Prayer Meditation',\n                  url: '/resources/meditation-audio',\n                  estimatedTime: '3 min'\n                }\n              ]\n            },\n            {\n              type: 'practice',\n              description: 'Create a distraction-free prayer environment',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.ARTICLE,\n                  title: 'Designing Your Prayer Space for Focus',\n                  url: '/resources/focused-space',\n                  estimatedTime: '10 min'\n                }\n              ]\n            }\n          ]\n        },\n        {\n          title: 'During Prayer Techniques',\n          steps: [\n            {\n              type: 'practice',\n              description: 'Focus on the meaning of recitations',\n              frequency: 'every prayer',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.ARTICLE,\n                  title: 'Understanding the Meaning of Surah Al-Fatiha',\n                  url: '/resources/fatiha-meaning',\n                  estimatedTime: '15 min'\n                },\n                {\n                  type: RESOURCE_TYPES.ARTICLE,\n                  title: 'Connecting with the Words You Recite',\n                  url: '/resources/recitation-connection',\n                  estimatedTime: '8 min'\n                }\n              ]\n            },\n            {\n              type: 'habit',\n              description: 'Practice mindful body positioning during prayer',\n              frequency: 'every prayer',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.INFOGRAPHIC,\n                  title: 'The Spiritual Meaning of Prayer Positions',\n                  url: '/resources/prayer-positions',\n                  estimatedTime: '5 min'\n                }\n              ]\n            }\n          ]\n        },\n        {\n          title: 'Advanced Focus Techniques',\n          steps: [\n            {\n              type: 'practice',\n              description: 'Use visualization techniques during prayer',\n              frequency: 'daily',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.ARTICLE,\n                  title: 'Sacred Visualization in Prayer',\n                  url: '/resources/prayer-visualization',\n                  estimatedTime: '10 min'\n                }\n              ]\n            },\n            {\n              type: 'community',\n              description: 'Share a technique that improved your focus with others',\n              action: 'shareTip',\n              resources: []\n            }\n          ]\n        }\n      ]\n    }\n  },\n  FAMILY: {\n    'new_parent': {\n      id: 'new_parent',\n      title: 'Islamic Parenting Journey',\n      description: 'Navigate early parenthood with Islamic principles and create a nurturing environment for your child\\'s spiritual development.',\n      duration: 'Ongoing',\n      difficulty: 'challenging',\n      prerequisites: [],\n      relatedPaths: ['marriage_harmony', 'family_worship'],\n      keywords: ['parenting', 'children', 'family', 'tarbiyah', 'newborn'],\n      targetAudience: ['new parents', 'expecting parents'],\n      badges: ['PARENT_MENTOR'],\n      milestones: [\n        {\n          title: 'Welcoming Your Child',\n          steps: [\n            {\n              type: 'learn',\n              description: 'Learn the Islamic practices for welcoming a newborn',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.ARTICLE,\n                  title: 'Sunnah Practices for Newborns',\n                  url: '/resources/newborn-sunnah',\n                  estimatedTime: '15 min'\n                },\n                {\n                  type: RESOURCE_TYPES.AUDIO,\n                  title: 'Adhan for Newborn',\n                  url: '/resources/adhan-audio',\n                  estimatedTime: '3 min'\n                }\n              ]\n            },\n            {\n              type: 'practice',\n              description: 'Plan the aqiqah celebration',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.ARTICLE,\n                  title: 'Planning an Aqiqah: A Complete Guide',\n                  url: '/resources/aqiqah-guide',\n                  estimatedTime: '20 min'\n                }\n              ]\n            }\n          ]\n        },\n        {\n          title: 'Creating an Islamic Environment',\n          steps: [\n            {\n              type: 'practice',\n              description: 'Incorporate Islamic elements in your child\\'s space',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.ARTICLE,\n                  title: 'Designing an Islamic Nursery',\n                  url: '/resources/islamic-nursery',\n                  estimatedTime: '12 min'\n                },\n                {\n                  type: RESOURCE_TYPES.COMMUNITY_TIP,\n                  title: 'From the Community: Islamic Nursery Ideas',\n                  content: \"I found beautiful Islamic wooden toys and alphabet blocks that introduce Islamic concepts through play. - Sarah J.\"\n                }\n              ]\n            },\n            {\n              type: 'habit',\n              description: 'Begin daily Quran recitation for your baby',\n              frequency: 'daily',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.ARTICLE,\n                  title: 'The Benefits of Quran Recitation for Babies',\n                  url: '/resources/quran-babies',\n                  estimatedTime: '8 min'\n                },\n                {\n                  type: RESOURCE_TYPES.AUDIO,\n                  title: 'Soothing Quran Recitations for Babies',\n                  url: '/resources/baby-quran-audio',\n                  estimatedTime: '30 min'\n                }\n              ]\n            }\n          ]\n        },\n        {\n          title: 'Self-Care for Muslim Parents',\n          steps: [\n            {\n              type: 'learn',\n              description: 'Learn about balancing parenting duties with worship',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.ARTICLE,\n                  title: 'Maintaining Your Spiritual Practice as a New Parent',\n                  url: '/resources/parent-spirituality',\n                  estimatedTime: '10 min'\n                },\n                {\n                  type: RESOURCE_TYPES.HADITH,\n                  title: 'Hadith on Parenting Reward',\n                  content: 'The Prophet (ﷺ) said: \"When a person dies, his deeds come to an end except for three: ongoing charity, beneficial knowledge, or a righteous child who prays for him.\"',\n                  source: 'Sahih Muslim'\n                }\n              ]\n            },\n            {\n              type: 'community',\n              description: 'Connect with other Muslim parents for support',\n              action: 'joinGroup',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.TOOL,\n                  title: 'Muslim Parents Support Network',\n                  url: '/community/parents-network',\n                  estimatedTime: 'Ongoing'\n                }\n              ]\n            }\n          ]\n        },\n        {\n          title: 'Early Islamic Education',\n          steps: [\n            {\n              type: 'plan',\n              description: 'Create a framework for your child\\'s Islamic education',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.ARTICLE,\n                  title: 'Early Islamic Education Principles',\n                  url: '/resources/early-islamic-education',\n                  estimatedTime: '15 min'\n                },\n                {\n                  type: RESOURCE_TYPES.BOOK,\n                  title: 'Raising Righteous Children',\n                  author: 'Dr. Muhammad Al-Jibaly',\n                  url: '/resources/books/raising-children',\n                  estimatedTime: 'Extended reading'\n                }\n              ]\n            },\n            {\n              type: 'practice',\n              description: 'Introduce simple Islamic concepts through daily interactions',\n              frequency: 'daily',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.ARTICLE,\n                  title: 'Teaching Tawheed to Toddlers',\n                  url: '/resources/toddler-tawheed',\n                  estimatedTime: '10 min'\n                },\n                {\n                  type: RESOURCE_TYPES.INFOGRAPHIC,\n                  title: 'First Islamic Words & Concepts for Children',\n                  url: '/resources/first-islamic-words',\n                  estimatedTime: '5 min'\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  },\n  FAITH: {\n    'spiritual_revival': {\n      id: 'spiritual_revival',\n      title: 'Spiritual Revival Journey',\n      description: 'Reconnect with your faith and revitalize your spiritual life after a period of disconnection or stagnation.',\n      duration: '40 days',\n      difficulty: 'moderate',\n      prerequisites: [],\n      relatedPaths: ['prayer_focus', 'quran_connection'],\n      keywords: ['revival', 'reconnection', 'spiritual', 'faith', 'renewal'],\n      targetAudience: ['those feeling disconnected', 'spiritual seekers', 'returning Muslims'],\n      badges: ['DHIKR_PRACTITIONER'],\n      milestones: [\n        {\n          title: 'Assessing Your Spiritual State',\n          steps: [\n            {\n              type: 'reflect',\n              description: 'Honestly evaluate your current spiritual state and identify areas of disconnection',\n              action: 'mindStateAssessment',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.ARTICLE,\n                  title: 'Understanding Spiritual Disconnection',\n                  url: '/resources/spiritual-disconnection',\n                  estimatedTime: '12 min'\n                },\n                {\n                  type: RESOURCE_TYPES.TOOL,\n                  title: 'Spiritual State Assessment',\n                  url: '/tools/spiritual-assessment',\n                  estimatedTime: '10 min'\n                }\n              ]\n            },\n            {\n              type: 'plan',\n              description: 'Set gentle, achievable spiritual goals for your revival journey',\n              action: 'setGoals',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.ARTICLE,\n                  title: 'Setting Compassionate Spiritual Goals',\n                  url: '/resources/compassionate-goals',\n                  estimatedTime: '8 min'\n                }\n              ]\n            }\n          ]\n        },\n        {\n          title: 'Rebuilding Your Connection',\n          steps: [\n            {\n              type: 'habit',\n              description: 'Begin a simple, consistent dhikr practice',\n              frequency: 'twice daily',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.ARTICLE,\n                  title: 'Simple Dhikr for Spiritual Reconnection',\n                  url: '/resources/simple-dhikr',\n                  estimatedTime: '7 min'\n                },\n                {\n                  type: RESOURCE_TYPES.AUDIO,\n                  title: 'Guided Morning & Evening Adhkar',\n                  url: '/resources/guided-adhkar',\n                  estimatedTime: '5 min each'\n                }\n              ]\n            },\n            {\n              type: 'practice',\n              description: 'Spend time in natural settings reflecting on Allah\\'s creation',\n              frequency: 'weekly',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.ARTICLE,\n                  title: 'Nature as a Path to Allah',\n                  url: '/resources/nature-reflection',\n                  estimatedTime: '10 min'\n                },\n                {\n                  type: RESOURCE_TYPES.QURAN,\n                  title: 'Quran Verses on Natural Signs',\n                  content: 'We will show them Our signs in the horizons and within themselves until it becomes clear to them that it is the truth.',\n                  reference: 'Surah Fussilat 41:53'\n                }\n              ]\n            }\n          ]\n        },\n        {\n          title: 'Healing Spiritual Wounds',\n          steps: [\n            {\n              type: 'reflect',\n              description: 'Address sources of guilt, shame, or spiritual trauma',\n              action: 'journaling',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.ARTICLE,\n                  title: 'Healing Religious Guilt Through Islamic Principles',\n                  url: '/resources/healing-guilt',\n                  estimatedTime: '15 min'\n                },\n                {\n                  type: RESOURCE_TYPES.HADITH,\n                  title: 'Hadith on Allah\\'s Mercy',\n                  content: 'The Prophet (ﷺ) said: \"Allah\\'s mercy overcomes His anger.\"',\n                  source: 'Sahih Bukhari'\n                }\n              ]\n            },\n            {\n              type: 'practice',\n              description: 'Develop a personal dua for spiritual healing',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.ARTICLE,\n                  title: 'Crafting Personal Duas for Healing',\n                  url: '/resources/personal-duas',\n                  estimatedTime: '8 min'\n                },\n                {\n                  type: RESOURCE_TYPES.DUA,\n                  title: 'Dua for Relief from Anxiety',\n                  content: 'اللَّهُمَّ إِنِّي أَعُوذُ بِكَ مِنَ الْهَمِّ وَالْحَزَنِ، وَالْعَجْزِ وَالْكَسَلِ، وَالْبُخْلِ وَالْجُبْنِ، وَضَلَعِ الدَّيْنِ، وَغَلَبَةِ الرِّجَالِ',\n                  transliteration: 'Allahumma inni a\\'udhu bika minal-hammi wal-hazan, wal-\\'ajzi wal-kasal, wal-bukhli wal-jubn, wa dala\\'id-dayn wa ghalabatir-rijal',\n                  translation: 'O Allah, I seek refuge in You from anxiety and sorrow, weakness and laziness, miserliness and cowardice, the burden of debts and from being overpowered by men',\n                  source: 'Sahih Bukhari'\n                }\n              ]\n            }\n          ]\n        },\n        {\n          title: 'Growing Forward',\n          steps: [\n            {\n              type: 'habit',\n              description: 'Join a supportive Islamic community or study circle',\n              frequency: 'weekly',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.ARTICLE,\n                  title: 'Finding Your Spiritual Community',\n                  url: '/resources/spiritual-community',\n                  estimatedTime: '10 min'\n                }\n              ]\n            },\n            {\n              type: 'reflect',\n              description: 'Establish a personal spiritual growth plan',\n              action: 'createPlan',\n              resources: [\n                {\n                  type: RESOURCE_TYPES.TOOL,\n                  title: 'Ongoing Spiritual Growth Planner',\n                  url: '/tools/growth-planner',\n                  estimatedTime: '20 min'\n                },\n                {\n                  type: RESOURCE_TYPES.COMMUNITY_TIP,\n                  title: 'From the Community: Spiritual Revival',\n                  content: \"My revival journey began with just 5 minutes of Quran each day. Small, consistent steps eventually brought me back to a deep connection I'd never experienced before. - Kareem S.\"\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  }\n  // Additional life areas would be populated with their respective paths\n};\n\n// Get recommended paths based on mind state\nexport const getPathsForMindState = (mindStateId) => {\n  // Different mind states will benefit from different types of paths\n  const pathRecommendations = {\n    ANXIOUS: ['spiritual_revival', 'prayer_focus'],\n    DISCONNECTED: ['spiritual_revival', 'prayer_consistency'],\n    FATIGUED: ['prayer_consistency'],\n    SERENE: ['prayer_focus', 'new_parent'],\n    REFLECTIVE: ['spiritual_revival', 'prayer_focus'],\n    SEEKING: ['spiritual_revival', 'prayer_focus'],\n    GRATEFUL: ['prayer_focus', 'new_parent'],\n    INSPIRED: ['prayer_focus', 'new_parent']\n  };\n  \n  const recommendedPathIds = pathRecommendations[mindStateId] || ['prayer_consistency', 'spiritual_revival'];\n  \n  // Collect the actual path objects\n  const recommendations = [];\n  \n  recommendedPathIds.forEach(pathId => {\n    // Find which life area contains this path\n    for (const [areaId, paths] of Object.entries(PATH_DATABASE)) {\n      if (paths[pathId]) {\n        recommendations.push({\n          ...paths[pathId],\n          areaId,\n          area: LIFE_AREAS[areaId]\n        });\n        break;\n      }\n    }\n  });\n  \n  return recommendations;\n};\n\n/**\n * Get all available life areas for the compass\n * @returns {Object} Dictionary of life areas\n */\nexport const getLifeAreas = () => {\n  return LIFE_AREAS;\n};\n\n/**\n * Get all available badges\n * @returns {Object} Dictionary of badges\n */\nexport const getAllBadges = () => {\n  return BADGES;\n};\n\n/**\n * Get suggested paths based on user input\n * @param {string} query - User's input query\n * @param {Object} userProfile - User profile for personalization\n * @returns {Array} List of suggested paths\n */\nexport const getSuggestedPaths = (query, userProfile = {}) => {\n  // This is a simplified version - in production, this would use\n  // more sophisticated matching with NLP or ML techniques\n  const lowerQuery = query.toLowerCase();\n  const matches = [];\n  \n  // Match keywords to life areas and paths\n  Object.entries(PATH_DATABASE).forEach(([areaId, areaPaths]) => {\n    const area = LIFE_AREAS[areaId];\n    \n    // Check if query matches the life area\n    const areaMatches = \n      lowerQuery.includes(area.title.toLowerCase()) || \n      lowerQuery.includes(area.description.toLowerCase());\n    \n    // Look through each path in this area\n    Object.entries(areaPaths).forEach(([pathId, path]) => {\n      // Check for direct matches in path title or description\n      const pathMatches = \n        lowerQuery.includes(path.title.toLowerCase()) || \n        lowerQuery.includes(path.description.toLowerCase());\n      \n      // Check for keyword matches\n      const keywordMatch = path.keywords && path.keywords.some(keyword => \n        lowerQuery.includes(keyword.toLowerCase())\n      );\n      \n      // Check for target audience matches\n      const audienceMatch = path.targetAudience && path.targetAudience.some(audience => \n        lowerQuery.includes(audience.toLowerCase())\n      );\n      \n      if (areaMatches || pathMatches || keywordMatch || audienceMatch) {\n        // Calculate relevance score for ranking\n        const relevance = (areaMatches ? 1 : 0) + \n                          (pathMatches ? 2 : 0) + \n                          (keywordMatch ? 2 : 0) + \n                          (audienceMatch ? 3 : 0);\n        \n        matches.push({\n          id: pathId,\n          areaId: areaId,\n          area: LIFE_AREAS[areaId],\n          path: path,\n          relevance\n        });\n      }\n    });\n  });\n  \n  // Sort by relevance\n  matches.sort((a, b) => b.relevance - a.relevance);\n  \n  // Consider mind state if available in user profile\n  if (userProfile.mindState) {\n    const mindStatePaths = getPathsForMindState(userProfile.mindState);\n    \n    // Boost the rank of paths that are recommended for the user's mind state\n    matches.forEach(match => {\n      if (mindStatePaths.some(msp => msp.id === match.id)) {\n        match.relevance += 3;\n        match.mindStateMatch = true;\n      }\n    });\n    \n    // Re-sort after boosting\n    matches.sort((a, b) => b.relevance - a.relevance);\n  }\n  \n  // Track this query\n  analyticsService.trackEvent('lifestyle_compass_search', {\n    query,\n    resultCount: matches.length,\n    topResult: matches.length > 0 ? matches[0].id : null\n  });\n  \n  return matches;\n};\n\n/**\n * Get details for a specific path\n * @param {string} areaId - Life area ID\n * @param {string} pathId - Path ID\n * @returns {Object} Complete path details\n */\nexport const getPathDetails = (areaId, pathId) => {\n  try {\n    if (PATH_DATABASE[areaId] && PATH_DATABASE[areaId][pathId]) {\n      const path = PATH_DATABASE[areaId][pathId];\n      const area = LIFE_AREAS[areaId];\n      \n      // Track this path view\n      analyticsService.trackEvent('lifestyle_compass_view_path', {\n        areaId,\n        pathId\n      });\n      \n      return {\n        id: pathId,\n        areaId,\n        area,\n        ...path\n      };\n    }\n    return null;\n  } catch (error) {\n    console.error('Error getting path details:', error);\n    return null;\n  }\n};\n\n/**\n * Start a new journey on a path\n * @param {string} userId - User identifier\n * @param {string} areaId - Life area ID\n * @param {string} pathId - Path ID\n * @param {Object} userProfile - User profile information\n * @returns {Object} Journey details with progress tracking\n */\nexport const startJourney = (userId, areaId, pathId, userProfile = {}) => {\n  try {\n    const pathDetails = getPathDetails(areaId, pathId);\n    \n    if (!pathDetails) {\n      throw new Error('Path not found');\n    }\n    \n    // Create a new journey object with progress tracking\n    const journey = {\n      id: `journey_${Date.now()}`,\n      userId,\n      pathId,\n      areaId,\n      path: pathDetails,\n      startDate: new Date().toISOString(),\n      lastUpdated: new Date().toISOString(),\n      completed: false,\n      progress: {\n        currentMilestone: 0,\n        currentStep: 0,\n        completedSteps: [],\n        milestoneProgress: pathDetails.milestones.map(milestone => ({\n          title: milestone.title,\n          completed: false,\n          steps: milestone.steps.map(step => ({\n            description: step.description,\n            completed: false,\n            dateCompleted: null,\n            notes: ''\n          }))\n        }))\n      },\n      reflections: [],\n      mindState: userProfile.mindState || null\n    };\n    \n    // In a real implementation, this would be saved to the database\n    \n    // Track journey start\n    analyticsService.trackEvent('lifestyle_compass_start_journey', {\n      userId,\n      areaId,\n      pathId,\n      mindState: userProfile.mindState\n    });\n    \n    return journey;\n  } catch (error) {\n    console.error('Error starting journey:', error);\n    return null;\n  }\n};\n\n/**\n * Update progress on a journey\n * @param {Object} journey - Current journey object\n * @param {number} milestoneIndex - Index of milestone being updated\n * @param {number} stepIndex - Index of step being updated\n * @param {boolean} completed - Whether the step is completed\n * @param {string} notes - Optional user notes about the step\n * @returns {Object} Updated journey\n */\nexport const updateJourneyProgress = (journey, milestoneIndex, stepIndex, completed, notes = '') => {\n  try {\n    const updatedJourney = { ...journey };\n    \n    // Update the specific step\n    updatedJourney.progress.milestoneProgress[milestoneIndex].steps[stepIndex].completed = completed;\n    updatedJourney.lastUpdated = new Date().toISOString();\n    \n    if (notes) {\n      updatedJourney.progress.milestoneProgress[milestoneIndex].steps[stepIndex].notes = notes;\n    }\n    \n    if (completed) {\n      updatedJourney.progress.milestoneProgress[milestoneIndex].steps[stepIndex].dateCompleted = new Date().toISOString();\n      \n      // Add to completed steps\n      updatedJourney.progress.completedSteps.push({\n        milestoneIndex,\n        stepIndex,\n        dateCompleted: new Date().toISOString()\n      });\n    }\n    \n    // Check if milestone is completed\n    const allMilestoneStepsCompleted = updatedJourney.progress.milestoneProgress[milestoneIndex].steps.every(step => step.completed);\n    \n    if (allMilestoneStepsCompleted) {\n      updatedJourney.progress.milestoneProgress[milestoneIndex].completed = true;\n      \n      // Move to next milestone if available\n      if (milestoneIndex < updatedJourney.progress.milestoneProgress.length - 1) {\n        updatedJourney.progress.currentMilestone = milestoneIndex + 1;\n        updatedJourney.progress.currentStep = 0;\n      } else {\n        // All milestones completed\n        updatedJourney.completed = true;\n        \n        // Maybe award a badge here\n        if (updatedJourney.path.badges && updatedJourney.path.badges.length > 0) {\n          // In a real implementation, you would add this badge to the user's profile\n          const earnedBadge = updatedJourney.path.badges[0];\n          \n          // Track badge earned\n          analyticsService.trackEvent('lifestyle_compass_badge_earned', {\n            userId: updatedJourney.userId,\n            badge: earnedBadge,\n            pathId: updatedJourney.pathId\n          });\n        }\n      }\n    } else {\n      // Move to next step in same milestone\n      const nextStep = stepIndex + 1;\n      if (nextStep < updatedJourney.progress.milestoneProgress[milestoneIndex].steps.length) {\n        updatedJourney.progress.currentStep = nextStep;\n      }\n    }\n    \n    // Track progress\n    analyticsService.trackEvent('lifestyle_compass_update_progress', {\n      userId: updatedJourney.userId,\n      journeyId: updatedJourney.id,\n      pathId: updatedJourney.pathId,\n      milestoneIndex,\n      stepIndex,\n      completed,\n      percentComplete: getJourneyCompletion(updatedJourney)\n    });\n    \n    // In a real implementation, this would be saved to the database\n    \n    return updatedJourney;\n  } catch (error) {\n    console.error('Error updating journey progress:', error);\n    return journey;\n  }\n};\n\n/**\n * Add a reflection to a journey\n * @param {Object} journey - Current journey object\n * @param {string} reflection - User's reflection text\n * @returns {Object} Updated journey\n */\nexport const addJourneyReflection = (journey, reflection) => {\n  try {\n    const updatedJourney = { ...journey };\n    \n    updatedJourney.reflections.push({\n      text: reflection,\n      date: new Date().toISOString()\n    });\n    \n    updatedJourney.lastUpdated = new Date().toISOString();\n    \n    // Track reflection added\n    analyticsService.trackEvent('lifestyle_compass_add_reflection', {\n      userId: updatedJourney.userId,\n      journeyId: updatedJourney.id,\n      pathId: updatedJourney.pathId\n    });\n    \n    // In a real implementation, this would be saved to the database\n    \n    return updatedJourney;\n  } catch (error) {\n    console.error('Error adding journey reflection:', error);\n    return journey;\n  }\n};\n\n/**\n * Calculate journey completion percentage\n * @param {Object} journey - Journey object\n * @returns {number} Completion percentage (0-100)\n */\nexport const getJourneyCompletion = (journey) => {\n  if (!journey || !journey.progress) return 0;\n  \n  const totalSteps = journey.path.milestones.reduce((total, milestone) => {\n    return total + milestone.steps.length;\n  }, 0);\n  \n  const completedSteps = journey.progress.completedSteps.length;\n  \n  return Math.round((completedSteps / totalSteps) * 100);\n};\n\n/**\n * Get personalized guidance for a specific journey\n * @param {Object} journey - Current journey\n * @param {Object} userProfile - User profile data\n * @returns {Object} Personalized guidance and recommendations\n */\nexport const getPersonalizedGuidance = (journey, userProfile = {}) => {\n  try {\n    // Get current milestone and step\n    const currentMilestoneIndex = journey.progress.currentMilestone;\n    const currentStepIndex = journey.progress.currentStep;\n    const currentMilestone = journey.path.milestones[currentMilestoneIndex];\n    const currentStep = currentMilestone?.steps[currentStepIndex];\n    \n    if (!currentStep) {\n      return {\n        message: \"You've completed this journey! Consider exploring another path.\",\n        recommendations: []\n      };\n    }\n    \n    // Get recommendations based on current step type\n    let recommendations = [];\n    let customGuidance = '';\n    \n    switch (currentStep.type) {\n      case 'learn':\n        recommendations = currentStep.resources || [];\n        break;\n        \n      case 'practice':\n        recommendations = currentStep.resources || [];\n        break;\n        \n      case 'reflect':\n        // For reflection steps, we might get deeper personalization\n        if (currentStep.action === 'mindStateAssessment') {\n          // Integrate with our mind state assessment\n          const mindState = userProfile.mindState || 'REFLECTIVE';\n          const stateDetails = mindStateService.getPrayerRecommendations(mindState);\n          \n          customGuidance = `Based on your spiritual state: ${stateDetails.text}`;\n          recommendations = [\n            ...(currentStep.resources || []),\n            {\n              type: RESOURCE_TYPES.ARTICLE,\n              title: 'Adapting Your Practice to Your Spiritual State',\n              url: `/resources/adapting-to-${mindState.toLowerCase()}`\n            }\n          ];\n          \n          // Add specific practices\n          stateDetails.practices.forEach(practice => {\n            recommendations.push({\n              type: RESOURCE_TYPES.COMMUNITY_TIP,\n              title: 'Recommended Practice',\n              content: practice\n            });\n          });\n        }\n        break;\n        \n      case 'community':\n        // For community steps, we would integrate with the community platform\n        recommendations = [\n          ...(currentStep.resources || []),\n          {\n            type: RESOURCE_TYPES.COMMUNITY_TIP,\n            title: \"From the Community: Recent Insight\",\n            content: \"I found that keeping a prayer journal helped me track my spiritual growth and notice patterns in my connection with Allah. - Amina K.\"\n          }\n        ];\n        break;\n        \n      case 'habit':\n        // For habit formation, provide reminders and tracking tools\n        recommendations = [\n          ...(currentStep.resources || []),\n          {\n            type: RESOURCE_TYPES.TOOL,\n            title: \"Habit Tracker\",\n            url: \"/tools/habit-tracker\",\n            description: \"Track your consistency with this simple tool\"\n          }\n        ];\n        break;\n        \n      default:\n        recommendations = currentStep.resources || [];\n    }\n    \n    // Add prayer intent integration if relevant\n    if (journey.areaId === 'PRAYER' || journey.areaId === 'FAITH') {\n      const prayerIntents = prayerIntentService.getIntentCategories();\n      const relevantIntent = prayerIntents.FOCUS || prayerIntents.CONSISTENCY;\n      \n      if (relevantIntent) {\n        recommendations.push({\n          type: RESOURCE_TYPES.TOOL,\n          title: \"Prayer Intent Assistant\",\n          url: \"/prayer-intent\",\n          description: \"Use our Prayer Intent Assistant to strengthen your focus and connection\"\n        });\n      }\n    }\n    \n    // Get completion percentage\n    const completion = getJourneyCompletion(journey);\n    \n    return {\n      currentStep,\n      currentMilestone,\n      customGuidance,\n      recommendations,\n      completion,\n      nextSteps: completion < 100 ? \"Continue with your current milestone\" : \"Consider starting a new journey\"\n    };\n  } catch (error) {\n    console.error('Error getting personalized guidance:', error);\n    return {\n      message: \"We're experiencing difficulties providing guidance. Please try again.\",\n      recommendations: []\n    };\n  }\n};\n\n/**\n * Get suggested paths based on user's profile and activity\n * @param {Object} userProfile - User profile with interests and history\n * @returns {Array} List of suggested paths\n */\nexport const getPathSuggestions = (userProfile = {}) => {\n  // In a real implementation, this would use a recommendation algorithm\n  // based on user's previous journeys, interests, and community trends\n  \n  // Use mind state if available\n  if (userProfile.mindState) {\n    return getPathsForMindState(userProfile.mindState);\n  }\n  \n  // Default suggestions\n  return [\n    {\n      id: 'prayer_consistency',\n      areaId: 'PRAYER',\n      area: LIFE_AREAS.PRAYER,\n      title: 'Establish Prayer Consistency',\n      description: 'Build a reliable prayer routine that fits your lifestyle and strengthens your spiritual practice.',\n      matchReason: 'Most popular path for new users'\n    },\n    {\n      id: 'spiritual_revival',\n      areaId: 'FAITH',\n      area: LIFE_AREAS.FAITH,\n      title: 'Spiritual Revival Journey',\n      description: 'Reconnect with your faith and revitalize your spiritual life after a period of disconnection or stagnation.',\n      matchReason: 'Recommended for spiritual growth'\n    },\n    {\n      id: 'new_parent',\n      areaId: 'FAMILY',\n      area: LIFE_AREAS.FAMILY,\n      title: 'Islamic Parenting Journey',\n      description: 'Navigate early parenthood with Islamic principles and create a nurturing environment for your child\\'s spiritual development.',\n      matchReason: 'Trending in our community'\n    }\n  ];\n};\n\n/**\n * Get featured or seasonal paths\n * @returns {Array} List of featured paths\n */\nexport const getFeaturedPaths = () => {\n  // This would be dynamic in a real implementation\n  const currentMonth = new Date().getMonth(); // 0-11\n  \n  // Ramadan is typically month 9 in the Hijri calendar, but this is a simplification\n  const isRamadanSeason = currentMonth === 3 || currentMonth === 4; // Around April/May\n  \n  // Hajj is typically month 12 in the Hijri calendar\n  const isHajjSeason = currentMonth === 6 || currentMonth === 7; // Around July/August\n  \n  if (isRamadanSeason) {\n    return [\n      {\n        id: 'ramadan_preparation',\n        areaId: 'FAITH',\n        area: LIFE_AREAS.FAITH,\n        title: 'Ramadan Preparation',\n        description: 'Prepare your mind, body, and soul for the blessed month of Ramadan',\n        featured: true,\n        seasonal: true\n      }\n    ];\n  }\n  \n  if (isHajjSeason) {\n    return [\n      {\n        id: 'hajj_preparation',\n        areaId: 'FAITH',\n        area: LIFE_AREAS.FAITH,\n        title: 'Hajj & Umrah Journey',\n        description: 'Prepare spiritually and practically for the pilgrimage of a lifetime',\n        featured: true,\n        seasonal: true\n      }\n    ];\n  }\n  \n  // Default featured paths\n  return [\n    {\n      id: 'prayer_focus',\n      areaId: 'PRAYER',\n      area: LIFE_AREAS.PRAYER,\n      title: 'Deepen Your Prayer Focus',\n      description: 'Develop khushu\\' (mindful concentration) in prayer to transform your experience of worship.',\n      featured: true\n    }\n  ];\n};\n\n// Export the service\nconst lifestyleCompassService = {\n  getLifeAreas,\n  getAllBadges,\n  getSuggestedPaths,\n  getPathDetails,\n  startJourney,\n  updateJourneyProgress,\n  addJourneyReflection,\n  getPersonalizedGuidance,\n  getPathSuggestions,\n  getFeaturedPaths,\n  getJourneyCompletion,\n  getPathsForMindState\n};\n\nexport default lifestyleCompassService;","import React from 'react';\nimport { Box } from '@mui/material';\n\nconst CompassBackground = ({ color = '#1976d2', opacity = 0.03 }) => (\n  <Box\n    component=\"svg\"\n    viewBox=\"0 0 500 500\"\n    sx={{\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      width: '100%',\n      height: '100%',\n      maxWidth: '800px',\n      maxHeight: '800px',\n      zIndex: 0,\n      opacity: opacity,\n    }}\n  >\n    {/* Main circles */}\n    <circle cx=\"250\" cy=\"250\" r=\"240\" fill=\"none\" stroke={color} strokeWidth=\"2\" />\n    <circle cx=\"250\" cy=\"250\" r=\"200\" fill=\"none\" stroke={color} strokeWidth=\"1\" />\n    <circle cx=\"250\" cy=\"250\" r=\"160\" fill=\"none\" stroke={color} strokeWidth=\"1\" />\n    <circle cx=\"250\" cy=\"250\" r=\"120\" fill=\"none\" stroke={color} strokeWidth=\"1\" />\n    <circle cx=\"250\" cy=\"250\" r=\"80\" fill=\"none\" stroke={color} strokeWidth=\"1\" />\n    <circle cx=\"250\" cy=\"250\" r=\"40\" fill=\"none\" stroke={color} strokeWidth=\"1\" />\n    \n    {/* Main cross lines */}\n    <line x1=\"10\" y1=\"250\" x2=\"490\" y2=\"250\" stroke={color} strokeWidth=\"2\" />\n    <line x1=\"250\" y1=\"10\" x2=\"250\" y2=\"490\" stroke={color} strokeWidth=\"2\" />\n    \n    {/* Diagonal lines */}\n    <line x1=\"74\" y1=\"74\" x2=\"426\" y2=\"426\" stroke={color} strokeWidth=\"1\" />\n    <line x1=\"426\" y1=\"74\" x2=\"74\" y2=\"426\" stroke={color} strokeWidth=\"1\" />\n    \n    {/* North marker */}\n    <polygon points=\"250,30 260,50 250,45 240,50\" fill={color} />\n    \n    {/* Cardinal directions */}\n    <text x=\"250\" y=\"25\" textAnchor=\"middle\" fill={color} fontSize=\"12\">N</text>\n    <text x=\"480\" y=\"250\" textAnchor=\"middle\" fill={color} fontSize=\"12\">E</text>\n    <text x=\"250\" y=\"480\" textAnchor=\"middle\" fill={color} fontSize=\"12\">S</text>\n    <text x=\"20\" y=\"250\" textAnchor=\"middle\" fill={color} fontSize=\"12\">W</text>\n    \n    {/* 45° markers */}\n    <text x=\"400\" y=\"100\" textAnchor=\"middle\" fill={color} fontSize=\"10\">NE</text>\n    <text x=\"400\" y=\"400\" textAnchor=\"middle\" fill={color} fontSize=\"10\">SE</text>\n    <text x=\"100\" y=\"400\" textAnchor=\"middle\" fill={color} fontSize=\"10\">SW</text>\n    <text x=\"100\" y=\"100\" textAnchor=\"middle\" fill={color} fontSize=\"10\">NW</text>\n    \n    {/* Small ticks for minor directions */}\n    {Array.from({ length: 24 }).map((_, i) => {\n      const angle = (i * 15) * Math.PI / 180;\n      const x1 = 250 + 230 * Math.sin(angle);\n      const y1 = 250 - 230 * Math.cos(angle);\n      const x2 = 250 + 240 * Math.sin(angle);\n      const y2 = 250 - 240 * Math.cos(angle);\n      return <line key={i} x1={x1} y1={y1} x2={x2} y2={y2} stroke={color} strokeWidth=\"1\" />\n    })}\n  </Box>\n);\n\nexport default CompassBackground;","import React from 'react';\nimport { Box } from '@mui/material';\n\nconst IslamicPatternDecoration = ({ color = '#1976d2', opacity = 0.05 }) => (\n  <Box\n    component=\"svg\"\n    viewBox=\"0 0 200 200\"\n    sx={{\n      position: 'absolute',\n      bottom: 0,\n      right: 0,\n      width: '250px',\n      height: '250px',\n      zIndex: 0,\n      opacity: opacity,\n    }}\n  >\n    <defs>\n      {/* Islamic geometric pattern */}\n      <pattern id=\"islamicPattern\" patternUnits=\"userSpaceOnUse\" width=\"50\" height=\"50\" patternTransform=\"rotate(45)\">\n        {/* Star pattern */}\n        <path d=\"M25,0 L50,25 L25,50 L0,25 Z\" fill=\"none\" stroke={color} strokeWidth=\"1\" />\n        <circle cx=\"25\" cy=\"25\" r=\"10\" fill=\"none\" stroke={color} strokeWidth=\"0.5\" />\n        <circle cx=\"25\" cy=\"25\" r=\"5\" fill=\"none\" stroke={color} strokeWidth=\"0.5\" />\n        \n        {/* Connect the stars */}\n        <line x1=\"0\" y1=\"25\" x2=\"50\" y2=\"25\" stroke={color} strokeWidth=\"0.5\" />\n        <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"50\" stroke={color} strokeWidth=\"0.5\" />\n        \n        {/* Decorative elements */}\n        <circle cx=\"0\" cy=\"25\" r=\"2\" fill=\"none\" stroke={color} strokeWidth=\"0.3\" />\n        <circle cx=\"50\" cy=\"25\" r=\"2\" fill=\"none\" stroke={color} strokeWidth=\"0.3\" />\n        <circle cx=\"25\" cy=\"0\" r=\"2\" fill=\"none\" stroke={color} strokeWidth=\"0.3\" />\n        <circle cx=\"25\" cy=\"50\" r=\"2\" fill=\"none\" stroke={color} strokeWidth=\"0.3\" />\n      </pattern>\n    </defs>\n    \n    <rect width=\"100%\" height=\"100%\" fill=\"url(#islamicPattern)\" />\n    \n    {/* Add Arabic-inspired calligraphy suggestion */}\n    <path \n      d=\"M40,100 C60,70 100,90 120,60 S150,30 180,50\" \n      fill=\"none\" \n      stroke={color} \n      strokeWidth=\"1.5\" \n      strokeLinecap=\"round\"\n    />\n    \n    <path \n      d=\"M30,120 C50,150 80,130 110,160 S150,180 170,150\" \n      fill=\"none\" \n      stroke={color} \n      strokeWidth=\"1.5\" \n      strokeLinecap=\"round\"\n    />\n  </Box>\n);\n\nexport default IslamicPatternDecoration;","import React, { useState, useEffect } from 'react';\nimport { \n  Box, \n  Typography, \n  TextField, \n  Button, \n  Paper, \n  CircularProgress, \n  Fade, \n  Card, \n  CardContent, \n  CardActionArea,\n  Grid,\n  Chip,\n  useTheme,\n  alpha,\n  Stack,\n  Divider\n} from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport ExploreIcon from '@mui/icons-material/Explore';\nimport RouteIcon from '@mui/icons-material/Route';\nimport AutoAwesomeIcon from '@mui/icons-material/AutoAwesome';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\nimport MenuBookIcon from '@mui/icons-material/MenuBook';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport FamilyRestroomIcon from '@mui/icons-material/FamilyRestroom';\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\nimport SpaIcon from '@mui/icons-material/Spa';\nimport MosqueIcon from '@mui/icons-material/Mosque';\n\nimport lifestyleCompassService from '../../services/lifestyleCompassService';\nimport CompassBackground from './CompassBackground';\nimport IslamicPatternDecoration from './IslamicPatternDecoration';\n\n// Map icons to life areas\nconst areaIcons = {\n  PRAYER: <MosqueIcon />,\n  FAITH: <SpaIcon />,\n  QURAN: <MenuBookIcon />,\n  FAMILY: <FamilyRestroomIcon />,\n  COMMUNITY: <AccountBalanceIcon />,\n  HEALTH: <FavoriteIcon />,\n  LIFESTYLE: <AccessTimeIcon />\n};\n\nconst LifestyleCompass = () => {\n  const theme = useTheme();\n  const [query, setQuery] = useState('');\n  const [searching, setSearching] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  const [showResults, setShowResults] = useState(false);\n  const [trendingPaths, setTrendingPaths] = useState([]);\n  const [featuredPaths, setFeaturedPaths] = useState([]);\n  const [userProfile, setUserProfile] = useState({});\n  const [loading, setLoading] = useState(true);\n  \n  // Fetch initial data\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        setLoading(true);\n        \n        // In a real app, get from auth context or API\n        const mockProfile = { \n          mindState: \"REFLECTIVE\",\n          interests: [\"prayer\", \"parenting\"],\n          lifeStage: \"parent\" \n        };\n        \n        setUserProfile(mockProfile);\n        \n        // Get trending paths\n        const trendingPathsData = lifestyleCompassService.getPathSuggestions(mockProfile);\n        setTrendingPaths(trendingPathsData);\n        \n        // Get featured/seasonal paths\n        const featuredPathsData = lifestyleCompassService.getFeaturedPaths();\n        setFeaturedPaths(featuredPathsData);\n        \n      } catch (error) {\n        console.error('Error fetching initial data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchInitialData();\n  }, []);\n  \n  // Handle search submit\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    \n    if (!query.trim()) return;\n    \n    setSearching(true);\n    setShowResults(false);\n    \n    try {\n      // Get path suggestions based on the query\n      const results = lifestyleCompassService.getSuggestedPaths(query, userProfile);\n      \n      setSuggestions(results);\n      setShowResults(true);\n    } catch (error) {\n      console.error('Error searching for paths:', error);\n    } finally {\n      setSearching(false);\n    }\n  };\n  \n  const handlePathClick = (pathDetails) => {\n    // This would navigate to the path detail page\n    console.log('Navigate to path details:', pathDetails);\n    // In a real implementation, use React Router\n    // navigate(`/lifestyle-compass/path/${pathDetails.areaId}/${pathDetails.id}`);\n  };\n  \n  return (\n    <Paper \n      elevation={3} \n      sx={{ \n        position: 'relative',\n        p: 3,\n        pt: 4,\n        borderRadius: 2,\n        mb: 4,\n        overflow: 'hidden',\n        background: theme.palette.mode === 'dark' \n          ? 'linear-gradient(to right bottom, #1a237e, #311b92)' \n          : 'linear-gradient(to right bottom, #e8f5e9, #e3f2fd)'\n      }}\n    >\n      {/* Decorative background elements */}\n      <CompassBackground color={theme.palette.primary.main} />\n      <IslamicPatternDecoration color={theme.palette.primary.main} />\n      \n      {/* Content - positioned above the decorative elements */}\n      <Box sx={{ position: 'relative', zIndex: 1 }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n          <ExploreIcon sx={{ mr: 1, color: theme.palette.primary.main, fontSize: 28 }} />\n          <Typography variant=\"h5\" component=\"h2\" gutterBottom sx={{ mb: 0, fontWeight: 500 }}>\n            Muslim Lifestyle Compass\n          </Typography>\n        </Box>\n        \n        <Typography variant=\"body1\" sx={{ mb: 3, maxWidth: '800px' }}>\n          Your personalized guide to navigating life's journey with Islamic principles. \n          Discover tailored paths that blend spirituality with practical guidance for your unique situation.\n        </Typography>\n        \n        {/* Search form */}\n        <form onSubmit={handleSearch}>\n          <Box \n            sx={{ \n              display: 'flex',\n              alignItems: 'stretch',\n              mb: 4,\n              backgroundColor: alpha(theme.palette.background.paper, 0.8),\n              borderRadius: 2,\n              boxShadow: 1\n            }}\n          >\n            <TextField\n              fullWidth\n              placeholder=\"What are you seeking guidance for? (e.g., 'improve prayer focus', 'new parent', 'work-life balance')\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              disabled={searching}\n              variant=\"outlined\"\n              InputProps={{\n                sx: { \n                  borderRadius: '8px 0 0 8px',\n                  '& fieldset': { border: 'none' }\n                }\n              }}\n            />\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={searching || !query.trim()}\n              sx={{ \n                borderRadius: '0 8px 8px 0',\n                px: 3,\n                fontSize: '1rem'\n              }}\n              startIcon={searching ? <CircularProgress size={20} color=\"inherit\" /> : <SearchIcon />}\n            >\n              {searching ? 'Searching...' : 'Find My Path'}\n            </Button>\n          </Box>\n        </form>\n        \n        {/* Search results */}\n        {showResults && (\n          <Fade in={showResults}>\n            <Box sx={{ mb: 4 }}>\n              <Typography variant=\"h6\" sx={{ mb: 2, display: 'flex', alignItems: 'center' }}>\n                <RouteIcon sx={{ mr: 1 }} />\n                Suggested Paths for You\n              </Typography>\n              \n              {suggestions.length === 0 ? (\n                <Paper \n                  sx={{ \n                    p: 3, \n                    textAlign: 'center',\n                    backgroundColor: alpha(theme.palette.background.paper, 0.7)\n                  }}\n                >\n                  <Typography>\n                    No specific paths found for this query. Try a different search or explore our trending paths below.\n                  </Typography>\n                </Paper>\n              ) : (\n                <Grid container spacing={3}>\n                  {suggestions.map((result, index) => (\n                    <Grid item xs={12} sm={6} key={`${result.areaId}-${result.id}-${index}`}>\n                      <Card \n                        elevation={2}\n                        sx={{ \n                          height: '100%',\n                          display: 'flex',\n                          flexDirection: 'column',\n                          backgroundColor: alpha(theme.palette.background.paper, 0.9),\n                          transition: 'transform 0.3s ease, box-shadow 0.3s ease',\n                          '&:hover': {\n                            transform: 'translateY(-4px)',\n                            boxShadow: 6,\n                          }\n                        }}\n                      >\n                        <CardActionArea \n                          sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column', alignItems: 'stretch', height: '100%' }}\n                          onClick={() => handlePathClick(result)}\n                        >\n                          <Box \n                            sx={{ \n                              p: 1, \n                              backgroundColor: lifestyleCompassService.getLifeAreas()[result.areaId]?.color || theme.palette.primary.main,\n                              color: '#fff',\n                              display: 'flex',\n                              alignItems: 'center'\n                            }}\n                          >\n                            <Box sx={{ mr: 1, display: 'flex', alignItems: 'center' }}>\n                              {areaIcons[result.areaId] || <ExploreIcon />}\n                            </Box>\n                            <Typography variant=\"subtitle2\" sx={{ flexGrow: 1 }}>\n                              {lifestyleCompassService.getLifeAreas()[result.areaId]?.title || 'Path'}\n                            </Typography>\n                            <Chip \n                              label={result.path?.duration || 'Ongoing'} \n                              size=\"small\" \n                              sx={{ \n                                backgroundColor: 'rgba(255,255,255,0.2)',\n                                color: '#fff',\n                                fontSize: '0.7rem'\n                              }} \n                            />\n                          </Box>\n                          \n                          <CardContent sx={{ flexGrow: 1, pt: 2 }}>\n                            <Typography variant=\"h6\" gutterBottom>\n                              {result.path?.title}\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" paragraph>\n                              {result.path?.description}\n                            </Typography>\n                            \n                            <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 2 }}>\n                              <Chip \n                                icon={<AutoAwesomeIcon />}\n                                label=\"Start Journey\" \n                                color=\"primary\" \n                                size=\"small\" \n                                sx={{ fontSize: '0.75rem' }} \n                              />\n                              \n                              {result.mindStateMatch && (\n                                <Chip \n                                  label=\"Perfect for your state\" \n                                  size=\"small\" \n                                  color=\"secondary\"\n                                  sx={{ fontSize: '0.75rem' }} \n                                />\n                              )}\n                            </Box>\n                          </CardContent>\n                        </CardActionArea>\n                      </Card>\n                    </Grid>\n                  ))}\n                </Grid>\n              )}\n            </Box>\n          </Fade>\n        )}\n        \n        {/* If not showing search results, show featured and trending sections */}\n        {!showResults && !loading && (\n          <>\n            {/* Featured Paths Section */}\n            {featuredPaths.length > 0 && (\n              <Box sx={{ mb: 5 }}>\n                <Typography variant=\"h6\" sx={{ mb: 2, display: 'flex', alignItems: 'center' }}>\n                  <AutoAwesomeIcon sx={{ mr: 1 }} />\n                  Featured Paths\n                </Typography>\n                \n                <Grid container spacing={3}>\n                  {featuredPaths.map((path, index) => (\n                    <Grid item xs={12} md={6} key={`featured-${path.areaId}-${path.id}-${index}`}>\n                      <Card \n                        elevation={3}\n                        sx={{ \n                          height: '100%',\n                          display: 'flex',\n                          flexDirection: 'column',\n                          position: 'relative',\n                          overflow: 'hidden',\n                          backgroundImage: `linear-gradient(to right, ${alpha(path.area.color, 0.9)}, ${alpha(path.area.color, 0.7)})`,\n                          color: 'white',\n                          transition: 'transform 0.3s ease',\n                          '&:hover': {\n                            transform: 'translateY(-4px)',\n                          }\n                        }}\n                      >\n                        <CardActionArea\n                          onClick={() => handlePathClick(path)}\n                          sx={{ height: '100%', display: 'flex', flexDirection: 'column', alignItems: 'stretch' }}\n                        >\n                          <CardContent>\n                            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                              {areaIcons[path.areaId] || <ExploreIcon />}\n                              <Typography variant=\"overline\" sx={{ ml: 1, opacity: 0.9 }}>\n                                {path.area.title}\n                              </Typography>\n                              {path.seasonal && (\n                                <Chip \n                                  label=\"Seasonal\" \n                                  size=\"small\" \n                                  sx={{ ml: 'auto', backgroundColor: 'rgba(255,255,255,0.3)' }} \n                                />\n                              )}\n                            </Box>\n                            \n                            <Typography variant=\"h5\" component=\"h3\" gutterBottom sx={{ fontWeight: 500 }}>\n                              {path.title}\n                            </Typography>\n                            \n                            <Typography variant=\"body1\" sx={{ mb: 2, opacity: 0.9 }}>\n                              {path.description}\n                            </Typography>\n                            \n                            <Button \n                              variant=\"contained\" \n                              sx={{ \n                                mt: 1, \n                                backgroundColor: 'rgba(255,255,255,0.25)', \n                                '&:hover': { backgroundColor: 'rgba(255,255,255,0.35)' } \n                              }}\n                            >\n                              Explore Path\n                            </Button>\n                          </CardContent>\n                        </CardActionArea>\n                      </Card>\n                    </Grid>\n                  ))}\n                </Grid>\n              </Box>\n            )}\n            \n            {/* Trending Paths */}\n            {trendingPaths.length > 0 && (\n              <Box>\n                <Typography variant=\"h6\" sx={{ mb: 2, display: 'flex', alignItems: 'center' }}>\n                  <TrendingUpIcon sx={{ mr: 1 }} />\n                  Recommended for You\n                </Typography>\n                \n                <Grid container spacing={3}>\n                  {trendingPaths.map((path, index) => (\n                    <Grid item xs={12} sm={6} md={4} key={`trending-${path.areaId}-${path.id}-${index}`}>\n                      <Card \n                        elevation={2}\n                        sx={{ \n                          height: '100%',\n                          display: 'flex',\n                          flexDirection: 'column',\n                          backgroundColor: alpha(theme.palette.background.paper, 0.9),\n                          transition: 'transform 0.3s ease, box-shadow 0.3s ease',\n                          '&:hover': {\n                            transform: 'translateY(-4px)',\n                            boxShadow: 6,\n                          }\n                        }}\n                      >\n                        <CardActionArea \n                          sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column', alignItems: 'stretch', height: '100%' }}\n                          onClick={() => handlePathClick(path)}\n                        >\n                          <Box \n                            sx={{ \n                              p: 1, \n                              backgroundColor: path.area?.color || theme.palette.primary.main,\n                              color: '#fff',\n                              display: 'flex',\n                              alignItems: 'center'\n                            }}\n                          >\n                            <Box sx={{ mr: 1, display: 'flex', alignItems: 'center' }}>\n                              {areaIcons[path.areaId] || <ExploreIcon />}\n                            </Box>\n                            <Typography variant=\"subtitle2\" sx={{ flexGrow: 1 }}>\n                              {path.area?.title || 'Path'}\n                            </Typography>\n                          </Box>\n                          \n                          <CardContent sx={{ flexGrow: 1, pt: 2 }}>\n                            <Typography variant=\"h6\" gutterBottom>\n                              {path.title}\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" paragraph>\n                              {path.description}\n                            </Typography>\n                            \n                            {path.matchReason && (\n                              <Typography variant=\"caption\" sx={{ display: 'block', mt: 1, fontStyle: 'italic' }}>\n                                {path.matchReason}\n                              </Typography>\n                            )}\n                            \n                            <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 2 }}>\n                              <Chip \n                                icon={<AutoAwesomeIcon />}\n                                label=\"Start Journey\" \n                                color=\"primary\" \n                                size=\"small\" \n                                sx={{ fontSize: '0.75rem' }} \n                              />\n                            </Box>\n                          </CardContent>\n                        </CardActionArea>\n                      </Card>\n                    </Grid>\n                  ))}\n                </Grid>\n              </Box>\n            )}\n            \n            {/* Browse By Life Area Section */}\n            <Box sx={{ mt: 5 }}>\n              <Divider sx={{ mb: 3 }} />\n              <Typography variant=\"h6\" gutterBottom>\n                Browse by Life Area\n              </Typography>\n              \n              <Grid container spacing={2} sx={{ mt: 1 }}>\n                {Object.values(lifestyleCompassService.getLifeAreas()).map((area) => (\n                  <Grid item xs={6} sm={4} md={3} key={area.id}>\n                    <Paper\n                      elevation={1}\n                      sx={{\n                        p: 2,\n                        textAlign: 'center',\n                        height: '100%',\n                        cursor: 'pointer',\n                        border: `1px solid ${alpha(area.color, 0.3)}`,\n                        transition: 'all 0.2s ease',\n                        '&:hover': {\n                          backgroundColor: alpha(area.color, 0.1),\n                          transform: 'translateY(-2px)'\n                        }\n                      }}\n                    >\n                      <Box sx={{ \n                        color: area.color, \n                        fontSize: '2rem', \n                        mb: 1,\n                        display: 'flex',\n                        justifyContent: 'center' \n                      }}>\n                        {areaIcons[area.id] || <ExploreIcon />}\n                      </Box>\n                      <Typography variant=\"subtitle1\" fontWeight=\"medium\">\n                        {area.title}\n                      </Typography>\n                    </Paper>\n                  </Grid>\n                ))}\n              </Grid>\n            </Box>\n            \n            {/* Mind State Connection */}\n            {userProfile.mindState && (\n              <Box sx={{ mt: 4, mb: 2 }}>\n                <Paper sx={{ p: 2, bgcolor: alpha(theme.palette.primary.main, 0.05) }}>\n                  <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} alignItems=\"center\">\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                      <SpaIcon color=\"primary\" sx={{ mr: 1 }} />\n                      <Typography variant=\"subtitle1\">\n                        Your Current Mind State: <strong>{userProfile.mindState}</strong>\n                      </Typography>\n                    </Box>\n                    <Button \n                      size=\"small\" \n                      variant=\"outlined\"\n                      sx={{ ml: { sm: 'auto' } }}\n                    >\n                      Reassess My Mind State\n                    </Button>\n                  </Stack>\n                </Paper>\n              </Box>\n            )}\n          </>\n        )}\n        \n        {loading && (\n          <Box sx={{ display: 'flex', justifyContent: 'center', py: 4 }}>\n            <CircularProgress />\n          </Box>\n        )}\n      </Box>\n    </Paper>\n  );\n};\n\nexport default LifestyleCompass;"],"names":["INTENT_CATEGORIES","FOCUS","GRATITUDE","CONNECTION","MEANING","CONSISTENCY","MOTIVATION","EMOTION","POSTURE","DOUBT","TIME","RESPONSES","intention","explanation","arabicDua","transliteration","translation","reference","DEFAULT","getMostFrequent","arr","counts","reduce","a","c","Object","keys","b","getPrayerIntentGuidance","async","intentCategory","text","lowerText","toLowerCase","bestMatch","entries","map","_ref","category","keywords","score","filter","keyword","includes","length","best","current","analyzeIntent","userInput","analyticsService","originalQuery","arguments","undefined","categoryResponses","lowerQuery","response","relevanceText","split","word","Math","floor","random","selectResponse","timestamp","Date","toISOString","error","console","message","query","getSuggestedIntentions","history","defaultSuggestions","historicalCategories","item","favoriteCategoryCode","slice","MIND_STATES","SERENE","id","title","description","color","backgroundImage","recommendation","REFLECTIVE","ANXIOUS","GRATEFUL","SEEKING","DISCONNECTED","FATIGUED","INSPIRED","QUESTIONNAIRE","question","options","states","getMindStateQuestionnaire","analyzeMindState","responses","stateVotes","forEach","questionId","optionIndex","find","q","state","maxVotes","topStates","_ref2","votes","push","selectedStateId","trackEvent","responsesGiven","getAllMindStates","getVisualizationForState","stateId","getPrayerRecommendations","baseRecommendation","practices","LIFE_AREAS","FAITH","icon","badges","PRAYER","QURAN","FAMILY","COMMUNITY","HEALTH","ETHICS","LIFESTYLE","BADGES","TAHAJJUD_DEVOTEE","level","area","requirements","KHUSHU_MASTER","DHIKR_PRACTITIONER","FAJR_CHAMPION","CONSISTENT_WORSHIPPER","PRAYER_FOCUS","QURAN_COMPANION","KNOWLEDGE_SEEKER","MEMORIZATION_MILESTONE","FAMILY_LEADER","PARENT_MENTOR","MARRIAGE_DEVOTEE","COMMUNITY_PILLAR","SADAQAH_GIVER","SUNNAH_PRACTITIONER","RESOURCE_TYPES","PATH_DATABASE","duration","difficulty","prerequisites","relatedPaths","targetAudience","milestones","steps","type","action","resources","url","estimatedTime","frequency","content","source","author","getPathsForMindState","mindStateId","recommendations","pathId","areaId","paths","getPathDetails","path","getJourneyCompletion","journey","progress","totalSteps","total","milestone","completedSteps","round","getLifeAreas","getAllBadges","getSuggestedPaths","userProfile","matches","areaPaths","areaMatches","pathMatches","keywordMatch","some","audienceMatch","audience","relevance","sort","mindState","mindStatePaths","match","msp","mindStateMatch","resultCount","topResult","startJourney","userId","pathDetails","Error","now","startDate","lastUpdated","completed","currentMilestone","currentStep","milestoneProgress","step","dateCompleted","notes","reflections","updateJourneyProgress","milestoneIndex","stepIndex","updatedJourney","every","earnedBadge","badge","nextStep","journeyId","percentComplete","addJourneyReflection","reflection","date","getPersonalizedGuidance","currentMilestoneIndex","currentStepIndex","customGuidance","stateDetails","mindStateService","practice","prayerIntents","prayerIntentService","getIntentCategories","completion","nextSteps","getPathSuggestions","matchReason","getFeaturedPaths","currentMonth","getMonth","featured","seasonal","opacity","_jsxs","Box","component","viewBox","sx","position","top","left","transform","width","height","maxWidth","maxHeight","zIndex","children","_jsx","cx","cy","r","fill","stroke","strokeWidth","x1","y1","x2","y2","points","x","y","textAnchor","fontSize","Array","from","_","i","angle","PI","sin","cos","bottom","right","patternUnits","patternTransform","d","strokeLinecap","areaIcons","MosqueIcon","SpaIcon","MenuBookIcon","FamilyRestroomIcon","AccountBalanceIcon","FavoriteIcon","AccessTimeIcon","LifestyleCompass","theme","useTheme","setQuery","useState","searching","setSearching","suggestions","setSuggestions","showResults","setShowResults","trendingPaths","setTrendingPaths","featuredPaths","setFeaturedPaths","setUserProfile","loading","setLoading","useEffect","mockProfile","interests","lifeStage","trendingPathsData","lifestyleCompassService","featuredPathsData","fetchInitialData","handlePathClick","log","Paper","elevation","p","pt","borderRadius","mb","overflow","background","palette","mode","CompassBackground","primary","main","IslamicPatternDecoration","display","alignItems","ExploreIcon","mr","Typography","variant","gutterBottom","fontWeight","onSubmit","e","preventDefault","trim","results","backgroundColor","alpha","paper","boxShadow","TextField","fullWidth","placeholder","value","onChange","target","disabled","InputProps","border","Button","px","startIcon","CircularProgress","size","SearchIcon","Fade","in","RouteIcon","textAlign","Grid","container","spacing","result","index","_lifestyleCompassServ","_lifestyleCompassServ2","_result$path","_result$path2","_result$path3","xs","sm","Card","flexDirection","transition","CardActionArea","flexGrow","onClick","Chip","label","CardContent","paragraph","justifyContent","mt","AutoAwesomeIcon","_Fragment","md","ml","TrendingUpIcon","_path$area","_path$area2","fontStyle","Divider","values","cursor","bgcolor","Stack","direction","py"],"sourceRoot":""}