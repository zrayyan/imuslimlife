{"version":3,"file":"static/js/437.9e03422a.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/History.js","../node_modules/@mui/icons-material/Bookmark.js","../node_modules/@mui/material/utils/useSlot.js","../node_modules/@mui/icons-material/HelpOutline.js","../node_modules/@mui/icons-material/Send.js","../node_modules/@mui/icons-material/Favorite.js","hooks/useAnalytics.js","components/prayer-intent/PrayerIntentAssistant.js","pages/PrayerIntentPage.js","../node_modules/@mui/icons-material/Lightbulb.js"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M13 3c-4.97 0-9 4.03-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42C8.27 19.99 10.51 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9m-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8z\"\n}), 'History');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2\"\n}), 'Bookmark');","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"elementType\", \"ownerState\", \"externalForwardedProps\", \"getSlotOwnerState\", \"internalForwardedProps\"],\n  _excluded2 = [\"component\", \"slots\", \"slotProps\"],\n  _excluded3 = [\"component\"];\nimport useForkRef from '@mui/utils/useForkRef';\nimport appendOwnerState from '@mui/utils/appendOwnerState';\nimport resolveComponentProps from '@mui/utils/resolveComponentProps';\nimport mergeSlotProps from '@mui/utils/mergeSlotProps';\n/**\n * An internal function to create a Material UI slot.\n *\n * This is an advanced version of Base UI `useSlotProps` because Material UI allows leaf component to be customized via `component` prop\n * while Base UI does not need to support leaf component customization.\n *\n * @param {string} name: name of the slot\n * @param {object} parameters\n * @returns {[Slot, slotProps]} The slot's React component and the slot's props\n *\n * Note: the returned slot's props\n * - will never contain `component` prop.\n * - might contain `as` prop.\n */\nexport default function useSlot(\n/**\n * The slot's name. All Material UI components should have `root` slot.\n *\n * If the name is `root`, the logic behaves differently from other slots,\n * e.g. the `externalForwardedProps` are spread to `root` slot but not other slots.\n */\nname, parameters) {\n  const {\n      className,\n      elementType: initialElementType,\n      ownerState,\n      externalForwardedProps,\n      getSlotOwnerState,\n      internalForwardedProps\n    } = parameters,\n    useSlotPropsParams = _objectWithoutPropertiesLoose(parameters, _excluded);\n  const {\n      component: rootComponent,\n      slots = {\n        [name]: undefined\n      },\n      slotProps = {\n        [name]: undefined\n      }\n    } = externalForwardedProps,\n    other = _objectWithoutPropertiesLoose(externalForwardedProps, _excluded2);\n  const elementType = slots[name] || initialElementType;\n\n  // `slotProps[name]` can be a callback that receives the component's ownerState.\n  // `resolvedComponentsProps` is always a plain object.\n  const resolvedComponentsProps = resolveComponentProps(slotProps[name], ownerState);\n  const _mergeSlotProps = mergeSlotProps(_extends({\n      className\n    }, useSlotPropsParams, {\n      externalForwardedProps: name === 'root' ? other : undefined,\n      externalSlotProps: resolvedComponentsProps\n    })),\n    {\n      props: {\n        component: slotComponent\n      },\n      internalRef\n    } = _mergeSlotProps,\n    mergedProps = _objectWithoutPropertiesLoose(_mergeSlotProps.props, _excluded3);\n  const ref = useForkRef(internalRef, resolvedComponentsProps == null ? void 0 : resolvedComponentsProps.ref, parameters.ref);\n  const slotOwnerState = getSlotOwnerState ? getSlotOwnerState(mergedProps) : {};\n  const finalOwnerState = _extends({}, ownerState, slotOwnerState);\n  const LeafComponent = name === 'root' ? slotComponent || rootComponent : slotComponent;\n  const props = appendOwnerState(elementType, _extends({}, name === 'root' && !rootComponent && !slots[name] && internalForwardedProps, name !== 'root' && !slots[name] && internalForwardedProps, mergedProps, LeafComponent && {\n    as: LeafComponent\n  }, {\n    ref\n  }), finalOwnerState);\n  Object.keys(slotOwnerState).forEach(propName => {\n    delete props[propName];\n  });\n  return [elementType, props];\n}","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11 18h2v-2h-2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8m0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4\"\n}), 'HelpOutline');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M2.01 21 23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m12 21.35-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54z\"\n}), 'Favorite');","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport analyticsService from '../services/analyticsService';\n\n/**\n * Custom hook for using analytics in React components\n * \n * This hook:\n * 1. Automatically tracks page views when the route changes\n * 2. Provides all analytics tracking methods\n * 3. Returns a reference to the analytics service for convenience\n */\nconst useAnalytics = () => {\n  const location = useLocation();\n  \n  // Track page views automatically when the route changes\n  useEffect(() => {\n    analyticsService.trackPageView(location.pathname);\n  }, [location.pathname]);\n  \n  // Return the analytics service for use in the component\n  return analyticsService;\n};\n\nexport default useAnalytics;","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  TextField,\n  Button,\n  Paper,\n  CircularProgress,\n  Chip,\n  Fade,\n  Divider,\n  IconButton,\n  Tooltip,\n  Alert,\n  useTheme,\n} from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport LightbulbIcon from '@mui/icons-material/Lightbulb';\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\nimport HistoryIcon from '@mui/icons-material/History';\nimport useAnalytics from '../../hooks/useAnalytics';\n\n// Sample prayer intentions for suggested prompts\nconst SAMPLE_INTENTIONS = [\n  \"Help me focus on gratitude in my prayer\",\n  \"I want to feel more connected to Allah\",\n  \"Guide me to pray with full concentration\",\n  \"Help me understand the meaning of what I recite\",\n  \"I struggle with distraction during prayer\"\n];\n\n// Mock API call to simulate AI response\nconst getPrayerIntentResponse = async (userInput) => {\n  // In a real implementation, this would be an API call to an AI service\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      const responses = [\n        {\n          intention: \"Focus on gratitude\",\n          explanation: \"Before beginning your prayer, take a moment to reflect on three specific blessings in your life. This creates a mindset of thankfulness as you enter your conversation with Allah.\",\n          arabicDua: \"الحمد لله رب العالمين\",\n          transliteration: \"Alhamdulillahi rabbil 'alamin\",\n          translation: \"All praise is due to Allah, Lord of all worlds\",\n          reference: \"Opening verse of Surah Al-Fatiha\"\n        },\n        {\n          intention: \"Deepen spiritual connection\",\n          explanation: \"Try to visualize yourself standing before Allah. Remember that prayer is a direct conversation with your Creator who sees and hears you.\",\n          arabicDua: \"اللهم اجعلني من التوابين واجعلني من المتطهرين\",\n          transliteration: \"Allahumma-j'alni minat-tawwabeena wa-j'alni minal-mutatahhireen\",\n          translation: \"O Allah, make me among those who return to You in repentance and make me among those who purify themselves\",\n          reference: \"Dua after completing wudu\"\n        },\n        {\n          intention: \"Improve concentration\",\n          explanation: \"Before praying, spend 2 minutes in complete silence. Clear your mind of worldly concerns and remind yourself that the next few minutes are solely dedicated to Allah.\",\n          arabicDua: \"اللهم إني أعوذ بك من الهم والحزن، وأعوذ بك من العجز والكسل\",\n          transliteration: \"Allahumma inni a'udhu bika minal-hammi wal-hazan, wa a'udhu bika minal-'ajzi wal-kasal\",\n          translation: \"O Allah, I seek refuge in You from anxiety and sorrow, and I seek refuge in You from inability and laziness\",\n          reference: \"Hadith in Sahih Bukhari\"\n        }\n      ];\n\n      // Select a response based on the input\n      let responseIndex = 0;\n      if (userInput.toLowerCase().includes(\"connect\")) {\n        responseIndex = 1;\n      } else if (userInput.toLowerCase().includes(\"focus\") || userInput.toLowerCase().includes(\"concentrate\")) {\n        responseIndex = 2;\n      }\n\n      resolve(responses[responseIndex]);\n    }, 1500); // Simulate network delay\n  });\n};\n\nconst PrayerIntentAssistant = () => {\n  const theme = useTheme();\n  const analytics = useAnalytics();\n  const [inputValue, setInputValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n  const [savedIntentions, setSavedIntentions] = useState(() => {\n    const saved = localStorage.getItem('saved-prayer-intentions');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [showHistory, setShowHistory] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Save intentions to localStorage when they change\n  useEffect(() => {\n    localStorage.setItem('saved-prayer-intentions', JSON.stringify(savedIntentions));\n  }, [savedIntentions]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!inputValue.trim()) {\n      setError(\"Please enter your intention or question\");\n      return;\n    }\n    \n    setError(null);\n    setLoading(true);\n    \n    // Track the query event\n    analytics.trackPrayerIntentEvent('query', inputValue);\n    \n    try {\n      const result = await getPrayerIntentResponse(inputValue);\n      setResponse(result);\n      \n      // Track successful response\n      analytics.trackPrayerIntentEvent('response_received', inputValue, result.intention, {\n        responseTime: 1500, // Mock response time\n      });\n      \n      // Add to history\n      const historyItem = {\n        id: Date.now(),\n        query: inputValue,\n        response: result,\n        timestamp: new Date().toISOString()\n      };\n      \n      // Save this to history (but not yet to saved intentions)\n      setSavedIntentions(prev => [historyItem, ...prev.slice(0, 9)]); // Keep only last 10\n    } catch (err) {\n      console.error(\"Error fetching prayer intent guidance:\", err);\n      setError(\"Unable to get guidance at this time. Please try again later.\");\n      \n      // Track error\n      analytics.trackError('prayer_intent_failed', err.message, {\n        query: inputValue\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSuggestionClick = (suggestion) => {\n    setInputValue(suggestion);\n    \n    // Track suggestion click\n    analytics.trackPrayerIntentEvent('suggestion_click', suggestion);\n  };\n\n  const saveIntention = () => {\n    if (!response) return;\n    \n    const intention = savedIntentions.find(item => item.query === inputValue);\n    if (intention) {\n      intention.isFavorite = true;\n      setSavedIntentions([...savedIntentions]);\n      \n      // Track saving an intention\n      analytics.trackPrayerIntentEvent('save_intention', inputValue, response.intention);\n    }\n  };\n  \n  // Track when history is viewed\n  const handleHistoryToggle = (showHistoryValue) => {\n    setShowHistory(showHistoryValue);\n    \n    if (showHistoryValue) {\n      analytics.trackPrayerIntentEvent('view_history');\n    }\n  };\n\n  return (\n    <Paper \n      elevation={3} \n      sx={{ \n        p: 3,\n        borderRadius: 2,\n        mb: 4,\n        background: theme.palette.mode === 'dark' \n          ? 'linear-gradient(to right bottom, #1a237e, #311b92)' \n          : 'linear-gradient(to right bottom, #e8f5e9, #e3f2fd)'\n      }}\n    >\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n        <LightbulbIcon sx={{ mr: 1, color: theme.palette.secondary.main }} />\n        <Typography variant=\"h5\" component=\"h2\" gutterBottom sx={{ mb: 0, flex: 1 }}>\n          Prayer Intent Assistant\n        </Typography>\n        <Tooltip title=\"Prayer Intention History\">\n          <IconButton onClick={() => handleHistoryToggle(!showHistory)}>\n            <HistoryIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"What is Prayer Intent?\">\n          <IconButton onClick={() => analytics.trackPrayerIntentEvent('open_help')}>\n            <HelpOutlineIcon />\n          </IconButton>\n        </Tooltip>\n      </Box>\n      \n      <Typography variant=\"body2\" sx={{ mb: 3, fontStyle: 'italic', opacity: 0.8 }}>\n        AI-powered guidance to enhance your niyyah (intention) and khushu' (concentration) in prayer\n      </Typography>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n      )}\n\n      {!showHistory ? (\n        <>\n          <form onSubmit={handleSubmit}>\n            <TextField\n              fullWidth\n              variant=\"outlined\"\n              value={inputValue}\n              onChange={(e) => setInputValue(e.target.value)}\n              placeholder=\"Describe your intention or ask for guidance on prayer focus...\"\n              sx={{ \n                mb: 2,\n                '& .MuiOutlinedInput-root': {\n                  borderRadius: 2,\n                  backgroundColor: theme.palette.background.paper,\n                }\n              }}\n              multiline\n              rows={2}\n              disabled={loading}\n            />\n            \n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n                {SAMPLE_INTENTIONS.map((suggestion, index) => (\n                  <Chip \n                    key={index} \n                    label={suggestion} \n                    size=\"small\" \n                    onClick={() => handleSuggestionClick(suggestion)}\n                    sx={{ \n                      backgroundColor: theme.palette.mode === 'dark' \n                        ? 'rgba(255,255,255,0.1)' \n                        : 'rgba(0,0,0,0.05)'\n                    }}\n                  />\n                ))}\n              </Box>\n              \n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"submit\"\n                disabled={loading || !inputValue.trim()}\n                endIcon={loading ? <CircularProgress size={20} /> : <SendIcon />}\n              >\n                {loading ? 'Getting Guidance...' : 'Get Guidance'}\n              </Button>\n            </Box>\n          </form>\n\n          {response && (\n            <Fade in={!!response}>\n              <Box \n                sx={{ \n                  mt: 2, \n                  p: 2, \n                  borderRadius: 2,\n                  backgroundColor: theme.palette.mode === 'dark' \n                    ? 'rgba(255,255,255,0.05)' \n                    : 'rgba(255,255,255,0.8)'\n                }}\n              >\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n                  <Typography variant=\"h6\" sx={{ color: theme.palette.primary.main }}>\n                    {response.intention}\n                  </Typography>\n                  <IconButton size=\"small\" onClick={saveIntention}>\n                    <BookmarkIcon fontSize=\"small\" />\n                  </IconButton>\n                </Box>\n                \n                <Typography paragraph>\n                  {response.explanation}\n                </Typography>\n                \n                <Divider sx={{ my: 2 }} />\n                \n                <Typography variant=\"subtitle2\" sx={{ mb: 1, color: theme.palette.primary.main }}>\n                  Helpful Dua for this intention:\n                </Typography>\n                \n                <Typography \n                  variant=\"body1\" \n                  sx={{ \n                    fontFamily: '\"Amiri\", serif', \n                    fontSize: '1.5rem',\n                    textAlign: 'right',\n                    direction: 'rtl',\n                    mb: 1\n                  }}\n                >\n                  {response.arabicDua}\n                </Typography>\n                \n                <Typography variant=\"body2\" sx={{ mb: 0.5, fontStyle: 'italic' }}>\n                  {response.transliteration}\n                </Typography>\n                \n                <Typography variant=\"body2\" sx={{ mb: 1 }}>\n                  {response.translation}\n                </Typography>\n                \n                <Typography variant=\"caption\" sx={{ display: 'block', color: theme.palette.text.secondary }}>\n                  Reference: {response.reference}\n                </Typography>\n              </Box>\n            </Fade>\n          )}\n        </>\n      ) : (\n        <Box>\n          <Typography variant=\"h6\" sx={{ mb: 2 }}>Recent Intentions</Typography>\n          {savedIntentions.length === 0 ? (\n            <Typography variant=\"body2\" sx={{ fontStyle: 'italic' }}>\n              No saved intentions yet. Ask for guidance to build your history.\n            </Typography>\n          ) : (\n            savedIntentions.map((item) => (\n              <Paper \n                key={item.id} \n                elevation={1} \n                sx={{ \n                  p: 2, \n                  mb: 2, \n                  display: 'flex',\n                  alignItems: 'flex-start',\n                  borderLeft: item.isFavorite ? `4px solid ${theme.palette.secondary.main}` : 'none'\n                }}\n              >\n                <Box sx={{ flex: 1 }}>\n                  <Typography variant=\"subtitle1\" sx={{ fontWeight: 500 }}>\n                    \"{item.query}\"\n                  </Typography>\n                  <Typography variant=\"caption\" sx={{ display: 'block', mb: 1, color: theme.palette.text.secondary }}>\n                    {new Date(item.timestamp).toLocaleString()}\n                  </Typography>\n                  {item.response && (\n                    <Typography variant=\"body2\" sx={{ color: theme.palette.text.secondary }}>\n                      {item.response.intention}: {item.response.explanation.substring(0, 80)}...\n                    </Typography>\n                  )}\n                </Box>\n                <IconButton \n                  size=\"small\" \n                  sx={{ color: item.isFavorite ? theme.palette.secondary.main : 'inherit' }}\n                  onClick={() => {\n                    const newItems = [...savedIntentions];\n                    const itemIndex = newItems.findIndex(i => i.id === item.id);\n                    if (itemIndex >= 0) {\n                      newItems[itemIndex].isFavorite = !newItems[itemIndex].isFavorite;\n                      setSavedIntentions(newItems);\n                    }\n                  }}\n                >\n                  {item.isFavorite ? <FavoriteIcon fontSize=\"small\" /> : <FavoriteIcon fontSize=\"small\" />}\n                </IconButton>\n              </Paper>\n            ))\n          )}\n          <Button \n            variant=\"outlined\" \n            size=\"small\" \n            onClick={() => handleHistoryToggle(false)}\n            sx={{ mt: 1 }}\n          >\n            Back to Assistant\n          </Button>\n        </Box>\n      )}\n    </Paper>\n  );\n};\n\nexport default PrayerIntentAssistant;","import React from 'react';\nimport { Container, Typography, Box, Grid, Paper } from '@mui/material';\nimport PrayerIntentAssistant from '../components/prayer-intent/PrayerIntentAssistant';\n\nconst PrayerIntentPage = () => {\n  return (\n    <Container maxWidth=\"lg\" sx={{ pt: 4, pb: 8 }}>\n      <Box sx={{ mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Prayer Intent Assistant\n        </Typography>\n        <Typography variant=\"body1\" sx={{ mb: 2, maxWidth: '800px' }}>\n          Prayer intent (niyyah) is essential in Islam. This tool helps you refine your intentions, \n          strengthen your focus, and deepen your connection with Allah during prayer.\n        </Typography>\n      </Box>\n\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={8}>\n          <PrayerIntentAssistant />\n        </Grid>\n        \n        <Grid item xs={12} md={4}>\n          <Paper elevation={2} sx={{ p: 3, borderRadius: 2, mb: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              About Prayer Intent\n            </Typography>\n            <Typography variant=\"body2\" paragraph>\n              The Prophet Muhammad ﷺ said: \"Verily, deeds are [judged] by intentions, and for every person is what he intended.\"\n            </Typography>\n            <Typography variant=\"body2\" paragraph>\n              Having a clear and focused intention before prayer helps you to achieve khushu' (mindful focus) and derive the \n              most spiritual benefit from your prayers.\n            </Typography>\n            <Typography variant=\"body2\">\n              This assistant uses AI to provide personalized guidance on improving your prayer intention\n              and concentration, based on Islamic teachings and practices.\n            </Typography>\n          </Paper>\n          \n          <Paper elevation={2} sx={{ p: 3, borderRadius: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              How It Works\n            </Typography>\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\n              1. Describe your current state of mind or what you wish to focus on in prayer\n            </Typography>\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\n              2. Get personalized guidance on strengthening your intention\n            </Typography>\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\n              3. Receive relevant duas and practical tips to implement\n            </Typography>\n            <Typography variant=\"body2\">\n              4. Save your favorite intentions for future prayers\n            </Typography>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default PrayerIntentPage;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 21c0 .5.4 1 1 1h4c.6 0 1-.5 1-1v-1H9zm3-19C8.1 2 5 5.1 5 9c0 2.4 1.2 4.5 3 5.7V17c0 .5.4 1 1 1h6c.6 0 1-.5 1-1v-2.3c1.8-1.3 3-3.4 3-5.7 0-3.9-3.1-7-7-7\"\n}), 'Lightbulb');"],"names":["_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","_excluded","_excluded2","_excluded3","useSlot","name","parameters","className","elementType","initialElementType","ownerState","externalForwardedProps","getSlotOwnerState","internalForwardedProps","useSlotPropsParams","_objectWithoutPropertiesLoose","component","rootComponent","slots","undefined","slotProps","other","resolvedComponentsProps","resolveComponentProps","_mergeSlotProps","mergeSlotProps","_extends","externalSlotProps","props","slotComponent","internalRef","mergedProps","ref","useForkRef","slotOwnerState","finalOwnerState","LeafComponent","appendOwnerState","as","Object","keys","forEach","propName","useAnalytics","location","useLocation","useEffect","analyticsService","pathname","SAMPLE_INTENTIONS","PrayerIntentAssistant","theme","useTheme","analytics","inputValue","setInputValue","useState","loading","setLoading","response","setResponse","savedIntentions","setSavedIntentions","saved","localStorage","getItem","JSON","parse","showHistory","setShowHistory","error","setError","setItem","stringify","handleHistoryToggle","showHistoryValue","trackPrayerIntentEvent","_jsxs","Paper","elevation","sx","p","borderRadius","mb","background","palette","mode","children","Box","display","alignItems","_jsx","LightbulbIcon","mr","color","secondary","main","Typography","variant","gutterBottom","flex","Tooltip","title","IconButton","onClick","HistoryIcon","HelpOutlineIcon","fontStyle","opacity","Alert","severity","length","map","item","borderLeft","isFavorite","fontWeight","query","text","Date","timestamp","toLocaleString","intention","explanation","substring","size","newItems","itemIndex","findIndex","i","id","FavoriteIcon","fontSize","Button","mt","_Fragment","onSubmit","async","e","preventDefault","trim","result","Promise","resolve","setTimeout","responseIndex","userInput","toLowerCase","includes","arabicDua","transliteration","translation","reference","getPrayerIntentResponse","responseTime","historyItem","now","toISOString","prev","slice","err","console","trackError","message","TextField","fullWidth","value","onChange","target","placeholder","backgroundColor","paper","multiline","rows","disabled","justifyContent","flexWrap","gap","suggestion","index","Chip","label","handleSuggestionClick","type","endIcon","CircularProgress","SendIcon","Fade","in","primary","saveIntention","find","BookmarkIcon","paragraph","Divider","my","fontFamily","textAlign","direction","PrayerIntentPage","Container","maxWidth","pt","pb","Grid","container","spacing","xs","md"],"sourceRoot":""}