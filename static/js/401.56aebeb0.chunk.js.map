{"version":3,"file":"static/js/401.56aebeb0.chunk.js","mappings":"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","sources":["contexts/QuranProgressContext.js","models/Word.js","models/Ayah.js","models/Surah.js","models/Quran.js","services/quranService.js","components/quran/QuranSettingsPanel.js","components/quran/SurahList.js","utils/QuranProgressTracker.js","components/quran/WordByWordSpeechBubble.js","components/quran/WordByWordSpeechBubbleKids.js","components/quran/EnhancedAyahView.js","components/quran/QuranNavigationControls.js","components/quran/QuranNavigationPanel.js","components/quran/TajweedTooltip.js","components/QuranProgressView.js","pages/QuranPage.js","utils/tajweedParser.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst QuranProgressContext = createContext();\n\nexport const QuranProgressProvider = ({ children }) => {\n  const [progress, setProgress] = useState(() => {\n    // Try to load saved progress from localStorage\n    const savedProgress = localStorage.getItem('quranReadingProgress');\n    return savedProgress ? JSON.parse(savedProgress) : {\n      // Track read surahs and ayahs\n      readSurahs: {},\n      readAyahs: {},\n      // Track time spent reading\n      timeSpent: 0,\n      lastReadTimestamp: null,\n      // Track completion percentages\n      overallCompletion: 0,\n      // Track reading streak\n      currentStreak: 0,\n      lastReadDate: null,\n      // Custom reading goals\n      dailyGoal: 5, // Default: 5 ayahs per day\n      weeklyGoal: 1, // Default: 1 juz per week\n    };\n  });\n\n  // Save progress to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('quranReadingProgress', JSON.stringify(progress));\n  }, [progress]);\n\n  // Mark an ayah as read\n  const markAyahAsRead = (surahNumber, ayahNumber) => {\n    setProgress(prev => {\n      const surahKey = `${surahNumber}`;\n      const ayahKey = `${surahNumber}:${ayahNumber}`;\n      \n      // Update read ayahs\n      const readAyahs = { ...prev.readAyahs, [ayahKey]: Date.now() };\n      \n      // Update read surahs data\n      const readSurahs = { ...prev.readSurahs };\n      if (!readSurahs[surahKey]) {\n        readSurahs[surahKey] = { \n          totalRead: 0,\n          lastRead: Date.now(),\n          ayahsRead: {}\n        };\n      }\n      \n      readSurahs[surahKey].totalRead = readSurahs[surahKey].totalRead + 1;\n      readSurahs[surahKey].lastRead = Date.now();\n      readSurahs[surahKey].ayahsRead = { \n        ...readSurahs[surahKey].ayahsRead, \n        [ayahNumber]: Date.now() \n      };\n\n      // Calculate new overall completion percentage\n      // Simple approximation: count unique ayahs read / total ayahs (6236)\n      const totalAyahs = 6236;\n      const uniqueAyahsRead = Object.keys(readAyahs).length;\n      const overallCompletion = Math.min(100, Math.round((uniqueAyahsRead / totalAyahs) * 100 * 10) / 10);\n\n      // Update reading streak\n      const today = new Date().toDateString();\n      const lastReadDate = prev.lastReadDate;\n      let currentStreak = prev.currentStreak;\n      \n      if (lastReadDate !== today) {\n        if (new Date(lastReadDate).toDateString() === new Date(Date.now() - 86400000).toDateString()) {\n          // Yesterday was the last reading, continue the streak\n          currentStreak += 1;\n        } else if (!lastReadDate) {\n          // First time reading\n          currentStreak = 1;\n        } else {\n          // Streak broken, start over\n          currentStreak = 1;\n        }\n      }\n\n      return {\n        ...prev,\n        readSurahs,\n        readAyahs,\n        overallCompletion,\n        lastReadTimestamp: Date.now(),\n        timeSpent: prev.timeSpent + 10, // Add 10 seconds (conservative estimate)\n        currentStreak,\n        lastReadDate: today,\n      };\n    });\n  };\n\n  // Check if an ayah has been read\n  const isAyahRead = (surahNumber, ayahNumber) => {\n    const ayahKey = `${surahNumber}:${ayahNumber}`;\n    return !!progress.readAyahs[ayahKey];\n  };\n\n  // Mark multiple ayahs as read (e.g., when a page is viewed)\n  const markAyahsAsRead = (ayahs) => {\n    if (!ayahs || ayahs.length === 0) return;\n    \n    ayahs.forEach(ayah => {\n      if (ayah.surahNumber && ayah.numberInSurah) {\n        markAyahAsRead(ayah.surahNumber, ayah.numberInSurah);\n      }\n    });\n  };\n\n  // Reset progress\n  const resetProgress = () => {\n    const defaultProgress = {\n      readSurahs: {},\n      readAyahs: {},\n      timeSpent: 0,\n      lastReadTimestamp: null,\n      overallCompletion: 0,\n      currentStreak: 0,\n      lastReadDate: null,\n      dailyGoal: progress.dailyGoal,\n      weeklyGoal: progress.weeklyGoal,\n    };\n    \n    setProgress(defaultProgress);\n    localStorage.setItem('quranReadingProgress', JSON.stringify(defaultProgress));\n  };\n\n  // Update reading goals\n  const updateGoals = (dailyGoal, weeklyGoal) => {\n    setProgress(prev => ({\n      ...prev,\n      dailyGoal: dailyGoal || prev.dailyGoal,\n      weeklyGoal: weeklyGoal || prev.weeklyGoal,\n    }));\n  };\n\n  // Get surah completion percentage\n  const getSurahCompletion = (surahNumber, totalAyahsInSurah) => {\n    const surahKey = `${surahNumber}`;\n    if (!progress.readSurahs[surahKey]) return 0;\n    \n    const ayahsRead = progress.readSurahs[surahKey].totalRead;\n    return Math.min(100, Math.round((ayahsRead / totalAyahsInSurah) * 100));\n  };\n\n  // Get daily stats\n  const getDailyStats = () => {\n    const today = new Date().toDateString();\n    let todayCount = 0;\n    \n    // Count ayahs read today\n    Object.values(progress.readAyahs).forEach(timestamp => {\n      if (new Date(timestamp).toDateString() === today) {\n        todayCount++;\n      }\n    });\n    \n    return {\n      ayahsReadToday: todayCount,\n      dailyGoalProgress: Math.min(100, Math.round((todayCount / progress.dailyGoal) * 100)),\n      currentStreak: progress.currentStreak,\n    };\n  };\n\n  return (\n    <QuranProgressContext.Provider value={{\n      progress,\n      markAyahAsRead,\n      markAyahsAsRead,\n      isAyahRead,\n      resetProgress,\n      updateGoals,\n      getSurahCompletion,\n      getDailyStats\n    }}>\n      {children}\n    </QuranProgressContext.Provider>\n  );\n};\n\nexport const useQuranProgress = () => {\n  const context = useContext(QuranProgressContext);\n  if (!context) {\n    throw new Error('useQuranProgress must be used within a QuranProgressProvider');\n  }\n  return context;\n};\n\nexport default QuranProgressContext;","class Word {\n  constructor(data) {\n    // Assign all properties from the data object, including audio\n    Object.assign(this, data);\n  }\n\n  // Helper to generate audio_url if not provided\n  static generateAudioUrl(surah, ayah, word) {\n    // All numbers are zero-padded to 3 digits\n    return `${String(surah).padStart(3, '0')}_${String(ayah).padStart(3, '0')}_${String(word).padStart(3, '0')}.mp3`;\n  }\n}\n\nexport default Word;","/**\n * Represents a single Ayah (verse) of the Quran\n */\nimport Word from './Word';\n\nclass Ayah {\n  constructor(data) {\n    this.number = data.number;\n    this.text = data.text;\n    this.numberInSurah = data.numberInSurah;\n    this.juz = data.juz;\n    this.manzil = data.manzil;\n    this.page = data.page;\n    this.ruku = data.ruku;\n    this.hizbQuarter = data.hizbQuarter;\n    this.sajda = data.sajda || false;\n    \n    // For translations and tafsir\n    this.translation = data.translation || null;\n    this.tafsir = data.tafsir || null;\n    \n    // For audio\n    this.audioUrl = data.audioUrl || null;\n\n    // For word-by-word support: parse words array if present in text (for quran-wordbyword-2)\n    this.words = [];\n    if (typeof data.text === 'string' && data.text.trim().startsWith('[')) {\n      try {\n        const wordsArray = JSON.parse(data.text);\n        if (Array.isArray(wordsArray)) {\n          this.words = wordsArray.map(wordObj => new Word(wordObj));\n        }\n      } catch (e) {\n        // If parsing fails, fallback to empty array\n        this.words = [];\n      }\n    }\n  }\n}\n\nexport default Ayah;","import Ayah from './Ayah';\n\n/**\n * Represents a Surah (chapter) of the Quran\n */\nclass Surah {\n  constructor(data) {\n    this.number = data.number;\n    this.name = data.name;\n    this.englishName = data.englishName;\n    this.englishNameTranslation = data.englishNameTranslation;\n    this.revelationType = data.revelationType;\n    this.ayahs = data.ayahs?.map(ayah => new Ayah(ayah)) || [];\n  }\n  \n  // Get ayah by number within surah\n  getAyah(numberInSurah) {\n    return this.ayahs.find(ayah => ayah.numberInSurah === numberInSurah);\n  }\n  \n  // Get a range of ayahs\n  getAyahRange(startNumber, endNumber) {\n    return this.ayahs.filter(\n      ayah => ayah.numberInSurah >= startNumber && \n              ayah.numberInSurah <= endNumber\n    );\n  }\n  \n  // Whether this surah begins with Bismillah\n  hasBismillah() {\n    // All surahs start with Bismillah except Surah 9 (At-Tawba)\n    return this.number !== 9;\n  }\n}\n\nexport default Surah;","import Surah from './Surah';\nimport QuranEdition from './QuranEdition';\n\n/**\n * Represents the full Quran with all its surahs and edition information\n */\nclass Quran {\n  constructor(data) {\n    this.surahs = data.surahs?.map(surah => new Surah(surah)) || [];\n    this.edition = new QuranEdition(data.edition);\n  }\n  \n  // Get surah by number\n  getSurah(number) {\n    return this.surahs.find(surah => surah.number === number);\n  }\n  \n  // Get surah by name\n  getSurahByName(name) {\n    return this.surahs.find(surah => \n      surah.name === name || \n      surah.englishName.toLowerCase() === name.toLowerCase()\n    );\n  }\n  \n  // Get ayah by global ayah number\n  getAyah(globalNumber) {\n    for (const surah of this.surahs) {\n      const ayah = surah.ayahs.find(a => a.number === globalNumber);\n      if (ayah) return { surah, ayah };\n    }\n    return null;\n  }\n  \n  // Whether this is a tajweed edition\n  isTajweed() {\n    return this.edition.isTajweed();\n  }\n}\n\nexport default Quran;","// src/services/quranService.js\nimport Quran from '../models/Quran';\n\nclass QuranService {\n  constructor() {\n    this.loadedEditions = new Map();\n    this.availableEditions = [\n      { identifier: 'quran-tajweed', language: 'ar', name: 'Tajweed', type: 'quran' },\n      { identifier: 'en.sahih', language: 'en', name: 'Sahih International', type: 'translation' },\n      { identifier: 'ur.ahmed', language: 'ur', name: 'Ahmed Ali', type: 'translation' },\n      { identifier: 'ar.muyassar', language: 'ar', name: 'تفسير المیسر', type: 'tafsir' },\n      { identifier: 'en.tafsir-ibn-kathir', language: 'en', name: 'Ibn Kathir', type: 'tafsir' },\n    ];\n  }\n  \n  /**\n   * Get available Quran editions\n   */\n  getAvailableEditions() {\n    return this.availableEditions;\n  }\n  \n  /**\n   * Get details for a specific edition by identifier\n   * @param {string} identifier - The edition identifier\n   * @returns {object|undefined} Edition details object or undefined if not found\n   */\n  getEditionDetails(identifier) {\n    return this.availableEditions.find(e => e.identifier === identifier);\n  }\n  \n  /**\n   * Load a specific Quran edition\n   * @param {string} identifier - The edition identifier\n   * @returns {Promise<Quran>} A promise resolving to the Quran object\n   */\n  async loadEdition(identifier) {\n    // Check if we already have this edition loaded\n    if (this.loadedEditions.has(identifier)) {\n      return this.loadedEditions.get(identifier);\n    }\n    \n    try {\n      let data;\n      \n      // For local editions, load from local file\n      if (\n        identifier === 'quran-tajweed' ||\n        identifier === 'quran-kids' ||\n        identifier === 'quran-wordbyword-2'\n      ) {\n        const response = await fetch(`/assets/data/quran/${identifier}.json`);\n        \n        if (!response.ok) {\n          throw new Error(`Failed to load Quran edition: ${identifier}`);\n        }\n        data = await response.json();\n      } else {\n        // For other editions, fetch from API\n        const response = await fetch(`https://api.alquran.cloud/v1/quran/${identifier}`);\n        if (!response.ok) {\n          throw new Error(`Failed to load Quran edition: ${identifier}`);\n        }\n        data = await response.json();\n      } \n      \n      // Create Quran object\n      const quran = new Quran(data.data);\n      \n      // Store in cache\n      this.loadedEditions.set(identifier, quran);\n      \n      return quran;\n    } catch (error) {\n      console.error('Error loading Quran edition:', error);\n      throw error;\n    }\n  }\n  \n  /**\n   * Get audio URL for a specific ayah\n   * @param {number} surahNumber - The surah number\n   * @param {number} ayahNumber - The ayah number within the surah\n   * @param {string} reciter - The reciter identifier\n   * @param {number} bitrate - Audio bitrate (64, 128, 192, or 360)\n   * @returns {string} The audio URL\n   */\n  getAudioUrl(surahNumber, ayahNumber, reciter = 'ar.alafasy', bitrate = 128) {\n    // Validate the bitrate\n    const validBitrates = [64, 128, 192, 320, 32, 48];\n    const selectedBitrate = validBitrates.includes(bitrate) ? bitrate : 128;\n    \n    // We need the global ayah number for the audio URL\n    let globalAyahNumber;\n    \n    // If we're given an ayah object with number property, use that directly\n    if (typeof ayahNumber === 'object' && ayahNumber.number) {\n      globalAyahNumber = ayahNumber.number;\n    } else {\n      // Otherwise calculate the global ayah number from surah and ayahNumber\n      globalAyahNumber = this.getGlobalAyahNumber(surahNumber, ayahNumber);\n    }\n    \n    return `https://cdn.islamic.network/quran/audio/${selectedBitrate}/${reciter}/${globalAyahNumber}.mp3`;\n  }\n  \n  /**\n   * Calculate global ayah number from surah number and ayah within surah\n   * @param {number} surahNumber - The surah number (1-114)\n   * @param {number} ayahInSurah - The ayah number within the surah\n   * @returns {number} The global ayah number\n   */\n  getGlobalAyahNumber(surahNumber, ayahInSurah) {\n    // Ayah counts for each surah in the Quran\n    const ayahCounts = [\n      7, 286, 200, 176, 120, 165, 206, 75, 129, 109, 123, 111, 43, 52, 99, 128, \n      111, 110, 98, 135, 112, 78, 118, 64, 77, 227, 93, 88, 69, 60, 34, 30, 73, \n      54, 45, 83, 182, 88, 75, 85, 54, 53, 89, 59, 37, 35, 38, 29, 18, 45, 60, \n      49, 62, 55, 78, 96, 29, 22, 24, 13, 14, 11, 11, 18, 12, 12, 30, 52, 52, \n      44, 28, 28, 20, 56, 40, 31, 50, 40, 46, 42, 29, 19, 36, 25, 22, 17, 19, \n      26, 30, 20, 15, 21, 11, 8, 8, 19, 5, 8, 8, 11, 11, 8, 3, 9, 5, 4, 7, 3, \n      6, 3, 5, 4, 5, 6\n    ];\n    \n    let globalAyahNumber = ayahInSurah;\n    \n    // Add up the ayahs from all previous surahs\n    for (let i = 0; i < surahNumber - 1; i++) {\n      globalAyahNumber += ayahCounts[i];\n    }\n    \n    return globalAyahNumber;\n  }\n  \n  /**\n   * Get the next ayah based on navigation mode and current ayah\n   * @param {Object} ayah - Current ayah\n   * @param {string} navigationMode - Current navigation mode (surah, page, juz, etc)\n   * @param {Object} quranData - Quran data object\n   * @returns {Object|null} - Next ayah or null if at boundary\n   */\n  getNextAyah(ayah, navigationMode, quranData) {\n    if (!ayah || !quranData) return null;\n    \n    const surahNumber = ayah.surahNumber || ayah.surah;\n    const surah = quranData.getSurah(surahNumber);\n    \n    if (!surah) return null;\n    \n    // For surah navigation, simply get the next ayah in the surah\n    if (navigationMode === 'surah') {\n      const nextAyahNumber = ayah.numberInSurah + 1;\n      if (nextAyahNumber <= surah.ayahs.length) {\n        return surah.getAyah(nextAyahNumber);\n      }\n      return null; // End of surah\n    }\n    \n    // For other navigation modes, we need to respect the boundaries\n    const currentMarker = ayah[navigationMode];\n    const nextAyahNumber = ayah.number + 1;\n    \n    // Try to find the next ayah globally\n    for (let s = surahNumber; s <= 114; s++) {\n      const searchSurah = quranData.getSurah(s);\n      if (!searchSurah) continue;\n      \n      // Start from the next ayah in the current surah, or first ayah in next surahs\n      const startAyah = s === surahNumber ? ayah.numberInSurah + 1 : 1;\n      \n      for (let a = startAyah; a <= searchSurah.ayahs.length; a++) {\n        const checkAyah = searchSurah.getAyah(a);\n        \n        // If the next ayah has the same marker, it's in the same boundary\n        if (checkAyah && checkAyah[navigationMode] === currentMarker) {\n          return checkAyah;\n        }\n        \n        // If we find an ayah with a different marker, we've crossed the boundary\n        if (checkAyah && checkAyah[navigationMode] !== currentMarker) {\n          return null;\n        }\n      }\n    }\n    \n    return null; // No next ayah found within the boundary\n  }\n}\n\nexport default new QuranService();","// src/components/quran/QuranSettingsPanel.js\nimport React from 'react';\nimport {\n  Drawer,\n  Box,\n  Typography,\n  Divider,\n  Switch,\n  FormControlLabel,\n  InputLabel,\n  Button,\n  IconButton,\n  RadioGroup,\n  Radio,\n  Tabs,\n  Tab,\n  Paper,\n  Grid,\n  Slider,\n  ToggleButtonGroup,\n  ToggleButton,\n  FormControl,\n  MenuItem,\n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\nimport TextFormatIcon from '@mui/icons-material/TextFormat';\nimport TranslateIcon from '@mui/icons-material/Translate';\nimport MusicNoteIcon from '@mui/icons-material/MusicNote';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\n\nimport { \n  useQuranSettings, \n  AVAILABLE_FONTS, \n  MIN_FONT_SIZE,\n  MAX_FONT_SIZE,\n  FONT_SIZE_STEP\n} from '../../contexts/QuranSettingsContext';\nimport quranService from '../../services/quranService';\nimport Select from '@mui/material/Select';\nimport ReactSelect, { components } from 'react-select';\n\nconst SAMPLE_TEXT = \"بِسْمِ ٱللَّهِ ٱلرَّحْمَٰنِ ٱلرَّحِيمِ\";\n\n// Reciter data with SVGs (add all reciters as needed)\nconst reciters = [\n  {\n    value: 'ar.abdulbasitmurattal',\n    label: 'Abdul Basit',\n    image: '/images/reciters/abdul_basit.svg',\n  },\n  {\n    value: 'ar.abdullahbasfar',\n    label: 'Abdullah Basfar',\n    image: '/images/reciters/abdullah_basfar.svg',\n  },\n  {\n    value: 'ar.abdurrahmaansudais',\n    label: 'Abdurrahmaan As-Sudais',\n    image: '/images/reciters/abdurrahmaan_as_sudais.svg',\n  },\n  {\n    value: 'ar.abdulsamad',\n    label: 'Abdul Samad',\n    image: '/images/reciters/abdul_samad.svg',\n  },\n  {\n    value: 'ar.shaatree',\n    label: 'Abu Bakr Ash-Shaatree',\n    image: '/images/reciters/shaatree.svg',\n  },\n  {\n    value: 'ar.ahmedajamy',\n    label: 'Ahmed ibn Ali al-Ajamy',\n    image: '/images/reciters/ahmed_ajamy.svg',\n  },\n  {\n    value: 'ar.alafasy',\n    label: 'Alafasy',\n    image: '/images/reciters/mishary_rashid_alafasy.svg',\n  },\n  {\n    value: 'ar.hanirifai',\n    label: 'Hani Rifai',\n    image: '/images/reciters/hani_ar_rifai.svg',\n  },\n  {\n    value: 'ar.husary',\n    label: 'Husary',\n    image: '/images/reciters/khalil_al_husary.svg',\n  },\n  {\n    value: 'ar.husarymujawwad',\n    label: 'Husary (Mujawwad)',\n    image: '/images/reciters/husary_mujawwad.svg',\n  },\n  {\n    value: 'ar.hudhaify',\n    label: 'Hudhaify',\n    image: '/images/reciters/ali_al_hudhaify.svg',\n  },\n  {\n    value: 'ar.ibrahimakhbar',\n    label: 'Ibrahim Akhdar',\n    image: '/images/reciters/ibrahim_akhbar.svg',\n  },\n  {\n    value: 'ar.mahermuaiqly',\n    label: 'Maher Al Muaiqly',\n    image: '/images/reciters/maher_al_muaiqly.svg',\n  },\n  {\n    value: 'ar.minshawi',\n    label: 'Minshawi',\n    image: '/images/reciters/mohamed_siddiq_al_minshawi.svg',\n  },\n  {\n    value: 'ar.minshawimujawwad',\n    label: 'Minshawy (Mujawwad)',\n    image: '/images/reciters/mohamed_siddiq_al_minshawi.svg',\n  },\n  {\n    value: 'ar.muhammadayyoub',\n    label: 'Muhammad Ayyoub',\n    image: '/images/reciters/muhammad_ayyoub.svg',\n  },\n  {\n    value: 'ar.muhammadjibreel',\n    label: 'Muhammad Jibreel',\n    image: '/images/reciters/muhammad_jibreel.svg',\n  },\n  {\n    value: 'ar.saoodshuraym',\n    label: 'Saood bin Ibraaheem Ash-Shuraym',\n    image: '/images/reciters/saood_shuraym.svg',\n  },\n  {\n    value: 'en.walk',\n    label: 'Ibrahim Walk',\n    image: '/images/reciters/ibrahim_walk.svg',\n  },\n  {\n    value: 'fa.hedayatfarfooladvand',\n    label: 'Fooladvand - Hedayatfar',\n    image: '/images/reciters/fooladvand_hedayatfar.svg',\n  },\n  {\n    value: 'ar.parhizgar',\n    label: 'Parhizgar',\n    image: '/images/reciters/parhizgar.svg',\n  },\n  {\n    value: 'ur.khan',\n    label: 'Shamshad Ali Khan',\n    image: '/images/reciters/shamshad_ali_khan.svg',\n  },\n  {\n    value: 'zh.chinese',\n    label: 'Chinese',\n    image: '/images/reciters/chinese.svg',\n  },\n  {\n    value: 'fr.leclerc',\n    label: 'Youssouf Leclerc',\n    image: '/images/reciters/youssouf_leclerc.svg',\n  },\n  {\n    value: 'ar.aymanswoaid',\n    label: 'Ayman Sowaid',\n    image: '/images/reciters/ayman_sowaid.svg',\n  },\n  {\n    value: 'ru.kuliev-audio',\n    label: 'Elmir Kuliev by 1MuslimApp',\n    image: '/images/reciters/elmir_kuliev.svg',\n  },\n  {\n    value: 'ru.kuliev-audio-2',\n    label: 'Elmir Kuliev 2 by 1MuslimApp',\n    image: '/images/reciters/elmir_kuliev_2.svg',\n  },\n];\n\n// Custom Option for react-select\nconst ReciterOption = (props) => (\n  <components.Option {...props}>\n    <Box sx={{ display: 'flex', alignItems: 'center', p: 1 }}>\n      <img\n        src={props.data.image}\n        alt={props.data.label}\n        style={{ width: 48, height: 48, borderRadius: '50%', marginRight: 16, boxShadow: '0 2px 8px rgba(0,0,0,0.10)' }}\n      />\n      <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>{props.data.label}</Typography>\n    </Box>\n  </components.Option>\n);\n\nconst ReciterSingleValue = (props) => (\n  <components.SingleValue {...props}>\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n      <img\n        src={props.data.image}\n        alt={props.data.label}\n        style={{ width: 32, height: 32, borderRadius: '50%', marginRight: 10 }}\n      />\n      <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>{props.data.label}</Typography>\n    </Box>\n  </components.SingleValue>\n);\n\nconst QuranSettingsPanel = ({ open, onClose }) => {\n  const { settings, updateSetting, resetSettings, increaseFontSize, decreaseFontSize, quranEditions } = useQuranSettings();\n  const [tabIndex, setTabIndex] = React.useState(0);\n  const drawerTitleId = 'quran-settings-title'; // ID for Drawer title\n\n  // Get available editions by type from quranEditions\n  const quranTypes = quranEditions.filter(e => e.type === 'quran');\n  const translations = quranEditions.filter(e => e.type === 'translation');\n  const tafsirs = quranEditions.filter(e => e.type === 'tafsir');\n\n  // Helper to group translations by language for react-select\n  const groupedTranslations = Object.values(\n    translations.reduce((acc, t) => {\n      if (!acc[t.language]) acc[t.language] = { label: t.language, options: [] };\n      acc[t.language].options.push({ value: t.identifier, label: t.name });\n      return acc;\n    }, {})\n  );\n\n  const handleTabChange = (event, newValue) => {\n    setTabIndex(newValue);\n  };\n\n  const handleFontSizeSliderChange = (event, newValue) => {\n    updateSetting('fontSize', newValue);\n  };\n  \n  return (\n    <Drawer\n      anchor=\"right\"\n      open={open}\n      onClose={onClose}\n      aria-labelledby={drawerTitleId} // Label the drawer\n    >\n      <Box sx={{ width: { xs: '100vw', sm: 400 }, maxWidth: '100vw', p: 3 }}>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n          <Typography variant=\"h6\" id={drawerTitleId}>Quran Settings</Typography> {/* Add ID to title */}\n          <IconButton onClick={onClose} edge=\"end\" aria-label=\"Close settings panel\"> {/* Add aria-label */}\n            <CloseIcon />\n          </IconButton>\n        </Box>\n        \n        <Divider sx={{ mb: 3 }} />\n        \n        <Tabs\n          value={tabIndex}\n          onChange={handleTabChange}\n          variant=\"fullWidth\"\n          sx={{ mb: 3 }}\n          aria-label=\"Settings categories\" // Label for the tab list\n        >\n          <Tab \n            icon={<TextFormatIcon />} \n            label=\"Font\" \n            id=\"settings-tab-font\" \n            aria-controls=\"settings-tabpanel-font\" \n          />\n          <Tab \n            icon={<TranslateIcon />} \n            label=\"Translation\" \n            id=\"settings-tab-translation\" \n            aria-controls=\"settings-tabpanel-translation\" \n          />\n          <Tab \n            icon={<MusicNoteIcon />} \n            label=\"Audio\" \n            id=\"settings-tab-audio\" \n            aria-controls=\"settings-tabpanel-audio\" \n          />\n          <Tab \n            icon={<VisibilityIcon />} \n            label=\"Display\" \n            id=\"settings-tab-display\" \n            aria-controls=\"settings-tabpanel-display\" \n          />\n        </Tabs>\n        \n        {/* Font Tab Panel */}\n        <Box \n          role=\"tabpanel\" \n          hidden={tabIndex !== 0} \n          id=\"settings-tabpanel-font\" \n          aria-labelledby=\"settings-tab-font\"\n        >\n          {tabIndex === 0 && (\n            <Box>\n              <Typography variant=\"subtitle2\" gutterBottom id=\"arabic-font-label\">\n                Arabic Font\n              </Typography>\n              <FormControl fullWidth margin=\"normal\">\n                <InputLabel id=\"quran-edition-label\">Quran Edition</InputLabel>\n                <Select\n                  labelId=\"quran-edition-label\"\n                  value={settings.quranEdition}\n                  onChange={e => updateSetting('quranEdition', e.target.value)}\n                  label=\"Quran Edition\"\n                >\n                  {quranTypes.map(edition => (\n                    <MenuItem key={edition.identifier} value={edition.identifier}>\n                      {edition.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n\n              <Box sx={{ mb: 3 }} role=\"radiogroup\" aria-labelledby=\"arabic-font-label\"> {/* Group font selection */} \n                <Grid container spacing={1}>\n                  {AVAILABLE_FONTS.map((font) => (\n                    <Grid item xs={12} sm={6} key={font.name}>\n                      <Paper\n                        role=\"radio\" // Treat as radio button\n                        aria-checked={settings.fontFamily === font.family} // Indicate selection\n                        tabIndex={settings.fontFamily === font.family ? 0 : -1} // Manage focus\n                        onClick={() => updateSetting('fontFamily', font.family)}\n                        onKeyPress={(e) => (e.key === 'Enter' || e.key === ' ') && updateSetting('fontFamily', font.family)} // Keyboard activation\n                        sx={{\n                          p: 2,\n                          textAlign: 'center',\n                          cursor: 'pointer',\n                          border: settings.fontFamily === font.family ? '2px solid' : '1px solid',\n                          borderColor: settings.fontFamily === font.family ? 'primary.main' : 'divider',\n                          transition: 'all 0.2s',\n                          '&:hover': {\n                            borderColor: 'primary.main',\n                            boxShadow: 1\n                          }\n                        }}\n                      >\n                        <Typography \n                          variant=\"body2\" \n                          color=\"textSecondary\" \n                          gutterBottom\n                        >\n                          {font.name}\n                        </Typography>\n                        <Typography \n                          sx={{ \n                            fontFamily: font.family,\n                            fontSize: '1.2rem',\n                            direction: 'rtl'\n                          }}\n                        >\n                          {SAMPLE_TEXT}\n                        </Typography>\n                      </Paper>\n                    </Grid>\n                  ))}\n                </Grid>\n              </Box>\n              \n              <Typography variant=\"subtitle2\" sx={{ mt: 3, mb: 1 }} id=\"font-size-label\">\n                Font Size: {settings.fontSize}px\n              </Typography>\n              \n              <Box sx={{ \n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                mb: 2\n              }}>\n                <IconButton \n                  onClick={decreaseFontSize}\n                  disabled={settings.fontSize <= MIN_FONT_SIZE}\n                  color=\"primary\"\n                  aria-label=\"Decrease font size\" // Add aria-label\n                >\n                  <RemoveIcon />\n                </IconButton>\n                \n                <Slider\n                  value={settings.fontSize}\n                  onChange={handleFontSizeSliderChange}\n                  aria-labelledby=\"font-size-label\" // Use label ID\n                  valueLabelDisplay=\"auto\"\n                  step={FONT_SIZE_STEP}\n                  marks\n                  min={MIN_FONT_SIZE}\n                  max={MAX_FONT_SIZE}\n                  sx={{ mx: 2 }}\n                />\n                \n                <IconButton \n                  onClick={increaseFontSize}\n                  disabled={settings.fontSize >= MAX_FONT_SIZE}\n                  color=\"primary\"\n                  aria-label=\"Increase font size\" // Add aria-label\n                >\n                  <AddIcon />\n                </IconButton>\n              </Box>\n              \n              <Box sx={{ \n                p: 2, \n                my: 2, \n                bgcolor: 'background.paper',\n                borderRadius: 1,\n                fontFamily: settings.fontFamily,\n                fontSize: settings.fontSize,\n                direction: 'rtl',\n                textAlign: 'center'\n              }}>\n                {SAMPLE_TEXT}\n              </Box>\n            </Box>\n          )}\n        </Box>\n        \n        {/* Translation Tab Panel */}\n        <Box \n          role=\"tabpanel\" \n          hidden={tabIndex !== 1} \n          id=\"settings-tabpanel-translation\" \n          aria-labelledby=\"settings-tab-translation\"\n        >\n          {tabIndex === 1 && (\n            <Box>\n              <Typography variant=\"subtitle2\" sx={{ mb: 1 }} id=\"translation-options-label\">\n                Translation Options\n              </Typography>\n              \n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={settings.showTranslation}\n                    onChange={(e) => updateSetting('showTranslation', e.target.checked)}\n                    aria-labelledby=\"show-translation-label\" // Link to label text\n                  />\n                }\n                label=\"Show Translation\"\n                id=\"show-translation-label\"\n              />\n              \n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={settings.showTransliteration}\n                    onChange={(e) => updateSetting('showTransliteration', e.target.checked)}\n                    disabled={!settings.showTranslation}\n                    aria-labelledby=\"show-transliteration-label\" // Link to label text\n                  />\n                }\n                label=\"Show Transliteration\"\n                id=\"show-transliteration-label\"\n              />\n              \n              {settings.showTranslation && (\n                <Box sx={{ my: 2 }}>\n                  <ReactSelect\n                    inputId=\"translation-select\"\n                    classNamePrefix=\"react-select\"\n                    options={groupedTranslations}\n                    value={(() => {\n                      const found = translations.find(t => t.identifier === settings.translationId);\n                      return found ? { value: found.identifier, label: found.name } : null;\n                    })()}\n                    onChange={option => updateSetting('translationId', option ? option.value : null)}\n                    placeholder=\"Select translation...\"\n                    isClearable\n                  />\n                </Box>\n              )}\n              \n              <Divider sx={{ my: 2 }} />\n              \n              <Typography variant=\"subtitle2\" sx={{ mb: 1 }} id=\"tafsir-options-label\">\n                Tafsir Options\n              </Typography>\n              \n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={settings.showTafsir}\n                    onChange={(e) => updateSetting('showTafsir', e.target.checked)}\n                    aria-labelledby=\"show-tafsir-label\" // Link to label text\n                  />\n                }\n                label=\"Show Tafsir\"\n                id=\"show-tafsir-label\"\n              />\n              \n              {settings.showTafsir && (\n                <FormControl fullWidth margin=\"normal\">\n                  <InputLabel id=\"tafsir-label\">Tafsir</InputLabel>\n                  <Select\n                    labelId=\"tafsir-label\"\n                    value={settings.tafsirId}\n                    onChange={(e) => updateSetting('tafsirId', e.target.value)}\n                    label=\"Tafsir\"\n                  >\n                    {tafsirs.map((tafsir) => (\n                      <MenuItem key={tafsir.identifier} value={tafsir.identifier}>\n                        {tafsir.name} ({tafsir.language})\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              )}\n              \n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={settings.wordByWord}\n                    onChange={(e) => updateSetting('wordByWord', e.target.checked)}\n                    aria-labelledby=\"word-by-word-label\" // Link to label text\n                  />\n                }\n                label=\"Word-by-Word Translation\"\n                id=\"word-by-word-label\"\n                sx={{ mt: 1 }}\n              />\n            </Box>\n          )}\n        </Box>\n        \n        {/* Audio Tab Panel */}\n        <Box \n          role=\"tabpanel\" \n          hidden={tabIndex !== 2} \n          id=\"settings-tabpanel-audio\" \n          aria-labelledby=\"settings-tab-audio\"\n        >\n          {tabIndex === 2 && (\n            <Box>\n              <Typography variant=\"subtitle2\" sx={{ mb: 1 }} id=\"audio-settings-label\">\n                Audio Settings\n              </Typography>\n              <Box sx={{ my: 2 }}>\n                <ReactSelect\n                  inputId=\"reciter-select\"\n                  classNamePrefix=\"react-select\"\n                  options={reciters}\n                  components={{ Option: ReciterOption, SingleValue: ReciterSingleValue }}\n                  value={reciters.find(r => r.value === settings.reciterId) || null}\n                  onChange={option => updateSetting('reciterId', option ? option.value : null)}\n                  placeholder=\"Select reciter...\"\n                  isClearable\n                  styles={{\n                    control: (base, state) => ({\n                      ...base,\n                      borderRadius: 18,\n                      boxShadow: state.isFocused ? '0 2px 16px rgba(0,0,0,0.10)' : '0 2px 8px rgba(0,0,0,0.05)',\n                      borderColor: state.isFocused ? '#1976d2' : base.borderColor,\n                      minHeight: 56,\n                    }),\n                    option: (base, state) => ({\n                      ...base,\n                      background: state.isSelected ? '#e3f2fd' : state.isFocused ? '#f5faff' : 'white',\n                      color: '#222',\n                      borderRadius: 12,\n                      margin: '2px 4px',\n                      boxShadow: state.isFocused ? '0 2px 8px rgba(0,0,0,0.07)' : undefined,\n                    }),\n                  }}\n                />\n              </Box>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={settings.autoPlayAyahs}\n                    onChange={(e) => updateSetting('autoPlayAyahs', e.target.checked)}\n                    aria-labelledby=\"autoplay-label\" // Link to label text\n                  />\n                }\n                label=\"Auto-play Next Ayah\"\n                id=\"autoplay-label\"\n                sx={{ mt: 1 }}\n              />\n            </Box>\n          )}\n        </Box>\n\n        {/* Display Tab Panel */}\n        <Box \n          role=\"tabpanel\" \n          hidden={tabIndex !== 3} \n          id=\"settings-tabpanel-display\" \n          aria-labelledby=\"settings-tab-display\"\n        >\n          {tabIndex === 3 && (\n            <Box>\n              <Typography variant=\"subtitle2\" sx={{ mb: 1 }} id=\"display-options-label\">\n                Display Options\n              </Typography>\n              \n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={settings.showTajweed}\n                    onChange={(e) => updateSetting('showTajweed', e.target.checked)}\n                    aria-labelledby=\"show-tajweed-label\" // Link to label text\n                  />\n                }\n                label=\"Show Tajweed Colors\"\n                id=\"show-tajweed-label\"\n              />\n              \n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={settings.showPageView}\n                    onChange={(e) => updateSetting('showPageView', e.target.checked)}\n                    aria-labelledby=\"show-page-view-label\" // Link to label text\n                  />\n                }\n                label=\"Show in Page View\"\n                id=\"show-page-view-label\"\n              />\n              \n              <Typography variant=\"subtitle2\" sx={{ mt: 2, mb: 1 }} id=\"navigation-mode-label\">\n                Navigation Mode\n              </Typography>\n              \n              <RadioGroup\n                aria-labelledby=\"navigation-mode-label\" // Use label ID\n                value={settings.navigationMode}\n                onChange={(e) => updateSetting('navigationMode', e.target.value)}\n              >\n                <FormControlLabel value=\"page\" control={<Radio />} label=\"Page\" />\n                <FormControlLabel value=\"surah\" control={<Radio />} label=\"Surah\" />\n                <FormControlLabel value=\"juz\" control={<Radio />} label=\"Juz\" />\n                <FormControlLabel value=\"hizb\" control={<Radio />} label=\"Hizb\" />\n                <FormControlLabel value=\"ruku\" control={<Radio />} label=\"Ruku\" />\n                <FormControlLabel value=\"manzil\" control={<Radio />} label=\"Manzil\" />\n              </RadioGroup>\n            </Box>\n          )}\n        </Box>\n        \n        <Box sx={{ mt: 3, textAlign: 'center' }}>\n          <Button \n            variant=\"outlined\" \n            color=\"secondary\" \n            startIcon={<RestartAltIcon />}\n            onClick={resetSettings}\n          >\n            Reset All Settings\n          </Button>\n        </Box>\n      </Box>\n    </Drawer>\n  );\n};\n\nexport default QuranSettingsPanel;","// src/components/quran/SurahList.js\nimport React, { useState } from 'react';\nimport {\n  Box,\n  Paper,\n  List,\n  ListItemButton,\n  ListItemText,\n  Typography,\n  TextField,\n  InputAdornment,\n  Divider\n} from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\n\nconst SurahList = ({ surahs, selectedSurah, onSelectSurah }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  \n  // Filter surahs based on search query\n  const filteredSurahs = surahs.filter(surah => {\n    const query = searchQuery.toLowerCase();\n    return (\n      surah.englishName.toLowerCase().includes(query) ||\n      surah.englishNameTranslation.toLowerCase().includes(query) ||\n      surah.number.toString().includes(query)\n    );\n  });\n  \n  return (\n    <Paper elevation={3} sx={{ borderRadius: 2 }}>\n      <Box sx={{ p: 2 }}>\n        <Typography variant=\"h6\" component=\"h2\" sx={{ mb: 2 }}>\n          Surahs\n        </Typography>\n        \n        <TextField\n          fullWidth\n          size=\"small\"\n          placeholder=\"Search Surah\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            ),\n          }}\n          sx={{ mb: 2 }}\n        />\n        \n        <Divider />\n        \n        <List \n          sx={{ \n            maxHeight: 'calc(100vh - 220px)', \n            overflow: 'auto', \n            pt: 0 \n          }} \n          dense\n        >\n          {filteredSurahs.map((surah) => (\n            <ListItemButton\n              key={surah.number}\n              selected={selectedSurah === surah.number}\n              onClick={() => onSelectSurah(surah.number)}\n            >\n              <ListItemText\n                primary={\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                    <Typography variant=\"body2\">\n                      {surah.number}. {surah.englishName}\n                    </Typography>\n                    <Typography \n                      variant=\"body2\" \n                      sx={{ \n                        fontFamily: 'Scheherazade, serif',\n                        fontSize: '1.1rem'\n                      }}\n                    >\n                      {surah.name.split(' ')[1] || surah.name}\n                    </Typography>\n                  </Box>\n                }\n                secondary={surah.englishNameTranslation}\n              />\n            </ListItemButton>\n          ))}\n        </List>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default SurahList;","/**\n * QuranProgressTracker - A utility for tracking a user's progress through Quran reading\n * \n * Features:\n * - Track which ayahs have been read\n * - Record last read position\n * - Calculate overall reading progress\n * - Track reading streaks\n * - Persist data in localStorage\n * - Support for setting reading goals\n */\n\n// Constants\nconst STORAGE_KEYS = {\n  READ_AYAHS: 'quran-progress-read-ayahs',\n  LAST_POSITION: 'quran-progress-last-position',\n  READING_STREAK: 'quran-progress-reading-streak',\n  READING_GOALS: 'quran-progress-goals'\n};\n\n// Quran structure constants\nconst QURAN_STATS = {\n  TOTAL_SURAHS: 114,\n  TOTAL_AYAHS: 6236,\n  TOTAL_JUZS: 30\n};\n\nclass QuranProgressTracker {\n  constructor() {\n    // Initialize storage if needed\n    this._initializeStorage();\n  }\n\n  /**\n   * Initialize storage with default values if not already set\n   * @private\n   */\n  _initializeStorage() {\n    if (!localStorage.getItem(STORAGE_KEYS.READ_AYAHS)) {\n      localStorage.setItem(STORAGE_KEYS.READ_AYAHS, JSON.stringify({}));\n    }\n\n    if (!localStorage.getItem(STORAGE_KEYS.READING_STREAK)) {\n      const defaultStreak = {\n        currentStreak: 0,\n        longestStreak: 0,\n        lastReadDate: null,\n        history: []\n      };\n      localStorage.setItem(STORAGE_KEYS.READING_STREAK, JSON.stringify(defaultStreak));\n    }\n\n    if (!localStorage.getItem(STORAGE_KEYS.READING_GOALS)) {\n      const defaultGoals = {\n        dailyAyahs: 20,\n        completionTarget: null // Target date to complete Quran\n      };\n      localStorage.setItem(STORAGE_KEYS.READING_GOALS, JSON.stringify(defaultGoals));\n    }\n  }\n\n  /**\n   * Mark an ayah as read\n   * @param {number} surah - Surah number (1-114)\n   * @param {number} ayah - Ayah number\n   * @param {boolean} isComplete - Whether the ayah was fully read\n   */\n  markAsRead(surah, ayah, isComplete = true) {\n    if (!this._isValidSurah(surah) || !this._isValidAyah(surah, ayah)) {\n      console.error('Invalid surah or ayah number');\n      return false;\n    }\n\n    try {\n      // Update read ayahs record\n      const readAyahs = JSON.parse(localStorage.getItem(STORAGE_KEYS.READ_AYAHS)) || {};\n      \n      if (!readAyahs[surah]) {\n        readAyahs[surah] = {};\n      }\n      \n      // Only mark if not already read\n      const timestamp = new Date().toISOString();\n      readAyahs[surah][ayah] = {\n        read: isComplete,\n        timestamp: timestamp\n      };\n      \n      localStorage.setItem(STORAGE_KEYS.READ_AYAHS, JSON.stringify(readAyahs));\n      \n      // Update last read position\n      this.updateLastReadPosition(surah, ayah);\n      \n      // Update reading streak\n      this._updateReadingStreak();\n\n      // Dispatch storage event to notify other components\n      window.dispatchEvent(new Event('storage'));\n      \n      return true;\n    } catch (error) {\n      console.error('Error marking ayah as read:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Mark a range of ayahs as read\n   * @param {number} startSurah - Starting surah number\n   * @param {number} startAyah - Starting ayah number\n   * @param {number} endSurah - Ending surah number\n   * @param {number} endAyah - Ending ayah number\n   */\n  markRangeAsRead(startSurah, startAyah, endSurah, endAyah) {\n    if (startSurah > endSurah || (startSurah === endSurah && startAyah > endAyah)) {\n      // Swap start and end if they're in the wrong order\n      [startSurah, startAyah, endSurah, endAyah] = [endSurah, endAyah, startSurah, startAyah];\n    }\n\n    try {\n      const readAyahs = JSON.parse(localStorage.getItem(STORAGE_KEYS.READ_AYAHS)) || {};\n      const timestamp = new Date().toISOString();\n      \n      // Mark each ayah in the range as read\n      for (let s = startSurah; s <= endSurah; s++) {\n        if (!readAyahs[s]) {\n          readAyahs[s] = {};\n        }\n        \n        // Calculate start and end ayah for this surah\n        const firstAyah = (s === startSurah) ? startAyah : 1;\n        const lastAyah = (s === endSurah) ? endAyah : this._getSurahAyahCount(s);\n        \n        for (let a = firstAyah; a <= lastAyah; a++) {\n          readAyahs[s][a] = {\n            read: true,\n            timestamp\n          };\n        }\n      }\n      \n      localStorage.setItem(STORAGE_KEYS.READ_AYAHS, JSON.stringify(readAyahs));\n      \n      // Update last read position to the end of the range\n      this.updateLastReadPosition(endSurah, endAyah);\n      \n      // Update reading streak\n      this._updateReadingStreak();\n      \n      return true;\n    } catch (error) {\n      console.error('Error marking ayah range as read:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Update the last read position\n   * @param {number} surah - Surah number\n   * @param {number} ayah - Ayah number\n   */\n  updateLastReadPosition(surah, ayah) {\n    if (!this._isValidSurah(surah) || !this._isValidAyah(surah, ayah)) {\n      console.error('Invalid surah or ayah number');\n      return false;\n    }\n\n    try {\n      const lastPosition = {\n        surah,\n        ayah,\n        timestamp: new Date().toISOString()\n      };\n      \n      localStorage.setItem(STORAGE_KEYS.LAST_POSITION, JSON.stringify(lastPosition));\n      return true;\n    } catch (error) {\n      console.error('Error updating last read position:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Get the last read position\n   * @returns {Object|null} Last read position {surah, ayah, timestamp}\n   */\n  getLastReadPosition() {\n    try {\n      const lastPosition = localStorage.getItem(STORAGE_KEYS.LAST_POSITION);\n      return lastPosition ? JSON.parse(lastPosition) : null;\n    } catch (error) {\n      console.error('Error getting last read position:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Check if an ayah has been read\n   * @param {number} surah - Surah number\n   * @param {number} ayah - Ayah number\n   * @returns {boolean} Whether the ayah has been read\n   */\n  isAyahRead(surah, ayah) {\n    try {\n      const readAyahs = JSON.parse(localStorage.getItem(STORAGE_KEYS.READ_AYAHS)) || {};\n      return !!(readAyahs[surah] && readAyahs[surah][ayah] && readAyahs[surah][ayah].read);\n    } catch (error) {\n      console.error('Error checking if ayah is read:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Get the timestamp of when an ayah was read\n   * @param {number} surah - Surah number\n   * @param {number} ayah - Ayah number\n   * @returns {string|null} ISO timestamp string or null if not read\n   */\n  getAyahReadTimestamp(surah, ayah) {\n    try {\n      const readAyahs = JSON.parse(localStorage.getItem(STORAGE_KEYS.READ_AYAHS)) || {};\n      \n      if (readAyahs[surah] && readAyahs[surah][ayah] && readAyahs[surah][ayah].read) {\n        return readAyahs[surah][ayah].timestamp;\n      }\n      \n      return null;\n    } catch (error) {\n      console.error('Error getting ayah read timestamp:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Calculate and return the overall reading progress\n   * @returns {Object} Progress object with completed count, total, and percentage\n   */\n  getOverallProgress() {\n    try {\n      const readAyahs = JSON.parse(localStorage.getItem(STORAGE_KEYS.READ_AYAHS)) || {};\n      let completedCount = 0;\n      \n      // Count all read ayahs\n      Object.keys(readAyahs).forEach(surah => {\n        Object.keys(readAyahs[surah]).forEach(ayah => {\n          if (readAyahs[surah][ayah].read) {\n            completedCount++;\n          }\n        });\n      });\n      \n      const percentage = Math.round((completedCount / QURAN_STATS.TOTAL_AYAHS) * 100);\n      \n      return {\n        completed: completedCount,\n        total: QURAN_STATS.TOTAL_AYAHS,\n        percentage\n      };\n    } catch (error) {\n      console.error('Error calculating overall progress:', error);\n      return { completed: 0, total: QURAN_STATS.TOTAL_AYAHS, percentage: 0 };\n    }\n  }\n\n  /**\n   * Get surah-level progress\n   * @param {number} surah - Surah number\n   * @returns {Object} Progress object with completed count, total, and percentage\n   */\n  getSurahProgress(surah) {\n    if (!this._isValidSurah(surah)) {\n      console.error('Invalid surah number');\n      return { completed: 0, total: 0, percentage: 0 };\n    }\n\n    try {\n      const readAyahs = JSON.parse(localStorage.getItem(STORAGE_KEYS.READ_AYAHS)) || {};\n      const surahAyahCount = this._getSurahAyahCount(surah);\n      let completedCount = 0;\n      \n      if (readAyahs[surah]) {\n        Object.keys(readAyahs[surah]).forEach(ayah => {\n          if (readAyahs[surah][ayah].read) {\n            completedCount++;\n          }\n        });\n      }\n      \n      const percentage = surahAyahCount > 0 ? \n        Math.round((completedCount / surahAyahCount) * 100) : 0;\n      \n      return {\n        completed: completedCount,\n        total: surahAyahCount,\n        percentage\n      };\n    } catch (error) {\n      console.error('Error calculating surah progress:', error);\n      return { completed: 0, total: this._getSurahAyahCount(surah), percentage: 0 };\n    }\n  }\n\n  /**\n   * Get juz-level progress\n   * @param {number} juz - Juz number (1-30)\n   * @returns {Object} Progress object with completed count, total, and percentage\n   */\n  getJuzProgress(juz) {\n    if (juz < 1 || juz > 30) {\n      console.error('Invalid juz number');\n      return { completed: 0, total: 0, percentage: 0 };\n    }\n\n    // This would require a mapping of juz boundaries\n    // For now, returning a placeholder\n    return { completed: 0, total: 0, percentage: 0 };\n  }\n\n  /**\n   * Reset progress for the entire Quran or a specific surah\n   * @param {number|null} surah - Surah number or null to reset all\n   */\n  resetProgress(surah = null) {\n    try {\n      if (surah !== null) {\n        if (!this._isValidSurah(surah)) {\n          console.error('Invalid surah number');\n          return false;\n        }\n        \n        const readAyahs = JSON.parse(localStorage.getItem(STORAGE_KEYS.READ_AYAHS)) || {};\n        delete readAyahs[surah];\n        localStorage.setItem(STORAGE_KEYS.READ_AYAHS, JSON.stringify(readAyahs));\n      } else {\n        // Reset all progress\n        localStorage.setItem(STORAGE_KEYS.READ_AYAHS, JSON.stringify({}));\n        localStorage.removeItem(STORAGE_KEYS.LAST_POSITION);\n        \n        // Reset reading streak\n        const streakData = {\n          currentStreak: 0,\n          longestStreak: 0,\n          lastReadDate: null,\n          history: []\n        };\n        localStorage.setItem(STORAGE_KEYS.READING_STREAK, JSON.stringify(streakData));\n        \n        // Keep reading goals as they are\n        \n        // Notify other components that storage has changed\n        window.dispatchEvent(new Event('storage'));\n      }\n      \n      return true;\n    } catch (error) {\n      console.error('Error resetting progress:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Get reading streak information\n   * @returns {Object} Streak information\n   */\n  getReadingStreak() {\n    try {\n      const streak = localStorage.getItem(STORAGE_KEYS.READING_STREAK);\n      return streak ? JSON.parse(streak) : null;\n    } catch (error) {\n      console.error('Error getting reading streak:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Set reading goals\n   * @param {Object} goals - The goals object\n   * @param {number} goals.dailyAyahs - Target number of ayahs to read daily\n   * @param {string|null} goals.completionTarget - Target date for completing the Quran\n   */\n  setReadingGoals(goals) {\n    try {\n      const currentGoals = JSON.parse(localStorage.getItem(STORAGE_KEYS.READING_GOALS)) || {};\n      const updatedGoals = { ...currentGoals, ...goals };\n      localStorage.setItem(STORAGE_KEYS.READING_GOALS, JSON.stringify(updatedGoals));\n      return true;\n    } catch (error) {\n      console.error('Error setting reading goals:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Get current reading goals\n   * @returns {Object} Reading goals\n   */\n  getReadingGoals() {\n    try {\n      const goals = localStorage.getItem(STORAGE_KEYS.READING_GOALS);\n      return goals ? JSON.parse(goals) : null;\n    } catch (error) {\n      console.error('Error getting reading goals:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Calculate daily progress toward goals\n   * @returns {Object} Daily progress information\n   */\n  getDailyProgress() {\n    try {\n      const goals = this.getReadingGoals();\n      if (!goals || !goals.dailyAyahs) return null;\n      \n      const today = new Date().toISOString().split('T')[0]; // YYYY-MM-DD\n      const readAyahs = JSON.parse(localStorage.getItem(STORAGE_KEYS.READ_AYAHS)) || {};\n      let todayCount = 0;\n      \n      // Count ayahs read today\n      Object.keys(readAyahs).forEach(surah => {\n        Object.keys(readAyahs[surah]).forEach(ayah => {\n          const timestamp = readAyahs[surah][ayah].timestamp;\n          if (timestamp && timestamp.startsWith(today)) {\n            todayCount++;\n          }\n        });\n      });\n      \n      const percentage = Math.min(100, Math.round((todayCount / goals.dailyAyahs) * 100));\n      \n      return {\n        completed: todayCount,\n        target: goals.dailyAyahs,\n        percentage,\n        remainingToday: Math.max(0, goals.dailyAyahs - todayCount)\n      };\n    } catch (error) {\n      console.error('Error calculating daily progress:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Export progress data (for backup or syncing)\n   * @returns {Object} Full progress data\n   */\n  exportProgressData() {\n    try {\n      return {\n        readAyahs: JSON.parse(localStorage.getItem(STORAGE_KEYS.READ_AYAHS) || '{}'),\n        lastPosition: JSON.parse(localStorage.getItem(STORAGE_KEYS.LAST_POSITION) || 'null'),\n        readingStreak: JSON.parse(localStorage.getItem(STORAGE_KEYS.READING_STREAK) || '{}'),\n        goals: JSON.parse(localStorage.getItem(STORAGE_KEYS.READING_GOALS) || '{}')\n      };\n    } catch (error) {\n      console.error('Error exporting progress data:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Import progress data (from backup or sync)\n   * @param {Object} data - Progress data to import\n   */\n  importProgressData(data) {\n    try {\n      if (data.readAyahs) {\n        localStorage.setItem(STORAGE_KEYS.READ_AYAHS, JSON.stringify(data.readAyahs));\n      }\n      if (data.lastPosition) {\n        localStorage.setItem(STORAGE_KEYS.LAST_POSITION, JSON.stringify(data.lastPosition));\n      }\n      if (data.readingStreak) {\n        localStorage.setItem(STORAGE_KEYS.READING_STREAK, JSON.stringify(data.readingStreak));\n      }\n      if (data.goals) {\n        localStorage.setItem(STORAGE_KEYS.READING_GOALS, JSON.stringify(data.goals));\n      }\n      return true;\n    } catch (error) {\n      console.error('Error importing progress data:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Update reading streak based on current activity\n   * @private\n   */\n  _updateReadingStreak() {\n    try {\n      const streak = JSON.parse(localStorage.getItem(STORAGE_KEYS.READING_STREAK)) || {\n        currentStreak: 0,\n        longestStreak: 0,\n        lastReadDate: null,\n        history: []\n      };\n      \n      const today = new Date().toISOString().split('T')[0]; // YYYY-MM-DD\n      \n      if (streak.lastReadDate === today) {\n        // Already counted for today, nothing to do\n        return;\n      }\n      \n      if (streak.lastReadDate) {\n        const lastDate = new Date(streak.lastReadDate);\n        const yesterday = new Date();\n        yesterday.setDate(yesterday.getDate() - 1);\n        yesterday.setHours(0, 0, 0, 0);\n        const yesterdayString = yesterday.toISOString().split('T')[0];\n        \n        if (streak.lastReadDate === yesterdayString) {\n          // Continuation of the streak - yesterday was the last read\n          streak.currentStreak++;\n        } else {\n          // Break in streak\n          streak.currentStreak = 1;\n        }\n      } else {\n        // First reading\n        streak.currentStreak = 1;\n      }\n      \n      // Update longest streak if needed\n      streak.longestStreak = Math.max(streak.longestStreak, streak.currentStreak);\n      \n      // Update the last read date\n      streak.lastReadDate = today;\n      \n      // Add to history if not already there\n      if (!streak.history.includes(today)) {\n        streak.history.push(today);\n        // Keep only the last 365 entries\n        if (streak.history.length > 365) {\n          streak.history.shift();\n        }\n      }\n      \n      localStorage.setItem(STORAGE_KEYS.READING_STREAK, JSON.stringify(streak));\n    } catch (error) {\n      console.error('Error updating reading streak:', error);\n    }\n  }\n\n  /**\n   * Check if a surah number is valid\n   * @param {number} surah - Surah number to check\n   * @returns {boolean} Whether the surah number is valid\n   * @private\n   */\n  _isValidSurah(surah) {\n    return surah >= 1 && surah <= QURAN_STATS.TOTAL_SURAHS;\n  }\n\n  /**\n   * Check if an ayah number is valid for a given surah\n   * @param {number} surah - Surah number\n   * @param {number} ayah - Ayah number to check\n   * @returns {boolean} Whether the ayah number is valid for the surah\n   * @private\n   */\n  _isValidAyah(surah, ayah) {\n    const ayahCount = this._getSurahAyahCount(surah);\n    return ayah >= 1 && ayah <= ayahCount;\n  }\n\n  /**\n   * Get the number of ayahs in a surah\n   * @param {number} surah - Surah number\n   * @returns {number} Number of ayahs in the surah\n   * @private\n   */\n  _getSurahAyahCount(surah) {\n    // This is a simplified version - in a real app, you'd have a complete mapping\n    const ayahCounts = [\n      7, 286, 200, 176, 120, 165, 206, 75, 129, 109, // 1-10\n      123, 111, 43, 52, 99, 128, 111, 110, 98, 135,  // 11-20\n      112, 78, 118, 64, 77, 227, 93, 88, 69, 60,     // 21-30\n      34, 30, 73, 54, 45, 83, 182, 88, 75, 85,       // 31-40\n      54, 53, 89, 59, 37, 35, 38, 29, 18, 45,        // 41-50\n      60, 49, 62, 55, 78, 96, 29, 22, 24, 13,        // 51-60\n      14, 11, 11, 18, 12, 12, 30, 52, 52, 44,        // 61-70\n      28, 28, 20, 56, 40, 31, 50, 40, 46, 42,        // 71-80\n      29, 19, 36, 25, 22, 17, 19, 26, 30, 20,        // 81-90\n      15, 21, 11, 8, 8, 19, 5, 8, 8, 11,             // 91-100\n      11, 8, 3, 9, 5, 4, 7, 3, 6, 3,                 // 101-110\n      5, 4, 5, 6                                     // 111-114\n    ];\n    \n    return ayahCounts[surah - 1] || 0;\n  }\n}\n\n// Create a singleton instance\nconst quranProgressTracker = new QuranProgressTracker();\nObject.freeze(quranProgressTracker);\n\nexport default quranProgressTracker;","import React, { useEffect, useRef } from 'react';\n\nconsole.log('WordByWordSpeechBubble module loaded');\n\nconst WordByWordSpeechBubble = ({ ayah, surah, selectedWord, setSelectedWord, settings, tajweedQuranData }) => {\n  // Always call hooks at the top level\n  const bubbleRef = useRef();\n  useEffect(() => {\n    function handleClick(event) {\n      if (bubbleRef.current && !bubbleRef.current.contains(event.target)) {\n        setSelectedWord && setSelectedWord(null);\n      }\n    }\n    if (selectedWord) {\n      document.addEventListener('mousedown', handleClick);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n    };\n  }, [selectedWord, setSelectedWord]);\n\n  // Debug: always log props\n  console.log('WordByWordSpeechBubble MOUNTED', {ayah, surah, settings});\n\n  // Robustly handle ayah.text for quran-kids at the top\n  let ayahText = ayah && ayah.text;\n  console.log('WordByWordSpeechBubble typeof ayah.text:', typeof ayahText, ayahText);\n  if (typeof ayahText !== 'string' && ayahText != null) {\n    try {\n      ayahText = JSON.parse(ayahText);\n      console.log('Parsed ayahText:', ayahText);\n    } catch (e) {\n      ayahText = String(ayahText);\n      console.log('Stringified ayahText:', ayahText);\n    }\n  }\n  console.log('Final ayahText for rendering:', ayahText);\n\n  if (!ayah) {\n    console.log('WordByWordSpeechBubble: ayah is undefined or null');\n    return <span style={{color: 'red'}}>No ayah data</span>;\n  }\n\n  return (\n    <div\n      style={{\n        direction: 'rtl',\n        textAlign: 'right',\n        fontFamily: settings.fontFamily,\n        fontSize: settings.fontSize,\n        fontWeight: settings.fontWeight || 'bold',\n        lineHeight: 2,\n        marginBottom: 16,\n        wordBreak: 'keep-all',\n        textRendering: 'optimizeLegibility',\n        WebkitFontSmoothing: 'antialiased',\n      }}\n    >\n      {ayah.words && settings.quranEdition === 'quran-wordbyword-2' ? (\n        ayah.words.map((word, idx) => {\n          const isSelected = selectedWord &&\n            selectedWord.surahNumber === surah.number &&\n            selectedWord.ayahNumber === ayah.numberInSurah &&\n            selectedWord.wordNumberInAyah === word.word_number_in_ayah;\n          const arabicWithTajweed = word.word_arabic_tajweed || word.word_arabic;\n          return (\n            <span\n              key={word.word_number_in_ayah}\n              style={{\n                cursor: 'pointer',\n                color: isSelected ? '#fff' : '#1976d2',\n                background: isSelected ? 'linear-gradient(90deg,#1976d2 60%,#42a5f5 100%)' : 'transparent',\n                borderRadius: '8px',\n                padding: '0 8px',\n                marginLeft: 6,\n                fontWeight: 'bold',\n                transition: 'background 0.2s, color 0.2s',\n                display: 'inline-block',\n                position: 'relative',\n                boxShadow: isSelected ? '0 2px 12px 0 rgba(33,150,243,0.15)' : 'none',\n              }}\n              title={word.word_translation || ''}\n              onClick={e => {\n                e.stopPropagation();\n                setSelectedWord({\n                  surahNumber: surah.number,\n                  ayahNumber: ayah.numberInSurah,\n                  wordNumberInAyah: word.word_number_in_ayah\n                });\n                // Play audio if available with improved error handling\n                if (word.audio && word.audio.default) {\n                  // Track audio loading attempts\n                  let audioAttempts = 0;\n                  const maxAttempts = 2;\n                  \n                  // Function to try loading audio with different paths\n                  const tryPlayAudio = (audioPath) => {\n                    audioAttempts++;\n                    try {\n                      const audio = new window.Audio(audioPath);\n                      \n                      // Add error handling for missing files\n                      audio.addEventListener('error', (err) => {\n                        console.warn(`Audio error (attempt ${audioAttempts}):`, err);\n                        \n                        // If primary path failed, try alternate path\n                        if (audioAttempts === 1) {\n                          // Try alternate path format (without /audio/ prefix)\n                          tryPlayAudio(`${word.audio.default}`);\n                        } else if (audioAttempts === 2) {\n                          // Try absolute path with different folder structure\n                          tryPlayAudio(`/audio/words/${word.audio.default}`);\n                        } else if (audioAttempts > maxAttempts) {\n                          // Only show user feedback after multiple attempts\n                          console.error('Could not play audio after multiple attempts');\n                          // Show subtle feedback instead of alert\n                          const wordElement = e.currentTarget;\n                          if (wordElement) {\n                            // Add temporary visual feedback\n                            const originalBackground = wordElement.style.background;\n                            wordElement.style.background = 'rgba(255,0,0,0.1)';\n                            setTimeout(() => {\n                              wordElement.style.background = originalBackground;\n                            }, 300);\n                          }\n                        }\n                      });\n                      \n                      // Attempt to play\n                      audio.play()\n                        .then(() => {\n                          console.log('Audio started:', audioPath);\n                        })\n                        .catch(err => {\n                          if (err.name === 'NotSupportedError' || err.name === 'NotAllowedError') {\n                            console.warn('Audio playback not allowed or supported');\n                          } else if (err.name === 'AbortError') {\n                            console.warn('Audio playback aborted');\n                          } else {\n                            console.warn('Audio play error:', err);\n                            \n                            // Try fallback if this is first attempt\n                            if (audioAttempts <= maxAttempts) {\n                              if (audioAttempts === 1) {\n                                tryPlayAudio(`${word.audio.default}`);\n                              } else {\n                                tryPlayAudio(`/audio/words/${word.audio.default}`);\n                              }\n                            }\n                          }\n                        });\n                    } catch (err) {\n                      console.warn('Audio object error:', err);\n                    }\n                  };\n                  \n                  // Start with default path\n                  tryPlayAudio(`/audio/${word.audio.default}`);\n                } else {\n                  console.log('No audio property found for word:', word);\n                  \n                  // Try to construct a default audio path based on position\n                  const surahNum = surah.number;\n                  const ayahNum = ayah.numberInSurah;\n                  const wordNum = word.word_number_in_ayah;\n                  const defaultAudioFile = `${String(surahNum).padStart(3, '0')}_${String(ayahNum).padStart(3, '0')}_${String(wordNum).padStart(3, '0')}.mp3`;\n                  \n                  try {\n                    const audio = new window.Audio(`/audio/${defaultAudioFile}`);\n                    audio.play().catch(() => {\n                      // Silent failure\n                      console.warn('Could not play fallback audio:', defaultAudioFile);\n                    });\n                  } catch (err) {\n                    // Silent failure\n                    console.warn('Could not create fallback audio object');\n                  }\n                }\n              }}\n            >\n              <span\n                dangerouslySetInnerHTML={{\n                  __html: require('../../utils/tajweedParser').parseTajweedText(arabicWithTajweed, true, false)\n                }}\n              />\n              {isSelected && (word.word_translation || word.word_transliteration) && (\n                <span\n                  ref={bubbleRef}\n                  style={{\n                    position: 'absolute',\n                    bottom: '2.2em',\n                    right: '-10px',\n                    background: 'rgba(255,255,255,0.98)',\n                    color: '#222',\n                    border: '1.5px solid #1976d2',\n                    borderRadius: 8,\n                    boxShadow: '0 2px 8px 0 rgba(33,150,243,0.12)',\n                    padding: '4px 10px',\n                    zIndex: 20,\n                    minWidth: 80,\n                    maxWidth: 180,\n                    fontSize: '0.82em',\n                    whiteSpace: 'pre-line',\n                    textAlign: 'center',\n                    fontFamily: 'inherit',\n                    animation: 'fadeInBubble 0.18s cubic-bezier(.4,0,.2,1)',\n                  }}\n                >\n                  <div style={{fontWeight:'bold',color:'#1976d2',fontSize:'0.98em',marginBottom:2}}>{word.word_translation}</div>\n                  {word.word_transliteration && (\n                    <div style={{ fontSize: '0.78em', color: '#555', marginTop: 2, fontStyle:'italic' }}>\n                      {word.word_transliteration}\n                    </div>\n                  )}\n                  <span\n                    style={{\n                      position: 'absolute',\n                      bottom: '-10px',\n                      right: 24,\n                      width: 0,\n                      height: 0,\n                      borderLeft: '8px solid transparent',\n                      borderRight: '8px solid transparent',\n                      borderTop: '10px solid #1976d2',\n                    }}\n                  />\n                </span>\n              )}\n            </span>\n          );\n        })\n      ) : ayahText && typeof ayahText === 'string' && ayahText.includes('|') ? (\n        ayahText.split('$').filter(Boolean).map((block, idx, arr) => {\n          const parts = block.split('|');\n          const arabic = parts[0] || '';\n          const translation = parts[1] || '';\n          const surahNum = surah.number;\n          const ayahNum = ayah.numberInSurah;\n          const wordNum = idx + 1;\n          const audioFile = `${String(surahNum).padStart(3, '0')}_${String(ayahNum).padStart(3, '0')}_${String(wordNum).padStart(3, '0')}.mp3`;\n          const isSelected = selectedWord &&\n            selectedWord.surahNumber === surahNum &&\n            selectedWord.ayahNumber === ayahNum &&\n            selectedWord.wordNumberInAyah === wordNum;\n          const KIDS_COLORS = [\n            '#e57373', '#64b5f6', '#81c784', '#ffd54f', '#ba68c8',\n            '#4db6ac', '#ffb74d', '#a1887f', '#90a4ae', '#f06292',\n          ];\n          return (\n            <span\n              key={wordNum}\n              style={{\n                cursor: 'pointer',\n                color: isSelected ? '#fff' : KIDS_COLORS[(wordNum-1) % KIDS_COLORS.length],\n                background: isSelected ? 'linear-gradient(90deg,#1976d2 60%,#42a5f5 100%)' : 'transparent',\n                borderRadius: '8px',\n                padding: '0 8px',\n                marginLeft: 6,\n                fontWeight: 'bold',\n                transition: 'background 0.2s, color 0.2s',\n                display: 'inline-block',\n                position: 'relative',\n                boxShadow: isSelected ? '0 2px 12px 0 rgba(33,150,243,0.15)' : 'none',\n                direction: 'rtl',\n                fontSize: settings.fontSize,\n              }}\n              title={translation || ''}\n              onClick={e => {\n                e.stopPropagation();\n                setSelectedWord && setSelectedWord({\n                  surahNumber: surahNum,\n                  ayahNumber: ayahNum,\n                  wordNumberInAyah: wordNum\n                });\n                // Play audio for quran-kids\n                try {\n                  const audio = new window.Audio(`/audio/${audioFile}`);\n                  audio.play().then(() => {\n                    console.log('Audio started:', audioFile);\n                  }).catch(err => {\n                    console.log('Audio play error:', err);\n                    alert('Audio could not be played. See console for details.');\n                  });\n                } catch (err) {\n                  console.log('Audio object error:', err);\n                  alert('Audio object could not be created. See console for details.');\n                }\n              }}\n            >\n              {arabic}\n              {isSelected && translation && (\n                <span\n                  ref={bubbleRef}\n                  style={{\n                    position: 'absolute',\n                    bottom: '2.2em',\n                    right: '-10px',\n                    background: 'rgba(255,255,255,0.98)',\n                    color: '#222',\n                    border: '1.5px solid #1976d2',\n                    borderRadius: 8,\n                    boxShadow: '0 2px 8px 0 rgba(33,150,243,0.12)',\n                    padding: '4px 10px',\n                    zIndex: 20,\n                    minWidth: 80,\n                    maxWidth: 180,\n                    fontSize: '0.82em',\n                    whiteSpace: 'pre-line',\n                    textAlign: 'center',\n                    fontFamily: 'inherit',\n                    animation: 'fadeInBubble 0.18s cubic-bezier(.4,0,.2,1)',\n                  }}\n                >\n                  <div style={{fontWeight:'bold',color:'#1976d2',fontSize:'0.98em',marginBottom:2}}>{translation}</div>\n                  <span\n                    style={{\n                      position: 'absolute',\n                      bottom: '-10px',\n                      right: 24,\n                      width: 0,\n                      height: 0,\n                      borderLeft: '8px solid transparent',\n                      borderRight: '8px solid transparent',\n                      borderTop: '10px solid #1976d2',\n                    }}\n                  />\n                </span>\n              )}\n            </span>\n          );\n        })\n      ) : null}\n    </div>\n  );\n};\n\nexport default WordByWordSpeechBubble;\n","import React, { useEffect, useRef } from 'react';\n\nconsole.log('WordByWordSpeechBubble module loaded');\n\nconst WordByWordSpeechBubble = ({ ayah, surah, selectedWord, setSelectedWord, settings, tajweedQuranData }) => {\n  // Always call hooks at the top level\n  const bubbleRef = useRef();\n  useEffect(() => {\n    function handleClick(event) {\n      if (bubbleRef.current && !bubbleRef.current.contains(event.target)) {\n        setSelectedWord && setSelectedWord(null);\n      }\n    }\n    if (selectedWord) {\n      document.addEventListener('mousedown', handleClick);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n    };\n  }, [selectedWord, setSelectedWord]);\n\n  // Debug: always log props\n  console.log('WordByWordSpeechBubble MOUNTED', {ayah, surah, settings});\n\n  // Robustly handle ayah.text for quran-kids at the top\n  let ayahText = ayah && ayah.text;\n  console.log('WordByWordSpeechBubble typeof ayah.text:', typeof ayahText, ayahText);\n  if (typeof ayahText !== 'string' && ayahText != null) {\n    try {\n      ayahText = JSON.parse(ayahText);\n      console.log('Parsed ayahText:', ayahText);\n    } catch (e) {\n      ayahText = String(ayahText);\n      console.log('Stringified ayahText:', ayahText);\n    }\n  }\n  console.log('Final ayahText for rendering:', ayahText);\n\n  if (!ayah) {\n    console.log('WordByWordSpeechBubble: ayah is undefined or null');\n    return <span style={{color: 'red'}}>No ayah data</span>;\n  }\n\n  return (\n    <div\n      style={{\n        direction: 'rtl',\n        textAlign: 'right',\n        fontFamily: settings.fontFamily,\n        fontSize: settings.fontSize,\n        fontWeight: settings.fontWeight || 'bold',\n        lineHeight: 2,\n        marginBottom: 16,\n        wordBreak: 'keep-all',\n        textRendering: 'optimizeLegibility',\n        WebkitFontSmoothing: 'antialiased',\n      }}\n    >\n      {ayahText && typeof ayahText === 'string' && ayahText.includes('|') ? (\n        ayahText.split('$').filter(Boolean).map((block, idx) => {\n          const parts = block.split('|');\n          const arabic = parts[0] || '';\n          const translation = parts[1] || '';\n          const surahNum = surah.number;\n          const ayahNum = ayah.numberInSurah;\n          // Use idx+1 for wordNum so audio and highlight match visual order\n          const wordNum = idx + 1;\n          const audioFile = `${String(surahNum).padStart(3, '0')}_${String(ayahNum).padStart(3, '0')}_${String(wordNum).padStart(3, '0')}.mp3`;\n          const isSelected = selectedWord &&\n            selectedWord.surahNumber === surahNum &&\n            selectedWord.ayahNumber === ayahNum &&\n            selectedWord.wordNumberInAyah === wordNum;\n          const KIDS_COLORS = [\n            '#e57373', '#64b5f6', '#81c784', '#ffd54f', '#ba68c8',\n            '#4db6ac', '#ffb74d', '#a1887f', '#90a4ae', '#f06292',\n          ];\n          return (\n            <span\n              key={wordNum}\n              style={{\n                cursor: 'pointer',\n                color: isSelected ? '#fff' : KIDS_COLORS[(wordNum-1) % KIDS_COLORS.length],\n                background: isSelected ? 'linear-gradient(90deg,#1976d2 60%,#42a5f5 100%)' : 'transparent',\n                borderRadius: '8px',\n                padding: '0 8px',\n                marginLeft: 6,\n                fontWeight: 'bold',\n                transition: 'background 0.2s, color 0.2s',\n                display: 'inline-block',\n                position: 'relative',\n                boxShadow: isSelected ? '0 2px 12px 0 rgba(33,150,243,0.15)' : 'none',\n                direction: 'rtl',\n                fontSize: settings.fontSize,\n              }}\n              title={translation || ''}\n              onClick={e => {\n                e.stopPropagation();\n                setSelectedWord && setSelectedWord({\n                  surahNumber: surahNum,\n                  ayahNumber: ayahNum,\n                  wordNumberInAyah: wordNum\n                });\n                \n                // Enhanced audio playback with robust error handling\n                const audioFile = `${String(surahNum).padStart(3, '0')}_${String(ayahNum).padStart(3, '0')}_${String(wordNum).padStart(3, '0')}.mp3`;\n                \n                // Track audio loading attempts\n                let audioAttempts = 0;\n                const maxAttempts = 3;\n                \n                // Function to try loading audio with different paths\n                const tryPlayAudio = (audioPath) => {\n                  audioAttempts++;\n                  try {\n                    const audio = new window.Audio(audioPath);\n                    \n                    // Add error handling for missing files\n                    audio.addEventListener('error', (err) => {\n                      console.warn(`Audio error (attempt ${audioAttempts}):`, err);\n                      \n                      // Try alternate paths\n                      if (audioAttempts === 1) {\n                        // Try without /audio/ prefix\n                        tryPlayAudio(audioFile);\n                      } else if (audioAttempts === 2) {\n                        // Try with words subfolder\n                        tryPlayAudio(`/audio/words/${audioFile}`);\n                      } else if (audioAttempts === 3) {\n                        // Try with kids subfolder\n                        tryPlayAudio(`/audio/kids/${audioFile}`);\n                      } else if (audioAttempts > maxAttempts) {\n                        console.error('Could not play audio after multiple attempts');\n                        // Show subtle visual feedback\n                        const wordElement = e.currentTarget;\n                        if (wordElement) {\n                          const originalColor = wordElement.style.color;\n                          // Apply subtle visual feedback (quick flash)\n                          wordElement.style.color = 'rgba(255,0,0,0.7)';\n                          setTimeout(() => {\n                            wordElement.style.color = originalColor;\n                          }, 300);\n                        }\n                      }\n                    });\n                    \n                    // Attempt to play\n                    audio.play()\n                      .then(() => {\n                        console.log('Audio started:', audioPath);\n                        // Success visual feedback (optional)\n                        const wordElement = e.currentTarget;\n                        if (wordElement) {\n                          wordElement.style.transform = 'scale(1.1)';\n                          setTimeout(() => {\n                            wordElement.style.transform = '';\n                          }, 200);\n                        }\n                      })\n                      .catch(err => {\n                        if (err.name === 'NotSupportedError' || err.name === 'NotAllowedError') {\n                          console.warn('Audio playback not allowed or supported');\n                        } else if (err.name === 'AbortError') {\n                          console.warn('Audio playback aborted');\n                        } else {\n                          console.warn('Audio play error:', err);\n                          \n                          // Try fallback if this is first attempt\n                          if (audioAttempts <= maxAttempts) {\n                            if (audioAttempts === 1) {\n                              tryPlayAudio(audioFile);\n                            } else if (audioAttempts === 2) {\n                              tryPlayAudio(`/audio/words/${audioFile}`);\n                            } else {\n                              tryPlayAudio(`/audio/kids/${audioFile}`);\n                            }\n                          }\n                        }\n                      });\n                  } catch (err) {\n                    console.warn('Audio object error:', err);\n                    // Try next fallback\n                    if (audioAttempts <= maxAttempts) {\n                      if (audioAttempts === 1) {\n                        tryPlayAudio(audioFile);\n                      } else if (audioAttempts === 2) {\n                        tryPlayAudio(`/audio/words/${audioFile}`);\n                      } else {\n                        tryPlayAudio(`/audio/kids/${audioFile}`);\n                      }\n                    }\n                  }\n                };\n                \n                // Start with default path\n                tryPlayAudio(`/audio/${audioFile}`);\n              }}\n            >\n              {arabic}\n              {isSelected && translation && (\n                <span\n                  ref={bubbleRef}\n                  style={{\n                    position: 'absolute',\n                    bottom: '2.2em',\n                    right: '-10px',\n                    background: 'rgba(255,255,255,0.98)',\n                    color: '#222',\n                    border: '1.5px solid #1976d2',\n                    borderRadius: 8,\n                    boxShadow: '0 2px 8px 0 rgba(33,150,243,0.12)',\n                    padding: '4px 10px',\n                    zIndex: 20,\n                    minWidth: 80,\n                    maxWidth: 180,\n                    fontSize: '0.82em',\n                    whiteSpace: 'pre-line',\n                    textAlign: 'center',\n                    fontFamily: 'inherit',\n                    animation: 'fadeInBubble 0.18s cubic-bezier(.4,0,.2,1)',\n                  }}\n                >\n                  <div style={{fontWeight:'bold',color:'#1976d2',fontSize:'0.98em',marginBottom:2}}>{translation}</div>\n                  <span\n                    style={{\n                      position: 'absolute',\n                      bottom: '-10px',\n                      right: 24,\n                      width: 0,\n                      height: 0,\n                      borderLeft: '8px solid transparent',\n                      borderRight: '8px solid transparent',\n                      borderTop: '10px solid #1976d2',\n                    }}\n                  />\n                </span>\n              )}\n            </span>\n          );\n        })\n      ) : (\n        <span style={{ color: 'red' }}>No ayah text found for quran-kids.</span>\n      )}\n    </div>\n  );\n};\n\nexport default WordByWordSpeechBubble;\n","// src/components/quran/EnhancedAyahView.js\nimport React, { useEffect, useState, memo } from 'react'; // Import memo\nimport {\n  Box,\n  Typography,\n  Paper,\n  IconButton,\n  Tooltip,\n  Chip,\n  useTheme,\n  alpha\n} from '@mui/material';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport PauseIcon from '@mui/icons-material/Pause';\nimport BookmarkBorderIcon from '@mui/icons-material/BookmarkBorder';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport AltRouteIcon from '@mui/icons-material/AltRoute';  // For Ruku\nimport FilterCenterFocusIcon from '@mui/icons-material/FilterCenterFocus'; // For Hizb\nimport LooksOneIcon from '@mui/icons-material/LooksOne'; // For Juz\nimport TouchAppIcon from '@mui/icons-material/TouchApp'; // For Sajda\nimport InfoIcon from '@mui/icons-material/Info';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline'; // For read indicator\nimport { motion } from 'framer-motion';\n\nimport { parseTajweedText } from '../../utils/tajweedParser';\nimport quranProgressTracker from '../../utils/QuranProgressTracker';\nimport WordByWordSpeechBubble from './WordByWordSpeechBubble';\nimport WordByWordSpeechBubbleKids from './WordByWordSpeechBubbleKids';\n\n// Special markers data for Quran\nconst sajdaAyahs = [\n  { surah: 7, ayah: 206, type: 'recommended' },\n  { surah: 13, ayah: 15, type: 'recommended' },\n  { surah: 16, ayah: 50, type: 'recommended' },\n  { surah: 17, ayah: 109, type: 'recommended' },\n  { surah: 19, ayah: 58, type: 'recommended' },\n  { surah: 22, ayah: 18, type: 'recommended' },\n  { surah: 22, ayah: 77, type: 'recommended' },\n  { surah: 25, ayah: 60, type: 'recommended' },\n  { surah: 27, ayah: 26, type: 'recommended' },\n  { surah: 32, ayah: 15, type: 'obligatory' },\n  { surah: 38, ayah: 24, type: 'recommended' },\n  { surah: 41, ayah: 38, type: 'obligatory' },\n  { surah: 53, ayah: 62, type: 'obligatory' },\n  { surah: 84, ayah: 21, type: 'recommended' },\n  { surah: 96, ayah: 19, type: 'obligatory' }\n];\n\n// Example data for rukus, hizbs, and juz (this would be expanded in a real implementation)\nconst rukuEndpoints = [\n  { surah: 1, ayah: 7 },\n  { surah: 2, ayah: 7 },\n  { surah: 2, ayah: 16 },\n  // ... more ruku endpoints\n];\n\nconst hizbQuarters = [\n  { surah: 1, ayah: 1 },\n  { surah: 2, ayah: 25 },\n  { surah: 2, ayah: 44 },\n  // ... more hizb quarters\n];\n\nconst juzStartPoints = [\n  { surah: 1, ayah: 1 },\n  { surah: 2, ayah: 142 },\n  { surah: 2, ayah: 253 },\n  // ... more juz points\n];\n\n/**\n * Checks if an ayah has a special mark\n * @param {number} surah - Surah number\n * @param {number} ayah - Ayah number\n * @param {Array} marksList - List of marks to check against\n * @returns {Object|null} - The mark object or null if not found\n */\nconst getAyahMark = (surah, ayah, marksList) => {\n  return marksList.find(mark => mark.surah === surah && mark.ayah === ayah) || null;\n};\n\n// Animation variant for playing ayah\nconst playingVariant = {\n  initial: { scale: 1, boxShadow: '0 0 0px rgba(0,0,0,0)' },\n  animate: {\n    scale: [1, 1.03, 1],\n    boxShadow: [\n      '0 0 0px rgba(0,0,0,0)',\n      '0 0 18px rgba(25, 118, 210, 0.25)',\n      '0 0 0px rgba(0,0,0,0)'\n    ],\n    transition: { duration: 0.8, repeat: Infinity, repeatType: 'loop', ease: 'easeInOut' }\n  },\n  rest: { scale: 1, boxShadow: '0 0 0px rgba(0,0,0,0)' }\n};\n\n/**\n * Enhanced component for displaying Ayah with special markers\n */\n// Wrap component definition with memo\nconst EnhancedAyahView = memo(({ \n  ayah, \n  surah, \n  settings, \n  translation, \n  tafsir, \n  isPlaying,\n  isBookmarked,\n  onPlay, \n  onPause,\n  onToggleBookmark,\n  onClick,\n  selectedWord,\n  setSelectedWord\n}) => {\n  const theme = useTheme();\n  const [isVisible, setIsVisible] = useState(false);\n  const [hasMarkedAsRead, setHasMarkedAsRead] = useState(false);\n\n  // Use Intersection Observer to detect when ayah is visible on screen\n  useEffect(() => {\n    if (!surah || !ayah) return;\n\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        setIsVisible(entry.isIntersecting);\n      },\n      {\n        threshold: 0.7, // At least 70% of the ayah must be visible\n        rootMargin: '0px'\n      }\n    );\n\n    // Find the element to observe\n    const ayahElement = document.getElementById(`ayah-${surah.number}-${ayah.numberInSurah}`);\n    if (ayahElement) {\n      observer.observe(ayahElement);\n    }\n\n    return () => {\n      if (ayahElement) {\n        observer.unobserve(ayahElement);\n      }\n    };\n  }, [surah?.number, ayah?.numberInSurah, surah, ayah]);\n  \n  // Mark as read only when the ayah is visible and hasn't been marked yet\n  useEffect(() => {\n    if (isVisible && !hasMarkedAsRead && surah && ayah) {\n      const timer = setTimeout(() => {\n        quranProgressTracker.markAsRead(surah.number, ayah.numberInSurah);\n        setHasMarkedAsRead(true);\n      }, 3000); // Mark as read after 3 seconds of viewing\n      \n      return () => clearTimeout(timer);\n    }\n  }, [isVisible, hasMarkedAsRead, surah?.number, ayah?.numberInSurah, surah, ayah]);\n  \n  // Mark ayah as read immediately when played\n  useEffect(() => {\n    if (isPlaying && surah && ayah && !hasMarkedAsRead) {\n      quranProgressTracker.markAsRead(surah.number, ayah.numberInSurah);\n      setHasMarkedAsRead(true);\n    }\n  }, [isPlaying, surah?.number, ayah?.numberInSurah, hasMarkedAsRead, surah, ayah]);\n  \n  // Reset the hasMarkedAsRead state if the ayah changes\n  useEffect(() => {\n    setHasMarkedAsRead(false);\n  }, [surah?.number, ayah?.numberInSurah, surah, ayah]);\n\n  // Effect to handle scrolling to the ayah when isPlaying becomes true\n  useEffect(() => {\n    if (isPlaying && surah && ayah) {\n      // Use a small timeout to ensure DOM is updated first\n      const scrollTimeout = setTimeout(() => {\n        const ayahElement = document.getElementById(`ayah-${surah.number}-${ayah.numberInSurah}`);\n        if (ayahElement) {\n          // Add highlight animation class and scroll to the ayah with smooth animation\n          ayahElement.classList.add('highlight-ayah-animation');\n          ayahElement.scrollIntoView({ \n            behavior: 'smooth', \n            block: 'center'\n          });\n        }\n      }, 300);\n\n      return () => clearTimeout(scrollTimeout);\n    }\n  }, [isPlaying, surah?.number, ayah?.numberInSurah, surah, ayah]);\n\n  // Clean up highlight animation when isPlaying is false\n  useEffect(() => {\n    if (!isPlaying && surah && ayah) {\n      const ayahElement = document.getElementById(`ayah-${surah.number}-${ayah.numberInSurah}`);\n      if (ayahElement) {\n        ayahElement.classList.remove('highlight-ayah-animation');\n      }\n    }\n  }, [isPlaying, surah?.number, ayah?.numberInSurah, surah, ayah]);\n  \n  // Check if this ayah has been read\n  const hasBeenRead = surah && ayah ? quranProgressTracker.isAyahRead(surah.number, ayah.numberInSurah) : false;\n  \n  // Check if this ayah has any special markers\n  const sajdaMark = getAyahMark(surah?.number, ayah?.numberInSurah, sajdaAyahs);\n  const rukuMark = getAyahMark(surah?.number, ayah?.numberInSurah, rukuEndpoints);\n  const hizbMark = getAyahMark(surah?.number, ayah?.numberInSurah, hizbQuarters);\n  const juzMark = getAyahMark(surah?.number, ayah?.numberInSurah, juzStartPoints);\n  \n  // Has any marker\n  const hasSpecialMark = sajdaMark || rukuMark || hizbMark || juzMark;\n  \n  return (\n    <>\n      <motion.div\n        variants={playingVariant}\n        initial=\"initial\"\n        animate={isPlaying ? 'animate' : 'rest'}\n        style={{ borderRadius: 12 }}\n      >\n        <Paper\n          elevation={1}\n          sx={{\n            p: 2,\n            mb: 2,\n            borderRadius: 2,\n            borderLeft: hasSpecialMark ? `4px solid ${theme.palette.primary.main}` : \n                       hasBeenRead ? `4px solid ${theme.palette.success.light}` : 'none',\n            bgcolor: isPlaying ? alpha(theme.palette.primary.main, 0.05) : \n                    hasBeenRead ? alpha(theme.palette.success.light, 0.03) : 'background.paper',\n            transition: 'background-color 0.3s ease, transform 0.3s ease, box-shadow 0.3s ease',\n            '&:hover': {\n              bgcolor: alpha(theme.palette.primary.main, 0.03),\n            },\n            '&.highlight-ayah-animation': {\n              boxShadow: `0 0 15px ${alpha(theme.palette.primary.main, 0.5)}`,\n              transform: 'scale(1.01)',\n            }\n          }}\n          onClick={onClick}\n          id={`ayah-${surah?.number}-${ayah?.numberInSurah}`}\n          className={isPlaying ? 'highlight-ayah-animation' : ''}\n        >\n          {/* Ayah number and controls */}\n          <Box sx={{ \n            display: 'flex', \n            justifyContent: 'space-between',\n            alignItems: 'center',\n            mb: 1\n          }}>\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n              <Box\n                sx={{\n                  minWidth: '36px',\n                  height: '36px',\n                  borderRadius: '50%',\n                  bgcolor: hasBeenRead ? alpha(theme.palette.success.light, 0.2) : \n                           (theme.palette.mode === 'dark' ? 'grey.800' : 'grey.100'),\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  mr: 1\n                }}\n                aria-label={`Ayah number ${ayah.numberInSurah}`}\n              >\n                <Typography variant=\"body2\">\n                  {ayah.numberInSurah}\n                </Typography>\n              </Box>\n              \n              {/* Display special markers as chips */}\n              {sajdaMark && (\n                <Tooltip title={`Sajda ${sajdaMark.type === 'obligatory' ? '(Obligatory)' : '(Recommended)'}`}>\n                  <Chip\n                    icon={<TouchAppIcon />}\n                    label=\"Sajda\"\n                    size=\"small\"\n                    color={sajdaMark.type === 'obligatory' ? 'secondary' : 'primary'}\n                    sx={{ mr: 1, fontSize: '0.75rem' }}\n                  />\n                </Tooltip>\n              )}\n              \n              {rukuMark && (\n                <Tooltip title=\"Ruku End\">\n                  <Chip\n                    icon={<AltRouteIcon />}\n                    label=\"Ruku\"\n                    size=\"small\"\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    sx={{ mr: 1, fontSize: '0.75rem' }}\n                  />\n                </Tooltip>\n              )}\n              \n              {hizbMark && (\n                <Tooltip title=\"Hizb Quarter\">\n                  <Chip\n                    icon={<FilterCenterFocusIcon />}\n                    label=\"Hizb\"\n                    size=\"small\"\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    sx={{ mr: 1, fontSize: '0.75rem' }}\n                  />\n                </Tooltip>\n              )}\n              \n              {juzMark && (\n                <Tooltip title=\"Juz Start\">\n                  <Chip\n                    icon={<LooksOneIcon />}\n                    label=\"Juz\"\n                    size=\"small\"\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    sx={{ mr: 1, fontSize: '0.75rem' }}\n                  />\n                </Tooltip>\n              )}\n              \n              {/* Read indicator */}\n              {hasBeenRead && (\n                <Tooltip title=\"You've read this ayah\">\n                  <Chip\n                    icon={<CheckCircleOutlineIcon />}\n                    label=\"Read\"\n                    size=\"small\"\n                    color=\"success\"\n                    variant=\"outlined\"\n                    sx={{ mr: 1, fontSize: '0.75rem' }}\n                  />\n                </Tooltip>\n              )}\n            </Box>\n            \n            <Box>\n              <Tooltip title={isPlaying ? \"Pause\" : \"Play\"}>\n                <IconButton \n                  size=\"small\" \n                  onClick={(e) => {\n                    e.stopPropagation();\n                    isPlaying ? onPause() : onPlay();\n                  }}\n                  aria-label={isPlaying ? `Pause recitation of Surah ${surah?.number} Ayah ${ayah?.numberInSurah}` : `Play recitation of Surah ${surah?.number} Ayah ${ayah?.numberInSurah}`}\n                  aria-pressed={isPlaying}\n                >\n                  {isPlaying ? <PauseIcon /> : <PlayArrowIcon />}\n                </IconButton>\n              </Tooltip>\n              \n              <Tooltip title={isBookmarked ? \"Remove bookmark\" : \"Add bookmark\"}>\n                <IconButton \n                  size=\"small\" \n                  onClick={(e) => {\n                    e.stopPropagation();\n                    onToggleBookmark();\n                  }}\n                  aria-label={isBookmarked ? `Remove bookmark for Surah ${surah?.number} Ayah ${ayah?.numberInSurah}` : `Add bookmark for Surah ${surah?.number} Ayah ${ayah?.numberInSurah}`}\n                  aria-pressed={isBookmarked}\n                >\n                  {isBookmarked ? <BookmarkIcon color=\"primary\" /> : <BookmarkBorderIcon />}\n                </IconButton>\n              </Tooltip>\n            </Box>\n          </Box>\n          \n          {/* Arabic text */}\n          {(settings.quranEdition === 'quran-wordbyword-2') && ayah.text ? (\n            <WordByWordSpeechBubble\n              ayah={ayah}\n              surah={surah}\n              selectedWord={selectedWord}\n              setSelectedWord={setSelectedWord}\n              settings={settings}\n            />\n          ) : settings.quranEdition === 'quran-kids' && ayah.text ? (\n            <WordByWordSpeechBubbleKids\n              ayah={ayah}\n              surah={surah}\n              selectedWord={selectedWord}\n              setSelectedWord={setSelectedWord}\n              settings={settings}\n            />\n          ) : (\n            <Typography\n              variant=\"h6\"\n              component=\"div\"\n              lang=\"ar\" // Add lang attribute for Arabic text\n              sx={{\n                fontFamily: settings.fontFamily,\n                fontSize: settings.fontSize,\n                fontWeight: settings.fontWeight || 'bold',\n                direction: 'rtl',\n                lineHeight: 2,\n                mb: 2,\n                textAlign: 'right',\n                wordBreak: 'keep-all',\n                textRendering: 'optimizeLegibility',\n                WebkitFontSmoothing: 'antialiased',\n              }}\n              dangerouslySetInnerHTML={{\n                __html: parseTajweedText(\n                  ayah.tajweedText || ayah.text,\n                  settings.showTajweed,\n                  false\n                )\n              }}\n            />\n          )}\n          \n          {/* Translation if enabled */}\n          {settings.showTranslation && translation && (\n            <Box sx={{ mt: 2 }}>\n              <Typography variant=\"body1\" gutterBottom>\n                {translation.text}\n              </Typography>\n              \n              {settings.showTransliteration && (\n                <Typography \n                  variant=\"body2\" \n                  sx={{ \n                    fontStyle: 'italic',\n                    color: 'text.secondary',\n                    mb: 1\n                  }}\n                >\n                  {translation.transliteration || \"Transliteration not available\"}\n                </Typography>\n              )}\n            </Box>\n          )}\n          \n          {/* Tafsir if enabled */}\n          {settings.showTafsir && tafsir && (\n            <Box sx={{ \n              mt: 2, \n              pt: 1,\n              borderTop: `1px solid ${theme.palette.divider}` \n            }}>\n              <Typography variant=\"subtitle2\" gutterBottom>\n                Tafsir:\n              </Typography>\n              <Typography variant=\"body2\">\n                {tafsir.text}\n              </Typography>\n            </Box>\n          )}\n        </Paper>\n      </motion.div>\n    </>\n  );\n}); // Close memo wrapper\n\nexport default EnhancedAyahView;","// src/components/quran/QuranNavigationControls.js\nimport React, { useState } from 'react';\nimport {\n  Box,\n  Button,\n  IconButton,\n  Menu,\n  MenuItem,\n  TextField,\n  InputAdornment,\n  Tooltip,\n  Typography,\n  Divider,\n  useTheme,\n} from '@mui/material';\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport ViewListIcon from '@mui/icons-material/ViewList';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport SearchIcon from '@mui/icons-material/Search';\n\n// Mapping data to connect navigation positions with surah/ayah positions\nconst quranNavigationMappings = {\n  page: {\n    // Example data - actual implementation will use the json data\n    1: { surah: 1, ayah: 1 }, // Al-Fatiha\n    2: { surah: 2, ayah: 1 }, // Al-Baqarah\n    3: { surah: 2, ayah: 25 },\n    // ... more page mappings\n  },\n  juz: {\n    // All 30 juz mappings\n    1: { surah: 1, ayah: 1 },\n    2: { surah: 2, ayah: 142 },\n    3: { surah: 2, ayah: 253 },\n    // ... more juz mappings\n  },\n  hizb: {\n    // All 60 hizb mappings (including hizb quarters)\n    1: { surah: 1, ayah: 1 },\n    \"1.1\": { surah: 2, ayah: 25 },\n    \"1.2\": { surah: 2, ayah: 44 },\n    \"1.3\": { surah: 2, ayah: 60 },\n    2: { surah: 2, ayah: 75 },\n    // ... more hizb mappings\n  },\n  ruku: {\n    // Example data for some rukus (actual data would have all 556 rukus)\n    1: { surah: 1, ayah: 1 },\n    2: { surah: 2, ayah: 1 },\n    3: { surah: 2, ayah: 8 },\n    // ... more ruku mappings\n  },\n  manzil: {\n    // All 7 manzil mappings\n    1: { surah: 1, ayah: 1 },\n    2: { surah: 5, ayah: 1 },\n    3: { surah: 10, ayah: 1 },\n    4: { surah: 17, ayah: 1 },\n    5: { surah: 26, ayah: 1 },\n    6: { surah: 37, ayah: 1 },\n    7: { surah: 50, ayah: 1 },\n  },\n};\n\n/**\n * Gets the surah and ayah for a given position in the specified navigation mode\n * @param {string} mode - The navigation mode (page, juz, hizb, ruku, manzil)\n * @param {number|string} position - The position in the navigation mode\n * @returns {Object|null} - The corresponding surah and ayah, or null if not found\n */\nexport const getQuranLocationFromPosition = (mode, position) => {\n  if (!quranNavigationMappings[mode]) return null;\n  \n  const location = quranNavigationMappings[mode][position];\n  return location || null;\n};\n\n/**\n * Component for Quran navigation controls\n */\nconst QuranNavigationControls = ({ \n  navigationMode = 'page', // Default to 'page' (singular)\n  currentPosition,\n  maxPosition,\n  onNavigationModeChange,\n  onPositionChange,\n  onGoToSurah\n}) => {\n  const theme = useTheme();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [jumpToValue, setJumpToValue] = useState(\"\");\n  const menuId = 'navigation-mode-menu'; // ID for menu\n  const jumpInputId = 'jump-to-input'; // ID for jump input\n  \n  const handleModeMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  \n  const handleModeMenuClose = () => {\n    setAnchorEl(null);\n  };\n  \n  const handleModeSelect = (mode) => {\n    onNavigationModeChange(mode);\n    handleModeMenuClose();\n  };\n  \n  const handlePrevious = () => {\n    if (currentPosition > 1) {\n      onPositionChange(currentPosition - 1);\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n  };\n  \n  const handleNext = () => {\n    if (currentPosition < maxPosition) {\n      onPositionChange(currentPosition + 1);\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n  };\n  \n  const handleJumpTo = () => {\n    const value = parseInt(jumpToValue, 10);\n    if (!isNaN(value) && value >= 1 && value <= maxPosition) {\n      onPositionChange(value);\n      setJumpToValue(\"\");\n    }\n  };\n  \n  const getNavigationModeText = () => {\n    switch(navigationMode) {\n      case 'page': return 'Page';\n      case 'juz': return 'Juz';\n      case 'hizb': return 'Hizb';\n      case 'ruku': return 'Ruku';\n      case 'manzil': return 'Manzil';\n      case 'surah': return 'Surah';\n      default: return 'Navigation';\n    }\n  };\n  \n  const getMaxPositionByMode = () => {\n    switch(navigationMode) {\n      case 'page': return 604; // Total pages in the standard Medina Mushaf\n      case 'juz': return 30;\n      case 'hizb': return 60;\n      case 'ruku': return 556;\n      case 'manzil': return 7;\n      case 'surah': return 114;\n      default: return 1;\n    }\n  };\n  \n  const getPlaceholderText = () => {\n    if (!navigationMode || typeof navigationMode !== 'string') {\n      return \"Go to position\";\n    }\n    \n    return `Go to ${navigationMode}`;\n  };\n  \n  return (\n    <Box \n      component=\"nav\" // Use nav element\n      aria-label=\"Quran Navigation Controls\" // Add aria-label\n      sx={{ \n        display: 'flex', \n        alignItems: 'center',\n        justifyContent: 'space-between', \n        flexWrap: 'wrap',\n        gap: 1,\n        p: 1\n      }}\n    >\n      {/* Navigation Mode Selector */}\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Button \n          variant=\"outlined\"\n          onClick={handleModeMenuOpen}\n          endIcon={<KeyboardArrowDownIcon />}\n          size=\"small\"\n          sx={{ whiteSpace: 'nowrap' }}\n          aria-controls={menuId} // Link button to menu\n          aria-haspopup=\"true\" // Indicate it opens a menu\n          aria-expanded={Boolean(anchorEl) ? 'true' : undefined} // Indicate if menu is open\n        >\n          {getNavigationModeText()}\n        </Button>\n        \n        <Menu\n          id={menuId} // Add ID to menu\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onClose={handleModeMenuClose}\n        >\n          <MenuItem onClick={() => handleModeSelect('page')}>Page</MenuItem>\n          <MenuItem onClick={() => handleModeSelect('juz')}>Juz</MenuItem>\n          <MenuItem onClick={() => handleModeSelect('hizb')}>Hizb</MenuItem>\n          <MenuItem onClick={() => handleModeSelect('ruku')}>Ruku</MenuItem>\n          <MenuItem onClick={() => handleModeSelect('manzil')}>Manzil</MenuItem>\n          <MenuItem onClick={() => handleModeSelect('surah')}>Surah</MenuItem>\n        </Menu>\n        \n        <Typography variant=\"body1\" sx={{ ml: 2, mr: 1 }} aria-live=\"polite\"> {/* Announce changes */}\n          {currentPosition || 1} of {getMaxPositionByMode()}\n        </Typography>\n      </Box>\n      \n      {/* Jump to input */}\n      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n        {/* Add a visually hidden label for accessibility */}\n        <Typography component=\"label\" htmlFor={jumpInputId} sx={{ ...visuallyHidden }}>\n          {`Jump to ${navigationMode}`}\n        </Typography>\n        <TextField \n          id={jumpInputId} // Add ID to input\n          size=\"small\"\n          placeholder={getPlaceholderText()}\n          value={jumpToValue}\n          onChange={(e) => setJumpToValue(e.target.value)}\n          onKeyPress={(e) => e.key === 'Enter' && handleJumpTo()}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton \n                  size=\"small\" \n                  onClick={handleJumpTo}\n                  edge=\"end\"\n                  aria-label={`Jump to specified ${navigationMode}`}\n                >\n                  <SearchIcon fontSize=\"small\" />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n          sx={{ width: '120px' }}\n        />\n        \n        {/* Navigation buttons */}\n        <Box>\n          <Tooltip title=\"Previous\">\n            <IconButton \n              onClick={handlePrevious} \n              disabled={currentPosition <= 1}\n              size=\"small\"\n              aria-label={`Go to previous ${navigationMode}`}\n            >\n              <NavigateBeforeIcon />\n            </IconButton>\n          </Tooltip>\n          \n          <Tooltip title=\"Next\">\n            <IconButton \n              onClick={handleNext} \n              disabled={currentPosition >= maxPosition}\n              size=\"small\"\n              aria-label={`Go to next ${navigationMode}`}\n            >\n              <NavigateNextIcon />\n            </IconButton>\n          </Tooltip>\n          \n          <Tooltip title=\"Surah List\">\n            <IconButton \n              onClick={() => onGoToSurah()} \n              size=\"small\"\n              aria-label=\"Open Surah list panel\"\n            >\n              <ViewListIcon />\n            </IconButton>\n          </Tooltip>\n          \n          <Tooltip title=\"Bookmarks\">\n            <IconButton size=\"small\" aria-label=\"View Bookmarks\" disabled> {/* Add aria-label, disable for now */}\n              <BookmarkIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\n// Helper style for visually hidden labels\nconst visuallyHidden = {\n  border: 0,\n  clip: 'rect(0 0 0 0)',\n  height: 1,\n  margin: -1,\n  overflow: 'hidden',\n  padding: 0,\n  position: 'absolute',\n  width: 1,\n};\n\nexport default QuranNavigationControls;","// src/components/quran/QuranNavigationPanel.js\nimport React, { useState } from 'react';\nimport {\n  Box,\n  Tabs,\n  Tab,\n  Grid,\n  Card,\n  CardActionArea,\n  Typography,\n  Divider,\n  useTheme,\n  alpha,\n} from '@mui/material';\nimport MenuBookIcon from '@mui/icons-material/MenuBook'; // For Surah\nimport ViewDayIcon from '@mui/icons-material/ViewDay'; // For Page\nimport LooksOneIcon from '@mui/icons-material/LooksOne'; // For Juz\nimport AltRouteIcon from '@mui/icons-material/AltRoute'; // For Ruku\nimport FilterCenterFocusIcon from '@mui/icons-material/FilterCenterFocus'; // For Hizb\nimport ViewWeekIcon from '@mui/icons-material/ViewWeek'; // For Manzil\n\n// Helper function to create the navigation items\nconst createNavigationItems = (mode) => {\n  switch(mode) {\n    case 'surah':\n      // Return all 114 surahs\n      return Array.from({ length: 114 }, (_, i) => ({\n        number: i + 1,\n        name: `Surah ${i + 1}` // In a real implementation, get the actual names\n      }));\n    case 'page':\n      // Return all 604 pages\n      return Array.from({ length: 604 }, (_, i) => ({\n        number: i + 1,\n        name: `Page ${i + 1}`\n      }));\n    case 'juz':\n      // Return all 30 juz\n      return Array.from({ length: 30 }, (_, i) => ({\n        number: i + 1,\n        name: `Juz ${i + 1}`\n      }));\n    case 'hizb':\n      // Return all 60 hizb (including quarters)\n      return Array.from({ length: 60 }, (_, i) => ({\n        number: i + 1,\n        name: `Hizb ${Math.floor(i/4) + 1}${i % 4 > 0 ? `.${i % 4}` : ''}`\n      }));\n    case 'ruku':\n      // Return all 556 ruku sections\n      return Array.from({ length: 556 }, (_, i) => ({\n        number: i + 1,\n        name: `Ruku ${i + 1}`\n      }));\n    case 'manzil':\n      // Return all 7 manzils\n      return Array.from({ length: 7 }, (_, i) => ({\n        number: i + 1,\n        name: `Manzil ${i + 1}`\n      }));\n    default:\n      return [];\n  }\n};\n\n// Get icon for navigation mode\nconst getNavigationIcon = (mode) => {\n  switch(mode) {\n    case 'surah': return <MenuBookIcon />;\n    case 'page': return <ViewDayIcon />;\n    case 'juz': return <LooksOneIcon />;\n    case 'hizb': return <FilterCenterFocusIcon />;\n    case 'ruku': return <AltRouteIcon />;\n    case 'manzil': return <ViewWeekIcon />;\n    default: return <MenuBookIcon />;\n  }\n};\n\nconst QuranNavigationPanel = ({ onNavigate }) => {\n  const theme = useTheme();\n  const [activeTab, setActiveTab] = useState('surah');\n  const [items] = useState({\n    surah: createNavigationItems('surah'),\n    page: createNavigationItems('page'),\n    juz: createNavigationItems('juz'),\n    hizb: createNavigationItems('hizb'),\n    ruku: createNavigationItems('ruku'),\n    manzil: createNavigationItems('manzil'),\n  });\n  \n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n  \n  const handleItemClick = (item) => {\n    onNavigate(activeTab, item.number);\n  };\n  \n  return (\n    <Box sx={{ width: '100%' }}>\n      {/* Wrap Tabs in a nav element */}\n      <Box \n        component=\"nav\" \n        aria-label=\"Quran Navigation Type\" \n        sx={{ borderBottom: 1, borderColor: 'divider' }}\n      >\n        <Tabs \n          value={activeTab} \n          onChange={handleTabChange} \n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          allowScrollButtonsMobile\n          aria-label=\"Select navigation mode\" // Add label for the tab list itself\n        >\n          <Tab \n            icon={getNavigationIcon('surah')} \n            label=\"Surah\" \n            value=\"surah\" \n            iconPosition=\"start\"\n            id=\"nav-tab-surah\" // Add ID\n            aria-controls=\"nav-tabpanel-surah\" // Link to potential panel\n          />\n          <Tab \n            icon={getNavigationIcon('page')} \n            label=\"Page\" \n            value=\"page\" \n            iconPosition=\"start\"\n            id=\"nav-tab-page\"\n            aria-controls=\"nav-tabpanel-page\"\n          />\n          <Tab \n            icon={getNavigationIcon('juz')} \n            label=\"Juz\" \n            value=\"juz\" \n            iconPosition=\"start\"\n            id=\"nav-tab-juz\"\n            aria-controls=\"nav-tabpanel-juz\"\n          />\n          <Tab \n            icon={getNavigationIcon('hizb')} \n            label=\"Hizb\" \n            value=\"hizb\" \n            iconPosition=\"start\"\n            id=\"nav-tab-hizb\"\n            aria-controls=\"nav-tabpanel-hizb\"\n          />\n          <Tab \n            icon={getNavigationIcon('ruku')} \n            label=\"Ruku\" \n            value=\"ruku\" \n            iconPosition=\"start\"\n            id=\"nav-tab-ruku\"\n            aria-controls=\"nav-tabpanel-ruku\"\n          />\n          <Tab \n            icon={getNavigationIcon('manzil')} \n            label=\"Manzil\" \n            value=\"manzil\" \n            iconPosition=\"start\"\n            id=\"nav-tab-manzil\"\n            aria-controls=\"nav-tabpanel-manzil\"\n          />\n        </Tabs>\n      </Box>\n      \n      {/* Tab Panel Content */}\n      <Box \n        role=\"tabpanel\" // Add role\n        id={`nav-tabpanel-${activeTab}`} // Match ID with aria-controls\n        aria-labelledby={`nav-tab-${activeTab}`} // Link panel to tab\n        sx={{ mt: 2, maxHeight: '400px', overflow: 'auto', p: 1 }}\n      >\n        <Grid container spacing={1}>\n          {items[activeTab].map((item) => (\n            <Grid item xs={6} sm={4} md={3} lg={2} key={`${activeTab}-${item.number}`}>\n              <Card \n                variant=\"outlined\" \n                sx={{ \n                  transition: 'all 0.2s ease',\n                  '&:hover': {\n                    boxShadow: 2,\n                    borderColor: theme.palette.primary.main,\n                  }\n                }}\n              >\n                <CardActionArea \n                  onClick={() => handleItemClick(item)}\n                  aria-label={`Navigate to ${activeTab} ${item.number}`}\n                  sx={{ \n                    p: 1,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    height: '100%'\n                  }}\n                >\n                  <Typography variant=\"body2\" color=\"primary\" fontWeight=\"medium\">\n                    {item.number}\n                  </Typography>\n                  <Typography variant=\"caption\" align=\"center\">\n                    {item.name}\n                  </Typography>\n                </CardActionArea>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n    </Box>\n  );\n};\n\nexport default QuranNavigationPanel;","// src/components/quran/TajweedTooltip.js\nimport React, { useState, useEffect } from 'react';\nimport { \n  Box, \n  Typography, \n  Paper,\n  useTheme\n} from '@mui/material';\n\n/**\n * Component that creates a tooltip to display tajweed rule information\n * This tooltip appears when users hover over tajweed-colored text in the Quran\n */\nconst TajweedTooltip = () => {\n  const theme = useTheme();\n  const [tooltipData, setTooltipData] = useState(null);\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\n\n  // Initialize event listeners when component mounts\n  useEffect(() => {\n    // Function to handle mouseenter on tajweed spans\n    const handleMouseEnter = (e) => {\n      // Check if the target has tajweed data attribute\n      const target = e.target;\n      if (target.hasAttribute('data-tajweed-rule')) {\n        // Extract rule information\n        const ruleData = target.getAttribute('data-tajweed-rule');\n        const [title, description] = ruleData.split(':');\n        const color = target.getAttribute('data-tajweed-color') || '#000000';\n        \n        // Calculate position for the tooltip\n        const rect = target.getBoundingClientRect();\n        const x = rect.left + window.scrollX + (rect.width / 2);\n        const y = rect.top + window.scrollY - 10; // Position above the text\n        \n        // Update tooltip state\n        setTooltipData({ title, description, color });\n        setTooltipPosition({ x, y });\n      }\n    };\n\n    // Function to handle mouseleave\n    const handleMouseLeave = () => {\n      setTooltipData(null);\n    };\n\n    // Add global event listener to document for better performance\n    document.addEventListener('mouseover', (e) => {\n      if (e.target.hasAttribute('data-tajweed-rule')) {\n        handleMouseEnter(e);\n      } else if (!e.target.closest('[data-tajweed-rule]')) {\n        // Only hide if we're not still within a tajweed element\n        handleMouseLeave();\n      }\n    });\n\n    // Clean up\n    return () => {\n      document.removeEventListener('mouseover', handleMouseEnter);\n    };\n  }, []);\n\n  // Don't render anything if no tooltip data\n  if (!tooltipData) return null;\n\n  return (\n    <Paper\n      elevation={4}\n      sx={{\n        position: 'absolute',\n        left: `${tooltipPosition.x}px`,\n        top: `${tooltipPosition.y}px`,\n        transform: 'translate(-50%, -100%)',\n        p: 1.5,\n        maxWidth: '300px',\n        zIndex: 1500,\n        borderLeft: `4px solid ${tooltipData.color}`,\n        animation: 'fadeIn 0.2s ease-in-out',\n        '@keyframes fadeIn': {\n          from: { opacity: 0, transform: 'translate(-50%, -90%)' },\n          to: { opacity: 1, transform: 'translate(-50%, -100%)' }\n        }\n      }}\n    >\n      <Typography variant=\"subtitle2\" sx={{ fontWeight: 600, color: tooltipData.color }}>\n        {tooltipData.title}\n      </Typography>\n      <Typography variant=\"body2\">\n        {tooltipData.description}\n      </Typography>\n    </Paper>\n  );\n};\n\nexport default TajweedTooltip;","// src/components/QuranProgressView.js\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  CircularProgress,\n  Divider,\n  Grid,\n  Button,\n  Chip,\n  useTheme,\n  alpha,\n  Tooltip,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Collapse,\n  Fade,\n  ButtonBase\n} from '@mui/material';\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\nimport StarIcon from '@mui/icons-material/Star';\nimport LoopIcon from '@mui/icons-material/Loop';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandLess';\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport quranProgressTracker from '../utils/QuranProgressTracker';\nimport quranService from '../services/quranService';\n\n/**\n * Component for displaying Quran reading progress\n */\nconst QuranProgressView = ({ onNavigate }) => {\n  const theme = useTheme();\n  const [overallProgress, setOverallProgress] = useState({ completed: 0, total: 6236, percentage: 0 });\n  const [lastRead, setLastRead] = useState(null);\n  const [readingStreak, setReadingStreak] = useState(null);\n  const [recentActivity, setRecentActivity] = useState([]);\n  const [dailyProgress, setDailyProgress] = useState({ completed: 0, target: 20, percentage: 0 });\n  const [surahName, setSurahName] = useState(\"\");\n  const [refreshKey, setRefreshKey] = useState(0);\n  const [showResetDialog, setShowResetDialog] = useState(false);\n  const [expanded, setExpanded] = useState(false);\n  const progressRef = useRef(null);\n\n  // Theme-aware colors\n  const bgColor = theme.palette.background.paper;\n  const borderColor = theme.palette.divider;\n  const highlightColor = theme.palette.primary.main;\n\n  const progressVariants = {\n    hidden: { opacity: 0, y: 30 },\n    visible: { opacity: 1, y: 0, transition: { duration: 0.6 } },\n  };\n  const circleVariants = {\n    initial: { scale: 0.8, opacity: 0 },\n    animate: { scale: 1, opacity: 1, transition: { type: 'spring', stiffness: 120 } },\n  };\n  const badgeVariants = {\n    initial: { scale: 0, rotate: -30 },\n    animate: { scale: 1, rotate: 0, transition: { type: 'spring', stiffness: 200 } },\n  };\n\n  // Fetch progress data function\n  const fetchProgressData = useCallback(async () => {\n    // Get overall progress\n    const progress = quranProgressTracker.getOverallProgress();\n    setOverallProgress(progress);\n\n    // Get last read position\n    const lastPosition = quranProgressTracker.getLastReadPosition();\n    setLastRead(lastPosition);\n\n    // Get reading streak\n    const streak = quranProgressTracker.getReadingStreak() || {\n      currentStreak: 0,\n      longestStreak: 0,\n      history: []\n    };\n    setReadingStreak(streak);\n\n    // Get daily progress\n    const daily = quranProgressTracker.getDailyProgress() || {\n      completed: 0,\n      target: 20,\n      percentage: 0\n    };\n    setDailyProgress(daily);\n\n    // Calculate recent activity from reading history if available\n    if (streak?.history && streak.history.length > 0) {\n      const lastDays = streak.history.slice(-7).reverse();\n      setRecentActivity(lastDays);\n    }\n\n    // If we have a last read position, try to get the surah name\n    if (lastPosition?.surah) {\n      try {\n        const quran = await quranService.loadEdition('quran-tajweed');\n        const surah = quran.getSurah(lastPosition.surah);\n        if (surah) {\n          setSurahName(surah.englishName);\n        }\n      } catch (err) {\n        console.error(\"Error loading quran data for surah name:\", err);\n      }\n    }\n  }, []);\n\n  // Fetch progress data on component mount and when refresh is triggered\n  useEffect(() => {\n    fetchProgressData();\n\n    // Set up event listener for storage changes (in case multiple tabs are open)\n    const handleStorageChange = () => {\n      fetchProgressData();\n    };\n\n    window.addEventListener('storage', handleStorageChange);\n    document.addEventListener('quranProgressUpdated', handleStorageChange);\n\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n      document.removeEventListener('quranProgressUpdated', handleStorageChange);\n    };\n  }, [fetchProgressData, refreshKey]);\n\n  // Persist expand/collapse state in localStorage\n  useEffect(() => {\n    const saved = localStorage.getItem('quranProgressExpanded');\n    if (saved !== null) setExpanded(saved === 'true');\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('quranProgressExpanded', expanded);\n  }, [expanded]);\n\n  const handleResumeReading = () => {\n    if (lastRead && typeof onNavigate === 'function') {\n      onNavigate('surah', lastRead.surah, lastRead.ayah);\n    }\n  };\n\n  const handleRefresh = () => {\n    setRefreshKey(prev => prev + 1);\n    fetchProgressData();\n  };\n\n  const handleResetProgress = () => {\n    setShowResetDialog(true);\n  };\n\n  const confirmResetProgress = () => {\n    quranProgressTracker.resetProgress();\n    setShowResetDialog(false);\n    handleRefresh();\n\n    // Dispatch a custom event to notify other components\n    document.dispatchEvent(new Event('quranProgressUpdated'));\n  };\n\n  const formatTimeSince = (timestamp) => {\n    if (!timestamp) return '';\n\n    const now = new Date();\n    const readTime = new Date(timestamp);\n    const diffMs = now - readTime;\n    const diffMins = Math.floor(diffMs / (1000 * 60));\n    const diffHours = Math.floor(diffMins / 60);\n    const diffDays = Math.floor(diffHours / 24);\n\n    if (diffDays > 0) return `${diffDays} day${diffDays > 1 ? 's' : ''} ago`;\n    if (diffHours > 0) return `${diffHours} hour${diffHours > 1 ? 's' : ''} ago`;\n    if (diffMins > 0) return `${diffMins} minute${diffMins > 1 ? 's' : ''} ago`;\n    return 'just now';\n  };\n\n  const toggleExpand = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <motion.div\n      variants={progressVariants}\n      initial=\"hidden\"\n      animate=\"visible\"\n    >\n      <Box\n        component={Paper}\n        elevation={2}\n        sx={{\n          borderRadius: 2,\n          p: 3,\n          mb: 3,\n          border: `1px solid ${borderColor}`,\n          boxShadow: theme.shadows[2],\n          transition: 'all 0.3s ease',\n          '&:hover': {\n            boxShadow: theme.shadows[6],\n          }\n        }}\n        ref={progressRef}\n      >\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <Typography variant=\"h5\" component=\"h2\" sx={{ fontWeight: 'bold' }}>\n              Your Quran Reading Journey\n            </Typography>\n            <Tooltip title={expanded ? 'Collapse details' : 'Expand for more details'}>\n              <IconButton onClick={toggleExpand} size=\"small\" sx={{ ml: 1 }}>\n                {expanded ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n              </IconButton>\n            </Tooltip>\n          </Box>\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <Button\n              variant=\"outlined\"\n              color=\"error\"\n              size=\"small\"\n              onClick={handleResetProgress}\n              startIcon={<RefreshIcon />}\n              sx={{ mr: 1 }}\n            >\n              Reset Progress\n            </Button>\n            <Tooltip title=\"Refresh progress data\">\n              <IconButton onClick={handleRefresh} size=\"small\">\n                <RefreshIcon />\n              </IconButton>\n            </Tooltip>\n          </Box>\n        </Box>\n\n        <Collapse in={expanded} timeout={400}>\n          {/* Overall progress section with recent activity */}\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: { xs: 'column', md: 'row' },\n              alignItems: 'flex-start',\n              mt: 2,\n              mb: 1\n            }}\n          >\n            {/* Left Column: Progress circle */}\n            <Box sx={{ flex: 1, textAlign: 'center', mb: { xs: 3, md: 0 } }}>\n              <motion.div\n                variants={circleVariants}\n                initial=\"initial\"\n                animate=\"animate\"\n                key={overallProgress.percentage}\n                style={{ display: 'inline-block' }}\n              >\n                <Box position=\"relative\" display=\"inline-flex\">\n                  <CircularProgress\n                    variant=\"determinate\"\n                    value={overallProgress.percentage || 0}\n                    size={150}\n                    thickness={5}\n                    sx={{ color: highlightColor }}\n                  />\n                  <Box\n                    top={0}\n                    left={0}\n                    bottom={0}\n                    right={0}\n                    position=\"absolute\"\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"center\"\n                  >\n                    <Typography variant=\"h4\" fontWeight=\"bold\">\n                      {overallProgress.percentage || 0}%\n                    </Typography>\n                  </Box>\n                </Box>\n              </motion.div>\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n                {overallProgress.completed || 0} of {overallProgress.total || 6236} ayahs read\n              </Typography>\n              {dailyProgress && (\n                <Box sx={{ mt: 1, position: 'relative', display: 'inline-block' }}>\n                  <Chip\n                    label={`Today Goal: ${dailyProgress.completed}/${dailyProgress.target} ayahs`}\n                    color={dailyProgress.completed >= dailyProgress.target ? 'success' : 'primary'}\n                    variant=\"outlined\"\n                    size=\"small\"\n                  />\n                  <AnimatePresence>\n                    {dailyProgress.completed >= dailyProgress.target && (\n                      <motion.div\n                        variants={badgeVariants}\n                        initial=\"initial\"\n                        animate=\"animate\"\n                        exit=\"initial\"\n                        style={{ position: 'absolute', top: -30, right: -30 }}\n                      >\n                        <Tooltip title=\"Daily goal achieved!\">\n                          <StarIcon color=\"warning\" fontSize=\"large\" />\n                        </Tooltip>\n                      </motion.div>\n                    )}\n                  </AnimatePresence>\n                </Box>\n              )}\n              {/* Recent Activity */}\n              <Box sx={{ mt: 2, textAlign: 'left' }}>\n                <Typography variant=\"subtitle2\" fontWeight=\"bold\" color=\"text.secondary\" sx={{ mb: 1 }}>\n                  Recent Activity\n                </Typography>\n                {recentActivity && recentActivity.length > 0 ? (\n                  <Grid container spacing={1} sx={{ mb: 1 }}>\n                    {recentActivity.map((date, index) => (\n                      <Grid item xs={1} key={index}>\n                        <Tooltip title={new Date(date).toLocaleDateString()}>\n                          <motion.div\n                            whileHover={{ scale: 1.2 }}\n                            style={{\n                              height: 20,\n                              background: index === 0 ? theme.palette.success.main : alpha(highlightColor, 1 - (index * 0.1)),\n                              borderRadius: 4,\n                              boxShadow: index === 0 ? `0 0 8px ${theme.palette.success.main}` : undefined,\n                              border: index === 0 ? `2px solid ${theme.palette.success.light}` : undefined,\n                              transition: 'all 0.2s',\n                            }}\n                          />\n                        </Tooltip>\n                      </Grid>\n                    ))}\n                  </Grid>\n                ) : (\n                  <Typography variant=\"body2\" color=\"text.secondary\" fontSize=\"0.8rem\">\n                    No recent reading activity\n                  </Typography>\n                )}\n              </Box>\n            </Box>\n            {/* Right Column: Last read and streak info */}\n            <Box sx={{ flex: 2, ml: { md: 4 } }}>\n              {/* Last read section */}\n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle1\" fontWeight=\"bold\" color=\"text.secondary\">\n                  Last Read Position\n                </Typography>\n                {lastRead ? (\n                  <>\n                    <Typography variant=\"h6\" fontWeight=\"medium\">\n                      Surah {lastRead.surah} ({surahName || \"\"}), Ayah {lastRead.ayah}\n                    </Typography>\n                    <Box sx={{ display: 'flex', alignItems: 'center', mt: 0.5 }}>\n                      <CalendarTodayIcon sx={{ fontSize: 'small', mr: 0.5, color: 'text.secondary' }} />\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {formatTimeSince(lastRead.timestamp)}\n                      </Typography>\n                    </Box>\n                    <motion.div\n                      whileHover={{ scale: 1.08 }}\n                      whileTap={{ scale: 0.98 }}\n                      style={{ display: 'inline-block' }}\n                    >\n                      <Button\n                        startIcon={<CheckCircleIcon />}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"medium\"\n                        onClick={handleResumeReading}\n                        sx={{ mt: 1, fontWeight: 'bold', px: 3, py: 1.2, fontSize: '1rem', boxShadow: 2 }}\n                      >\n                        Resume Reading\n                      </Button>\n                    </motion.div>\n                  </>\n                ) : (\n                  <Typography variant=\"body1\">No reading activity yet</Typography>\n                )}\n              </Box>\n              {/* Reading streak section */}\n              {readingStreak && (\n                <Box sx={{ mt: 2 }}>\n                  <Typography variant=\"subtitle1\" fontWeight=\"bold\" color=\"text.secondary\">\n                    Reading Streak\n                  </Typography>\n                  <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                    <Typography variant=\"h6\" fontWeight=\"medium\" sx={{ mr: 1 }}>\n                      {readingStreak.currentStreak || 0} day{(readingStreak.currentStreak || 0) !== 1 ? 's' : ''}\n                    </Typography>\n                    <Tooltip title={`Your longest streak is ${readingStreak.longestStreak || 0} days!`}>\n                      <Chip\n                        icon={<StarIcon />}\n                        label=\"Current\"\n                        size=\"small\"\n                        color=\"warning\"\n                        sx={{ fontWeight: 'bold' }}\n                      />\n                    </Tooltip>\n                    <AnimatePresence>\n                      {readingStreak.currentStreak > 0 && readingStreak.currentStreak === readingStreak.longestStreak && (\n                        <motion.div\n                          variants={badgeVariants}\n                          initial=\"initial\"\n                          animate=\"animate\"\n                          exit=\"initial\"\n                          style={{ marginLeft: 10 }}\n                        >\n                          <Tooltip title=\"Longest streak!\">\n                            <StarIcon color=\"success\" fontSize=\"large\" />\n                          </Tooltip>\n                        </motion.div>\n                      )}\n                    </AnimatePresence>\n                  </Box>\n                  <Box sx={{ display: 'flex', alignItems: 'center', mt: 0.5 }}>\n                    <LoopIcon sx={{ fontSize: 'small', mr: 0.5, color: 'text.secondary' }} />\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      Longest: {readingStreak.longestStreak || 0} day{(readingStreak.longestStreak || 0) !== 1 ? 's' : ''}\n                    </Typography>\n                  </Box>\n                </Box>\n              )}\n            </Box>\n          </Box>\n        </Collapse>\n        {/* When collapsed, show a summary */}\n        <Fade in={!expanded}>\n          <ButtonBase\n            onClick={toggleExpand}\n            sx={{\n              width: '100%',\n              textAlign: 'left',\n              borderRadius: 2,\n              display: expanded ? 'none' : 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              mt: 1,\n              p: 1,\n              background: 'transparent',\n              '&:hover': { background: alpha(highlightColor, 0.04) }\n            }}\n            focusRipple\n          >\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {overallProgress.percentage || 0}% complete •\n              {dailyProgress ? ` ${dailyProgress.completed}/${dailyProgress.target} today •` : ''}\n              {readingStreak ? ` ${readingStreak.currentStreak} day streak` : ''}\n            </Typography>\n            <Typography variant=\"body2\" color=\"primary\">\n              Click to expand\n            </Typography>\n          </ButtonBase>\n        </Fade>\n        {/* Reset Confirmation Dialog */}\n        <Dialog open={showResetDialog} onClose={() => setShowResetDialog(false)}>\n          <DialogTitle>Reset Progress?</DialogTitle>\n          <DialogContent>\n            <Typography>\n              Are you sure you want to reset all your Quran reading progress? This action cannot be undone.\n            </Typography>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setShowResetDialog(false)}>Cancel</Button>\n            <Button onClick={confirmResetProgress} color=\"error\" variant=\"contained\">Reset All Progress</Button>\n          </DialogActions>\n        </Dialog>\n      </Box>\n    </motion.div>\n  );\n};\n\nexport default QuranProgressView;","// src/pages/QuranPage.js\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport {\n  Container,\n  Box,\n  Typography,\n  Paper,\n  Grid,\n  CircularProgress,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  IconButton,\n  Button,\n  Tooltip,\n  useTheme,\n  useMediaQuery,\n  Alert,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Link,\n} from '@mui/material';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport PauseIcon from '@mui/icons-material/Pause';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport ZoomInIcon from '@mui/icons-material/ZoomIn';\nimport ZoomOutIcon from '@mui/icons-material/ZoomOut';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport CloseIcon from '@mui/icons-material/Close';\nimport MusicNoteIcon from '@mui/icons-material/MusicNote';\nimport RepeatIcon from '@mui/icons-material/Repeat';\nimport RepeatOneIcon from '@mui/icons-material/RepeatOne';\n\nimport { useQuranSettings } from '../contexts/QuranSettingsContext';\nimport { QuranProgressProvider } from '../contexts/QuranProgressContext';\nimport QuranSettingsPanel from '../components/quran/QuranSettingsPanel';\nimport SurahList from '../components/quran/SurahList';\nimport EnhancedAyahView from '../components/quran/EnhancedAyahView';\nimport QuranNavigationControls from '../components/quran/QuranNavigationControls';\nimport QuranNavigationPanel from '../components/quran/QuranNavigationPanel';\nimport TajweedTooltip from '../components/quran/TajweedTooltip';\nimport QuranProgressView from '../components/QuranProgressView';\nimport quranService from '../services/quranService';\nimport { parseTajweedText } from '../utils/tajweedParser';\n\n// Constants for navigation modes\nconst NAVIGATION_MODES = {\n  SURAH: 'surah',\n  PAGE: 'page',\n  JUZ: 'juz',\n  HIZB: 'hizb', // Changed back to 'hizb' for UI consistency\n  RUKU: 'ruku',\n  MANZIL: 'manzil',\n};\n\n// Mapping for property names in the Quran data\nconst PROPERTY_MAPPINGS = {\n  surah: 'surah',\n  page: 'page',\n  juz: 'juz',\n  hizb: 'hizbQuarter', // This maps UI 'hizb' to data property 'hizbQuarter'\n  ruku: 'ruku',\n  manzil: 'manzil',\n};\n\n// Helper: Detect Safari browser\nfunction isSafari() {\n  if (typeof navigator === 'undefined') return false;\n  const ua = navigator.userAgent;\n  return /^((?!chrome|android).)*safari/i.test(ua);\n}\n\n// Reciter data with SVG avatars (copied from QuranSettingsPanel)\nconst reciters = [\n  { value: 'ar.abdulbasitmurattal', label: 'Abdul Basit', image: '/images/reciters/abdul_basit.svg' },\n  { value: 'ar.abdullahbasfar', label: 'Abdullah Basfar', image: '/images/reciters/abdullah_basfar.svg' },\n  { value: 'ar.abdurrahmaansudais', label: 'Abdurrahmaan As-Sudais', image: '/images/reciters/abdurrahmaan_as_sudais.svg' },\n  { value: 'ar.abdulsamad', label: 'Abdul Samad', image: '/images/reciters/abdul_samad.svg' },\n  { value: 'ar.shaatree', label: 'Abu Bakr Ash-Shaatree', image: '/images/reciters/shaatree.svg' },\n  { value: 'ar.ahmedajamy', label: 'Ahmed ibn Ali al-Ajamy', image: '/images/reciters/ahmed_ajamy.svg' },\n  { value: 'ar.alafasy', label: 'Alafasy', image: '/images/reciters/mishary_rashid_alafasy.svg' },\n  { value: 'ar.hanirifai', label: 'Hani Rifai', image: '/images/reciters/hani_ar_rifai.svg' },\n  { value: 'ar.husary', label: 'Husary', image: '/images/reciters/khalil_al_husary.svg' },\n  { value: 'ar.husarymujawwad', label: 'Husary (Mujawwad)', image: '/images/reciters/husary_mujawwad.svg' },\n  { value: 'ar.hudhaify', label: 'Hudhaify', image: '/images/reciters/ali_al_hudhaify.svg' },\n  { value: 'ar.ibrahimakhbar', label: 'Ibrahim Akhdar', image: '/images/reciters/ibrahim_akhbar.svg' },\n  { value: 'ar.mahermuaiqly', label: 'Maher Al Muaiqly', image: '/images/reciters/maher_al_muaiqly.svg' },\n  { value: 'ar.minshawi', label: 'Minshawi', image: '/images/reciters/mohamed_siddiq_al_minshawi.svg' },\n  { value: 'ar.minshawimujawwad', label: 'Minshawy (Mujawwad)', image: '/images/reciters/mohamed_siddiq_al_minshawi.svg' },\n  { value: 'ar.muhammadayyoub', label: 'Muhammad Ayyoub', image: '/images/reciters/muhammad_ayyoub.svg' },\n  { value: 'ar.muhammadjibreel', label: 'Muhammad Jibreel', image: '/images/reciters/muhammad_jibreel.svg' },\n  { value: 'ar.saoodshuraym', label: 'Saood bin Ibraaheem Ash-Shuraym', image: '/images/reciters/saood_shuraym.svg' },\n  { value: 'en.walk', label: 'Ibrahim Walk', image: '/images/reciters/ibrahim_walk.svg' },\n  { value: 'fa.hedayatfarfooladvand', label: 'Fooladvand - Hedayatfar', image: '/images/reciters/fooladvand_hedayatfar.svg' },\n  { value: 'ar.parhizgar', label: 'Parhizgar', image: '/images/reciters/parhizgar.svg' },\n  { value: 'ur.khan', label: 'Shamshad Ali Khan', image: '/images/reciters/shamshad_ali_khan.svg' },\n  { value: 'zh.chinese', label: 'Chinese', image: '/images/reciters/chinese.svg' },\n  { value: 'fr.leclerc', label: 'Youssouf Leclerc', image: '/images/reciters/youssouf_leclerc.svg' },\n  { value: 'ar.aymanswoaid', label: 'Ayman Sowaid', image: '/images/reciters/ayman_sowaid.svg' },\n  { value: 'ru.kuliev-audio', label: 'Elmir Kuliev by 1MuslimApp', image: '/images/reciters/elmir_kuliev.svg' },\n  { value: 'ru.kuliev-audio-2', label: 'Elmir Kuliev 2 by 1MuslimApp', image: '/images/reciters/elmir_kuliev_2.svg' },\n];\n\nconst QuranPageContent = () => {\n  const theme = useTheme();\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down('md'));\n  const { settings, updateSetting } = useQuranSettings();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [quranData, setQuranData] = useState(null);\n  const [translationData, setTranslationData] = useState(null);\n  const [tafsirData, setTafsirData] = useState(null);\n  const [tajweedQuranData, setTajweedQuranData] = useState(null);\n  const [selectedSurah, setSelectedSurah] = useState(1); // Default to Al-Fatiha\n  const [showSettings, setShowSettings] = useState(false);\n  const [audioPlaying, setAudioPlaying] = useState(false);\n  const [currentAyah, setCurrentAyah] = useState(null);\n  const [bookmarkedAyahs, setBookmarkedAyahs] = useState([]);\n  const [navigationMode, setNavigationMode] = useState(settings.navigationMode || NAVIGATION_MODES.PAGE);\n  const [currentPosition, setCurrentPosition] = useState(1); // Default position in current navigation mode\n  const [showNavigationPanel, setShowNavigationPanel] = useState(false);\n  const [displayedAyahs, setDisplayedAyahs] = useState([]);\n  const [selectedWord, setSelectedWord] = useState(null); // { surahNumber, ayahNumber, wordNumberInAyah }\n  const [showAudioControls, setShowAudioControls] = useState(false);\n  const [playbackRate, setPlaybackRate] = useState(1);\n  const [repeatAyah, setRepeatAyah] = useState(false);\n\n  const audioRef = useRef(null);\n\n  // Show Safari Tajweed warning if user is on Safari and wants Tajweed\n  const showSafariTajweedWarning = isSafari() && settings.quranEdition === 'quran-tajweed';\n\n  // Load selected Quran edition\n  useEffect(() => {\n    async function loadQuranEdition() {\n      try {\n        setLoading(true);\n        // Use the correct edition identifier from settings\n        const quran = await quranService.loadEdition(settings.quranEdition);\n        setQuranData(quran);\n        setError(null);\n      } catch (err) {\n        console.error('Error loading Quran:', err);\n        setError('Failed to load Quran data. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    }\n    loadQuranEdition();\n  }, [settings.quranEdition]);\n  \n  // Always load quran-tajweed in parallel\n  useEffect(() => {\n    async function loadTajweedQuran() {\n      try {\n        const tajweedQuran = await quranService.loadEdition('quran-tajweed');\n        setTajweedQuranData(tajweedQuran);\n      } catch (err) {\n        console.error('Error loading Tajweed Quran:', err);\n        setTajweedQuranData(null);\n      }\n    }\n    loadTajweedQuran();\n  }, []);\n  \n  // Load translation if enabled\n  useEffect(() => {\n    async function loadTranslation() {\n      if (!settings.showTranslation) {\n        setTranslationData(null);\n        return;\n      }\n      \n      try {\n        const translation = await quranService.loadEdition(settings.translationId);\n        setTranslationData(translation);\n      } catch (err) {\n        console.error('Error loading translation:', err);\n        setTranslationData(null);\n      }\n    }\n    \n    loadTranslation();\n  }, [settings.showTranslation, settings.translationId]);\n  \n  // Load tafsir if enabled\n  useEffect(() => {\n    async function loadTafsir() {\n      if (!settings.showTafsir) {\n        setTafsirData(null);\n        return;\n      }\n      \n      try {\n        const tafsir = await quranService.loadEdition(settings.tafsirId);\n        setTafsirData(tafsir);\n      } catch (err) {\n        console.error('Error loading tafsir:', err);\n        setTafsirData(null);\n      }\n    }\n    \n    loadTafsir();\n  }, [settings.showTafsir, settings.tafsirId]);\n\n  // Debug: print current edition settings\n  useEffect(() => {\n    console.log('Current Quran Edition:', settings.quranEdition);\n    console.log('Current Translation Edition:', settings.translationId);\n    console.log('Current Tafsir Edition:', settings.tafsirId);\n  }, [settings.quranEdition, settings.translationId, settings.tafsirId]);\n\n  // Load bookmarks from localStorage\n  useEffect(() => {\n    const savedBookmarks = localStorage.getItem('quranBookmarks');\n    if (savedBookmarks) {\n      try {\n        setBookmarkedAyahs(JSON.parse(savedBookmarks));\n      } catch (error) {\n        console.error('Error loading bookmarks:', error);\n      }\n    }\n  }, []);\n\n  // Update navigation mode when settings change\n  useEffect(() => {\n    setNavigationMode(settings.navigationMode || NAVIGATION_MODES.PAGE);\n  }, [settings.navigationMode]);\n  \n  // Update displayed ayahs based on navigation mode and position\n  useEffect(() => {\n    if (!quranData || !navigationMode) return;\n\n    // Surah mode: just display the selected surah\n    if (navigationMode === NAVIGATION_MODES.SURAH) {\n      // For surah mode, we'll use the existing code that displays the entire surah\n      return;\n    }\n\n    // For other navigation modes, filter ayahs by the selected marker\n    const filteredAyahs = [];\n    \n    // Get the actual property name from the mapping\n    const propertyName = PROPERTY_MAPPINGS[navigationMode] || navigationMode;\n    \n    // Special handling for hizb quarters\n    let position = currentPosition;\n    if (navigationMode === NAVIGATION_MODES.HIZB) {\n      // Convert hizb number (1-8) to hizbQuarter (1-60) range\n      position = Math.ceil(currentPosition / 8 * 60);\n    }\n\n    // Get debugging info\n    console.log(`Filtering by ${propertyName} = ${position}`);\n    \n    quranData.surahs.forEach(surah => {\n      surah.ayahs.forEach(ayah => {\n        // Check if this ayah matches the current position in the selected navigation mode\n        if (ayah[propertyName] === position) {\n          filteredAyahs.push({\n            ...ayah,\n            surahNumber: surah.number,\n            surahName: surah.name,\n            surahEnglishName: surah.englishName,\n          });\n        }\n      });\n    });\n    \n    // Sort ayahs by their position in the Quran\n    filteredAyahs.sort((a, b) => a.number - b.number);\n    \n    setDisplayedAyahs(filteredAyahs);\n    \n    // If we found matching ayahs, update the selected surah to the first one\n    if (filteredAyahs.length > 0) {\n      setSelectedSurah(filteredAyahs[0].surahNumber);\n    }\n  }, [quranData, navigationMode, currentPosition]);\n  \n  // Handle audio playback\n  useEffect(() => {\n    if (!audioRef.current || !currentAyah || !quranData) return;\n    \n    const handleAudioEnd = () => {\n      if (settings.autoPlayAyahs) {\n        // Use our new helper method to get the next ayah within current navigation boundaries\n        const propertyName = PROPERTY_MAPPINGS[navigationMode] || navigationMode;\n        let nextAyah = null;\n        \n        if (navigationMode === NAVIGATION_MODES.SURAH) {\n          // In surah mode, simply get the next ayah in the current surah\n          const nextAyahNumber = currentAyah.numberInSurah + 1;\n          const surah = quranData.getSurah(selectedSurah);\n          if (surah && nextAyahNumber <= surah.ayahs.length) {\n            nextAyah = surah.getAyah(nextAyahNumber);\n          }\n        } else {\n          // For other modes, find the next ayah in the displayed ayahs\n          const currentIndex = displayedAyahs.findIndex(a => \n            a.number === currentAyah.number || \n            (a.numberInSurah === currentAyah.numberInSurah && a.surahNumber === currentAyah.surahNumber)\n          );\n          \n          if (currentIndex >= 0 && currentIndex < displayedAyahs.length - 1) {\n            nextAyah = displayedAyahs[currentIndex + 1];\n          }\n        }\n        \n        if (nextAyah) {\n          setCurrentAyah(nextAyah);\n          playAyah(nextAyah);\n        } else {\n          setAudioPlaying(false);\n        }\n      } else {\n        setAudioPlaying(false);\n      }\n    };\n    \n    audioRef.current.addEventListener('ended', handleAudioEnd);\n    \n    return () => {\n      if (audioRef.current) {\n        audioRef.current.removeEventListener('ended', handleAudioEnd);\n      }\n    };\n  }, [currentAyah, settings.autoPlayAyahs, quranData, selectedSurah, navigationMode, displayedAyahs]);\n\n  // Update playback rate when changed\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.playbackRate = playbackRate;\n    }\n  }, [playbackRate]);\n\n  // Repeat ayah logic\n  useEffect(() => {\n    if (!audioRef.current || !currentAyah) return;\n    const handleAudioEnd = () => {\n      if (repeatAyah) {\n        playAyah(currentAyah);\n      }\n    };\n    audioRef.current.addEventListener('ended', handleAudioEnd);\n    return () => {\n      if (audioRef.current) {\n        audioRef.current.removeEventListener('ended', handleAudioEnd);\n      }\n    };\n  }, [repeatAyah, currentAyah]);\n  \n  const playAyah = (ayah) => {\n    if (!audioRef.current || !ayah) return;\n    \n    // Get audio URL using the ayah object directly to use its global number\n    const audioUrl = quranService.getAudioUrl(\n      ayah.surahNumber || selectedSurah, \n      ayah, \n      settings.reciterId,\n      settings.audioBitrate || 128 // Use the bitrate from settings or default to 128\n    );\n    \n    // First ensure the UI updates to show which ayah is active\n    setCurrentAyah(ayah);\n    \n    // Small delay before playing audio to allow UI to update\n    setTimeout(() => {\n      audioRef.current.src = audioUrl;\n      audioRef.current.play()\n        .then(() => {\n          setAudioPlaying(true);\n          \n          // After a short delay, scroll to the ayah if it's not in view\n          setTimeout(() => {\n            const ayahElement = document.getElementById(`ayah-${ayah.surahNumber || selectedSurah}-${ayah.numberInSurah}`);\n            if (ayahElement) {\n              // Check if element is in viewport\n              const rect = ayahElement.getBoundingClientRect();\n              const isInViewport = (\n                rect.top >= 0 &&\n                rect.left >= 0 &&\n                rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n                rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n              );\n              \n              // Only scroll if not in viewport\n              if (!isInViewport) {\n                ayahElement.scrollIntoView({ \n                  behavior: 'smooth', \n                  block: 'center' \n                });\n              }\n            }\n          }, 300);\n        })\n        .catch(err => {\n          console.error('Error playing audio:', err);\n          setAudioPlaying(false);\n          \n          // If audio fails to play, try a lower bitrate\n          if ((settings.audioBitrate || 128) > 64) {\n            console.log('Trying lower bitrate...');\n            const lowerBitrateUrl = quranService.getAudioUrl(\n              ayah.surahNumber || selectedSurah,\n              ayah,\n              settings.reciterId,\n              64\n            );\n            audioRef.current.src = lowerBitrateUrl;\n            audioRef.current.play()\n              .then(() => setAudioPlaying(true))\n              .catch(err => {\n                console.error('Error playing audio with lower bitrate:', err);\n                setAudioPlaying(false);\n              });\n          }\n        });\n    }, 100);\n  };\n  \n  const pauseAudio = () => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      setAudioPlaying(false);\n    }\n  };\n  \n  const handleAyahClick = (ayah) => {\n    setCurrentAyah(ayah);\n    if (audioPlaying) {\n      pauseAudio();\n    }\n  };\n  \n  const handlePlayPause = () => {\n    if (audioPlaying) {\n      pauseAudio();\n    } else if (currentAyah) {\n      playAyah(currentAyah);\n    } else {\n      // Play first ayah if none selected\n      const surah = quranData?.getSurah(selectedSurah);\n      if (surah && surah.ayahs.length > 0) {\n        const firstAyah = surah.getAyah(1);\n        setCurrentAyah(firstAyah);\n        playAyah(firstAyah);\n      }\n    }\n  };\n  \n  const handleSurahSelect = (surahNumber) => {\n    setSelectedSurah(surahNumber);\n    setCurrentAyah(null);\n    if (audioPlaying) {\n      pauseAudio();\n    }\n    \n    // If we're selecting a surah directly, set navigation mode to surah\n    if (navigationMode !== NAVIGATION_MODES.SURAH) {\n      setNavigationMode(NAVIGATION_MODES.SURAH);\n      updateSetting('navigationMode', NAVIGATION_MODES.SURAH);\n      setCurrentPosition(surahNumber);\n    }\n  };\n  \n  const handleFontSizeChange = (increase) => {\n    updateSetting('fontSize', Math.max(16, Math.min(36, settings.fontSize + (increase ? 2 : -2))));\n  };\n\n  const handleNavigationModeChange = (mode) => {\n    setNavigationMode(mode);\n    updateSetting('navigationMode', mode);\n    setCurrentPosition(1); // Reset to first position in the new mode\n  };\n\n  const handlePositionChange = (position) => {\n    setCurrentPosition(position);\n    \n    // For surah mode, set the selected surah directly\n    if (navigationMode === NAVIGATION_MODES.SURAH) {\n      setSelectedSurah(position);\n    }\n    // For other modes, the ayahs will be filtered in the useEffect\n  };\n\n  const toggleBookmark = (surahNumber, ayahNumber) => {\n    const bookmarkId = `${surahNumber}:${ayahNumber}`;\n    \n    setBookmarkedAyahs(prevBookmarks => {\n      let newBookmarks;\n      \n      if (prevBookmarks.includes(bookmarkId)) {\n        newBookmarks = prevBookmarks.filter(id => id !== bookmarkId);\n      } else {\n        newBookmarks = [...prevBookmarks, bookmarkId];\n      }\n      \n      // Save to localStorage\n      localStorage.setItem('quranBookmarks', JSON.stringify(newBookmarks));\n      \n      return newBookmarks;\n    });\n  };\n\n  const isAyahBookmarked = (surahNumber, ayahNumber) => {\n    return bookmarkedAyahs.includes(`${surahNumber}:${ayahNumber}`);\n  };\n\n  const handleNavigate = (mode, position) => {\n    setNavigationMode(mode);\n    updateSetting('navigationMode', mode);\n    handlePositionChange(position);\n    setShowNavigationPanel(false);\n  };\n\n  const handleNextNavigation = () => {\n    const maxPos = getMaxPositionByMode();\n    if (currentPosition < maxPos) {\n      handlePositionChange(currentPosition + 1);\n      // Scroll to top after navigation\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n  };\n\n  const handlePreviousNavigation = () => {\n    if (currentPosition > 1) {\n      handlePositionChange(currentPosition - 1);\n    }\n  };\n\n  // Handle navigation from progress view\n  const handleProgressNavigation = (mode, position, ayah = null) => {\n    setNavigationMode(mode);\n    updateSetting('navigationMode', mode);\n    \n    if (mode === NAVIGATION_MODES.SURAH) {\n      setSelectedSurah(position);\n      \n      // If we have an ayah number, scroll to it (using setTimeout to ensure DOM is ready)\n      if (ayah) {\n        setTimeout(() => {\n          const ayahElement = document.getElementById(`ayah-${position}-${ayah}`);\n          if (ayahElement) {\n            ayahElement.scrollIntoView({ behavior: 'smooth', block: 'start' });\n          }\n        }, 500);\n      }\n    } else {\n      handlePositionChange(position);\n    }\n    \n    setShowNavigationPanel(false);\n  };\n\n  // Group displayed ayahs by surah for non-surah navigation modes\n  const getAyahsGroupedBySurah = () => {\n    if (!displayedAyahs || displayedAyahs.length === 0) return [];\n    \n    const surahMap = new Map();\n    \n    displayedAyahs.forEach(ayah => {\n      const surahNumber = ayah.surahNumber;\n      \n      if (!surahMap.has(surahNumber)) {\n        surahMap.set(surahNumber, {\n          number: surahNumber,\n          name: ayah.surahName,\n          englishName: ayah.surahEnglishName,\n          ayahs: []\n        });\n      }\n      \n      surahMap.get(surahNumber).ayahs.push(ayah);\n    });\n    \n    return Array.from(surahMap.values());\n  };\n\n  // Gets the maximum position for the current navigation mode\n  const getMaxPositionByMode = () => {\n    switch(navigationMode) {\n      case NAVIGATION_MODES.PAGE:\n        return 604; // Standard Quran has 604 pages\n      case NAVIGATION_MODES.JUZ:\n        return 30; // Quran has 30 juz\n      case NAVIGATION_MODES.HIZB:\n        return 8; // Quran has 8 hizbs (not 60 hizbQuarters)\n      case NAVIGATION_MODES.RUKU:\n        return 556; // Approximate number of rukus\n      case NAVIGATION_MODES.MANZIL:\n        return 7; // Quran has 7 manzils\n      case NAVIGATION_MODES.SURAH:\n        return 114; // Quran has 114 surahs\n      default:\n        return 114;\n    }\n  };\n\n  // Get title for the current navigation mode\n  const getNavigationTitle = () => {\n    if (navigationMode === NAVIGATION_MODES.SURAH && selectedSurahData) {\n      return `${selectedSurahData.name} - ${selectedSurahData.englishName}`;\n    } else {\n      const modeName = navigationMode === NAVIGATION_MODES.HIZB ? 'Hizb' : \n        navigationMode.charAt(0).toUpperCase() + navigationMode.slice(1);\n      return `${modeName} ${currentPosition}`;\n    }\n  };\n\n  const selectedSurahData = quranData?.getSurah(selectedSurah);\n  const groupedAyahs = navigationMode !== NAVIGATION_MODES.SURAH ? getAyahsGroupedBySurah() : [];\n\n  // --- SEO Meta Tag Generation ---\n  const generateMetaTags = () => {\n    let title = \"Read & Listen to the Quran - iMuslim Life\";\n    let description = \"Read and listen to the Holy Quran online with translations, tafsir, Tajweed highlighting, word-by-word analysis, and audio recitations.\";\n    const keywords = \"quran, holy quran, read quran, listen quran, quran translation, quran tafsir, tajweed, quran audio, islamic scripture\";\n    const canonicalUrl = \"https://imuslimlife.com/#/quran\"; // Keep base canonical for now due to HashRouter\n\n    try {\n      if (navigationMode === NAVIGATION_MODES.SURAH && selectedSurahData) {\n        title = `Read Surah ${selectedSurahData.englishName} (${selectedSurahData.englishNameTranslation}) - Quran | iMuslim Life`;\n        description = `Read Surah ${selectedSurahData.number} (${selectedSurahData.englishName}) of the Holy Quran. Includes ${selectedSurahData.ayahs.length} ayahs. Explore with translation, tafsir, and audio recitation on iMuslim Life.`;\n      } else if (navigationMode !== NAVIGATION_MODES.SURAH) {\n        const modeName = navigationMode.charAt(0).toUpperCase() + navigationMode.slice(1);\n        title = `Read Quran - ${modeName} ${currentPosition} | iMuslim Life`;\n        description = `Explore the Holy Quran by ${modeName}. Currently viewing ${modeName} ${currentPosition}. Read with translation, tafsir, and listen to recitations on iMuslim Life.`;\n      }\n    } catch (e) {\n      console.error(\"Error generating meta tags:\", e);\n      // Use default tags in case of error\n    }\n\n    return {\n      title,\n      description,\n      keywords,\n      canonicalUrl\n    };\n  };\n\n  const meta = generateMetaTags();\n  // --- End SEO Meta Tag Generation ---\n\n  // --- Structured Data Generation ---\n  const generateStructuredData = () => {\n    // Only generate when in Surah mode and data is available\n    if (navigationMode !== NAVIGATION_MODES.SURAH || !selectedSurahData) {\n      return null;\n    }\n\n    // TODO: Get actual translator name based on settings.translationId\n    const translatorName = quranService.getEditionDetails(settings.translationId)?.translator || \"Selected Translator\";\n\n    const chapterSchema = {\n      \"@context\": \"https://schema.org\",\n      \"@type\": \"Chapter\",\n      \"@id\": `https://imuslimlife.com/#/quran?surah=${selectedSurahData.number}`, // Add @id for referencing\n      \"isPartOf\": {\n        \"@type\": \"Book\",\n        \"name\": \"The Holy Quran\",\n        \"author\": {\n          \"@type\": \"Organization\", // Using Organization as divine authorship is complex for schema\n          \"name\": \"Allah (God)\"\n        },\n        \"inLanguage\": \"ar\" // Arabic\n      },\n      \"name\": `Surah ${selectedSurahData.englishName}`,\n      \"alternateName\": selectedSurahData.name, // Arabic name\n      \"chapterNumber\": selectedSurahData.number,\n      \"numberOfPages\": selectedSurahData.ayahs.length, // Using number of verses as a proxy for 'pages' in this context\n      \"description\": `Surah ${selectedSurahData.englishName} (${selectedSurahData.englishNameTranslation}), chapter ${selectedSurahData.number} of the Holy Quran. Revealed in ${selectedSurahData.revelationType}. Contains ${selectedSurahData.ayahs.length} verses (ayahs).`,\n      \"inLanguage\": \"ar\", // Primary language of the chapter text\n      \"translator\": settings.showTranslation ? {\n        \"@type\": \"Person\", // Or Organization depending on the source\n        \"name\": translatorName\n      } : undefined, // Only include translator if translation is shown\n      \"url\": `https://imuslimlife.com/#/quran?surah=${selectedSurahData.number}` // Current URL structure\n    };\n\n    return JSON.stringify(chapterSchema);\n  };\n\n  const structuredDataJson = useMemo(generateStructuredData, [selectedSurahData, navigationMode, settings.showTranslation, settings.translationId]);\n  // --- End Structured Data Generation ---\n\n  // --- Structured Data Generation (AudioObject) ---\n  const generateAudioObjectSchema = () => {\n    if (!currentAyah || !selectedSurahData) {\n      return null;\n    }\n\n    const reciterInfo = reciters.find(r => r.value === settings.reciterId);\n    const audioUrl = quranService.getAudioUrl(\n      currentAyah.surahNumber || selectedSurah,\n      currentAyah,\n      settings.reciterId,\n      settings.audioBitrate || 128\n    );\n    const surahUrl = `https://imuslimlife.com/#/quran?surah=${selectedSurahData.number}`;\n    const ayahNumberInSurah = currentAyah.numberInSurah;\n\n    const audioSchema = {\n      \"@context\": \"https://schema.org\",\n      \"@type\": \"AudioObject\",\n      \"name\": `Recitation of Surah ${selectedSurahData.englishName}, Ayah ${ayahNumberInSurah}${reciterInfo ? ` by ${reciterInfo.label}` : ''}`,\n      \"description\": `Audio recitation of verse ${ayahNumberInSurah} from Surah ${selectedSurahData.englishName} (${selectedSurahData.name}) of the Holy Quran. Recited by ${reciterInfo ? reciterInfo.label : 'selected reciter'}.`,\n      \"contentUrl\": audioUrl,\n      \"encodingFormat\": \"audio/mpeg\", // Assuming mp3 format from quranService\n      \"inLanguage\": \"ar\", // Language of the recitation\n      \"byArtist\": reciterInfo ? {\n        \"@type\": \"Person\",\n        \"name\": reciterInfo.label\n      } : undefined,\n      \"isPartOf\": {\n        \"@id\": surahUrl // Reference the Chapter schema by its @id\n      }\n    };\n\n    return JSON.stringify(audioSchema);\n  };\n\n  const audioSchemaJson = useMemo(generateAudioObjectSchema, [currentAyah, selectedSurahData, settings.reciterId, settings.audioBitrate, selectedSurah]);\n  // --- End Structured Data Generation (AudioObject) ---\n\n  if (loading) {\n    return (\n      <Container maxWidth=\"lg\" sx={{ py: 4, textAlign: 'center' }}>\n        <CircularProgress size={60} />\n        <Typography variant=\"h6\" sx={{ mt: 2 }}>\n          Loading Quran...\n        </Typography>\n      </Container>\n    );\n  }\n\n  if (error) {\n    return (\n      <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          {error}\n        </Alert>\n      </Container>\n    );\n  }\n\n  return (\n    <QuranProgressProvider>\n      <Helmet>\n        {/* Use dynamic title and description */}\n        <title>{meta.title}</title>\n        <meta name=\"description\" content={meta.description} />\n        <meta name=\"keywords\" content={meta.keywords} />\n        {/* Keep OG tags potentially dynamic or more general */}\n        <meta property=\"og:title\" content={meta.title} />\n        <meta property=\"og:description\" content={meta.description} />\n        <link rel=\"canonical\" href={meta.canonicalUrl} />\n        {/* Add JSON-LD Structured Data (Chapter) */}\n        {structuredDataJson && (\n          <script type=\"application/ld+json\">\n            {structuredDataJson}\n          </script>\n        )}\n        {/* Add JSON-LD Structured Data (AudioObject) */}\n        {audioSchemaJson && (\n          <script type=\"application/ld+json\">\n            {audioSchemaJson}\n          </script>\n        )}\n      </Helmet>\n      <Container maxWidth=\"xl\" sx={{ py: 4 }}>\n        {showSafariTajweedWarning && (\n          <Alert severity=\"info\" sx={{ mb: 3 }}>\n            Tajweed Quran text displays best in Chrome or other browsers. On Safari, Tajweed rendering may not appear correctly. For the best Tajweed experience, please use our App \"Salat-e-Mustaqeem\" or switch to a supported browser.\n          </Alert>\n        )}\n        <audio ref={audioRef} style={{ display: 'none' }} />\n        \n        {/* Add TajweedTooltip component here so it's available throughout the page */}\n        <TajweedTooltip />\n        \n        {/* Quran Reading Progress Dashboard */}\n        <QuranProgressView onNavigate={handleProgressNavigation} />\n        \n        {/* Header */}\n        <Paper elevation={3} sx={{ p: 3, mb: 3, borderRadius: 2 }}>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item xs={12} md={6}>\n              <Typography variant=\"h4\" component=\"h1\">\n                Al-Quran Al-Kareem\n              </Typography>\n              <Typography variant=\"subtitle1\" color=\"text.secondary\">\n                {getNavigationTitle()}\n              </Typography>\n            </Grid>\n            \n            <Grid item xs={12} md={6} sx={{ display: 'flex', justifyContent: 'flex-end', gap: 1 }}>\n              {/* Audio controls toggle */}\n              <Tooltip title={showAudioControls ? 'Hide Audio Controls' : 'Show Audio Controls'}>\n                <IconButton \n                  onClick={() => setShowAudioControls(v => !v)}\n                  aria-label={showAudioControls ? 'Hide audio controls' : 'Show audio controls'}\n                  aria-pressed={showAudioControls}\n                >\n                  <MusicNoteIcon color={showAudioControls ? 'primary' : 'inherit'} />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Navigation\">\n                <IconButton \n                  onClick={() => setShowNavigationPanel(true)}\n                  aria-label=\"Open Quran navigation panel\"\n                >\n                  <MenuIcon />\n                </IconButton>\n              </Tooltip>\n\n              <Tooltip title=\"Decrease font size\">\n                <IconButton \n                  onClick={() => handleFontSizeChange(false)}\n                  aria-label=\"Decrease font size\"\n                  disabled={settings.fontSize <= 16}\n                >\n                  <ZoomOutIcon />\n                </IconButton>\n              </Tooltip>\n              \n              <Tooltip title=\"Increase font size\">\n                <IconButton \n                  onClick={() => handleFontSizeChange(true)}\n                  aria-label=\"Increase font size\"\n                  disabled={settings.fontSize >= 36}\n                >\n                  <ZoomInIcon />\n                </IconButton>\n              </Tooltip>\n              \n              <Tooltip title={audioPlaying ? \"Pause recitation\" : \"Play recitation\"}>\n                <IconButton \n                  onClick={handlePlayPause}\n                  color={audioPlaying ? \"primary\" : \"default\"}\n                  aria-label={audioPlaying ? \"Pause recitation\" : \"Play recitation\"}\n                  aria-pressed={audioPlaying}\n                >\n                  {audioPlaying ? <PauseIcon /> : <PlayArrowIcon />}\n                </IconButton>\n              </Tooltip>\n              \n              <Tooltip title=\"Settings\">\n                <IconButton \n                  onClick={() => setShowSettings(true)}\n                  aria-label=\"Open Quran settings panel\"\n                >\n                  <SettingsIcon />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Grid>\n          \n          {/* Audio Controls Row */}\n          {showAudioControls && (\n            <Box sx={{ mt: 2, display: 'flex', flexWrap: 'wrap', alignItems: 'center', gap: 2 }}>\n              {/* Playback Speed */}\n              <FormControl size=\"small\" sx={{ minWidth: 120 }}>\n                <InputLabel id=\"playback-rate-label\">Speed</InputLabel>\n                <Select\n                  labelId=\"playback-rate-label\"\n                  value={playbackRate}\n                  label=\"Speed\"\n                  onChange={e => setPlaybackRate(Number(e.target.value))}\n                >\n                  <MenuItem value={0.5}>0.5x</MenuItem>\n                  <MenuItem value={1}>1x</MenuItem>\n                  <MenuItem value={1.5}>1.5x</MenuItem>\n                  <MenuItem value={2}>2x</MenuItem>\n                </Select>\n              </FormControl>\n              {/* Repeat toggle */}\n              <Tooltip title={repeatAyah ? 'Stop repeating current Ayah' : 'Repeat current Ayah'}>\n                <IconButton \n                  onClick={() => setRepeatAyah(v => !v)} \n                  color={repeatAyah ? 'primary' : 'default'}\n                  aria-label={repeatAyah ? 'Stop repeating current Ayah' : 'Repeat current Ayah'}\n                  aria-pressed={repeatAyah}\n                >\n                  {repeatAyah ? <RepeatOneIcon /> : <RepeatIcon />}\n                </IconButton>\n              </Tooltip>\n              {/* Reciter select */}\n              <FormControl size=\"small\" sx={{ minWidth: 180 }}>\n                <InputLabel id=\"reciter-select-label\">Reciter</InputLabel>\n                <Select\n                  labelId=\"reciter-select-label\"\n                  value={settings.reciterId}\n                  label=\"Reciter\"\n                  onChange={e => updateSetting('reciterId', e.target.value)}\n                >\n                  {reciters.map(r => (\n                    <MenuItem key={r.value} value={r.value}>\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                        {r.image && (\n                          <img\n                            src={r.image}\n                            alt={r.label}\n                            style={{ width: 28, height: 28, borderRadius: '50%', objectFit: 'cover' }}\n                            loading=\"lazy\"\n                          />\n                        )}\n                        <span>{r.label}</span>\n                      </Box>\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n          )}\n          \n          {/* Navigation Controls */}\n          <Box sx={{ mt: 3, pt: 2, borderTop: `1px solid ${theme.palette.divider}` }}>\n            <QuranNavigationControls\n              navigationMode={navigationMode}\n              currentPosition={currentPosition}\n              maxPosition={getMaxPositionByMode()}\n              onNavigationModeChange={handleNavigationModeChange}\n              onPositionChange={handlePositionChange}\n              onGoToSurah={() => setShowNavigationPanel(true)}\n            />\n          </Box>\n        </Paper>\n        \n        {/* Main content */}\n        <Grid container spacing={3}>\n          {/* Surah list sidebar on larger screens - Only shown in surah mode */}\n          {!isSmallScreen && navigationMode === NAVIGATION_MODES.SURAH && (\n            <Grid item xs={12} md={3}>\n              <SurahList \n                surahs={quranData?.surahs || []}\n                selectedSurah={selectedSurah}\n                onSelectSurah={handleSurahSelect}\n              />\n            </Grid>\n          )}\n          \n          {/* Main Quran display */}\n          <Grid item xs={12} md={navigationMode === NAVIGATION_MODES.SURAH && !isSmallScreen ? 9 : 12}>\n            {/* Surah Mode Display */}\n            {navigationMode === NAVIGATION_MODES.SURAH && selectedSurahData ? (\n              <Paper \n                elevation={3} \n                sx={{ \n                  p: 3, \n                  borderRadius: 2,\n                  backgroundColor: theme.palette.background.default\n                }}\n              >\n                {/* Surah header */}\n                <Box sx={{ textAlign: 'center', mb: 2 }}>\n                  <Typography \n                    variant=\"h4\" // Keep visual style, but change semantic tag\n                    component=\"h2\" // Change to H2\n                    sx={{ \n                      fontFamily: settings.fontFamily,\n                      fontSize: settings.fontSize * 1.2,\n                      fontWeight: 'bold',\n                      mb: 1\n                    }}\n                  >\n                    {selectedSurahData.name}\n                  </Typography>\n                  \n                  <Typography \n                    variant=\"h5\" // Keep visual style, but change semantic tag\n                    component=\"h3\" // Change to H3\n                  >\n                    {selectedSurahData.englishName} - {selectedSurahData.englishNameTranslation}\n                  </Typography>\n                  \n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {selectedSurahData.revelationType} · {selectedSurahData.ayahs.length} Ayahs\n                  </Typography>\n                  \n                  {/* Bismillah except for Surah At-Tawba */}\n                  {selectedSurahData.hasBismillah && selectedSurahData.hasBismillah() && (\n                    <Box \n                      sx={{ \n                        my: 3, \n                        py: 2,\n                        borderTop: `1px solid ${theme.palette.divider}`,\n                        borderBottom: `1px solid ${theme.palette.divider}`,\n                      }}\n                    >\n                      <Typography \n                        variant=\"h5\" \n                        sx={{ \n                          fontFamily: settings.fontFamily,\n                          fontSize: settings.fontSize * 1.1,\n                          textAlign: 'center',\n                          direction: 'rtl'\n                        }}\n                        dangerouslySetInnerHTML={{\n                          __html: parseTajweedText(\n                            \"بِسْمِ [h:1[ٱ]للَّهِ [h:2[ٱ][l[ل]رَّحْمَ[n[ـٰ]نِ [h:3[ٱ][l[ل]رَّح[p[ِي]مِ\",\n                            settings.showTajweed\n                          )\n                        }}\n                      />\n                    </Box>\n                  )}\n                </Box>\n                \n                {/* Ayahs */}\n                <Box>\n                  {selectedSurahData.ayahs.map((ayah) => (\n                    <EnhancedAyahView \n                      key={ayah.numberInSurah}\n                      ayah={ayah}\n                      surah={selectedSurahData}\n                      settings={settings}\n                      translation={settings.showTranslation ? \n                        translationData?.getSurah(selectedSurah)?.getAyah(ayah.numberInSurah) : null\n                      }\n                      tafsir={settings.showTafsir ? \n                        tafsirData?.getSurah(selectedSurah)?.getAyah(ayah.numberInSurah) : null\n                      }\n                      tajweedQuranData={settings.quranEdition === 'quran-wordbyword-2' ? tajweedQuranData : undefined}\n                      isPlaying={audioPlaying && currentAyah?.number === ayah.number}\n                      isBookmarked={isAyahBookmarked(selectedSurah, ayah.numberInSurah)}\n                      onPlay={() => {\n                        setCurrentAyah(ayah);\n                        playAyah(ayah);\n                      }}\n                      onPause={pauseAudio}\n                      onToggleBookmark={() => toggleBookmark(selectedSurah, ayah.numberInSurah)}\n                      onClick={() => handleAyahClick(ayah)}\n                      selectedWord={selectedWord}\n                      setSelectedWord={setSelectedWord}\n                    />\n                  ))}\n                </Box>\n                \n                {/* Navigation */}\n                <Box sx={{ \n                  display: 'flex', \n                  justifyContent: 'space-between',\n                  mt: 3, \n                  pt: 2,\n                  borderTop: `1px solid ${theme.palette.divider}`,\n                }}>\n                  <Button\n                    variant=\"outlined\"\n                    startIcon={<NavigateBeforeIcon />}\n                    onClick={handlePreviousNavigation}\n                    disabled={currentPosition <= 1}\n                  >\n                    Previous Surah\n                  </Button>\n                  \n                  <Button\n                    variant=\"outlined\"\n                    endIcon={<NavigateNextIcon />}\n                    onClick={handleNextNavigation}\n                    disabled={currentPosition >= getMaxPositionByMode()}\n                  >\n                    Next Surah\n                  </Button>\n                </Box>\n              </Paper>\n            ) : navigationMode !== NAVIGATION_MODES.SURAH && groupedAyahs.length > 0 ? (\n              // Other Navigation Modes (page, juz, hizb, ruku, manzil)\n              <Paper \n                elevation={3} \n                sx={{ \n                  p: 3, \n                  borderRadius: 2,\n                  backgroundColor: theme.palette.background.default\n                }}\n              >\n                {/* Navigation header */}\n                <Box sx={{ textAlign: 'center', mb: 3 }}>\n                  <Typography \n                    variant=\"h4\" // Keep visual style, but change semantic tag\n                    component=\"h2\" // Change to H2\n                    sx={{ fontFamily: settings.fontFamily, mb: 1 }}\n                  >\n                    {navigationMode.charAt(0).toUpperCase() + navigationMode.slice(1)} {currentPosition}\n                  </Typography>\n                  \n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {displayedAyahs.length} Ayahs from {groupedAyahs.length} Surahs\n                  </Typography>\n                </Box>\n                \n                {/* Display ayahs grouped by surah */}\n                {groupedAyahs.map((group, index) => (\n                  <Box key={`group-${group.number}`} sx={{ mb: 4 }}>\n                    {/* Surah header for each group */}\n                    <Box sx={{ \n                      textAlign: 'center', \n                      mb: 2,\n                      pb: 1,\n                      borderBottom: `1px solid ${theme.palette.divider}`\n                    }}>\n                      <Typography \n                        variant=\"h6\" \n                        sx={{ \n                          fontFamily: settings.fontFamily,\n                          fontWeight: 'bold',\n                          mb: 0.5\n                        }}\n                      >\n                        {group.name}\n                      </Typography>\n                      \n                      <Typography variant=\"body2\">\n                        {group.englishName}\n                      </Typography>\n                    </Box>\n                    \n                    {/* Show Bismillah for each new surah except for At-Tawba (surah 9) */}\n                    {group.number !== 9 && (\n                      <Box sx={{ \n                        my: 2, \n                        py: 1,\n                        textAlign: 'center' \n                      }}>\n                        <Typography \n                          variant=\"h6\" \n                          sx={{ \n                            fontFamily: settings.fontFamily,\n                            fontSize: settings.fontSize * 1.1,\n                            direction: 'rtl'\n                          }}\n                          dangerouslySetInnerHTML={{\n                            __html: parseTajweedText(\n                              \"بِسْمِ [h:1[ٱ]للَّهِ [h:2[ٱ][l[ل]رَّحْمَ[n[ـٰ]نِ [h:3[ٱ][l[ل]رَّح[p[ِي]مِ\",\n                              settings.showTajweed\n                            )\n                          }}\n                        />\n                      </Box>\n                    )}\n                    \n                    {/* Ayahs in this group */}\n                    {group.ayahs.map((ayah) => {\n                      const surahObj = quranData?.getSurah(group.number);\n                      return (\n                        <EnhancedAyahView \n                          key={`${group.number}-${ayah.numberInSurah}`}\n                          ayah={ayah}\n                          surah={surahObj}\n                          settings={settings}\n                          translation={settings.showTranslation ? \n                            translationData?.getSurah(group.number)?.getAyah(ayah.numberInSurah) : null\n                          }\n                          tafsir={settings.showTafsir ? \n                            tafsirData?.getSurah(group.number)?.getAyah(ayah.numberInSurah) : null\n                          }\n                          tajweedQuranData={settings.quranEdition === 'quran-wordbyword-2' ? tajweedQuranData : undefined}\n                          isPlaying={audioPlaying && currentAyah?.number === ayah.number}\n                          isBookmarked={isAyahBookmarked(group.number, ayah.numberInSurah)}\n                          onPlay={() => {\n                            setCurrentAyah(ayah);\n                            playAyah(ayah);\n                          }}\n                          onPause={pauseAudio}\n                          onToggleBookmark={() => toggleBookmark(group.number, ayah.numberInSurah)}\n                          onClick={() => handleAyahClick(ayah)}\n                          selectedWord={selectedWord}\n                          setSelectedWord={setSelectedWord}\n                        />\n                      );\n                    })}\n                  </Box>\n                ))}\n                \n                {/* Navigation buttons */}\n                <Box sx={{ \n                  display: 'flex', \n                  justifyContent: 'space-between',\n                  mt: 3, \n                  pt: 2,\n                  borderTop: `1px solid ${theme.palette.divider}`,\n                }}>\n                  <Button\n                    variant=\"outlined\"\n                    startIcon={<NavigateBeforeIcon />}\n                    onClick={handlePreviousNavigation}\n                    disabled={currentPosition <= 1}\n                  >\n                    Previous {navigationMode.charAt(0).toUpperCase() + navigationMode.slice(1)}\n                  </Button>\n                  \n                  <Button\n                    variant=\"outlined\"\n                    endIcon={<NavigateNextIcon />}\n                    onClick={handleNextNavigation}\n                    disabled={currentPosition >= getMaxPositionByMode()}\n                  >\n                    Next {navigationMode.charAt(0).toUpperCase() + navigationMode.slice(1)}\n                  </Button>\n                </Box>\n              </Paper>\n            ) : (\n              // Fallback for empty state\n              <Paper \n                elevation={3} \n                sx={{ \n                  p: 3, \n                  borderRadius: 2,\n                  textAlign: 'center'\n                }}\n              >\n                <Typography \n                  variant=\"h5\" \n                  component=\"h2\" // Use H2 for the fallback title as well\n                >\n                  No content found\n                </Typography>\n                <Typography variant=\"body1\" sx={{ mt: 2 }}>\n                  {navigationMode === NAVIGATION_MODES.SURAH ? \n                    'Select a Surah to begin' : \n                    `No ayahs found for ${navigationMode} ${currentPosition}. Try a different ${navigationMode} or navigation mode.`\n                  }\n                </Typography>\n                \n                {/* On small screens show surah select */}\n                {isSmallScreen && navigationMode === NAVIGATION_MODES.SURAH && (\n                  <FormControl fullWidth sx={{ mt: 2 }}>\n                    <InputLabel id=\"surah-select-label\">Surah</InputLabel>\n                    <Select\n                      labelId=\"surah-select-label\"\n                      value={selectedSurah}\n                      onChange={(e) => handleSurahSelect(e.target.value)}\n                      label=\"Surah\"\n                    >\n                      {quranData?.surahs.map(surah => (\n                        <MenuItem key={surah.number} value={surah.number}>\n                          {surah.number}. {surah.englishName}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                )}\n              </Paper>\n            )}\n          </Grid>\n        </Grid>\n        \n        {/* Settings Panel */}\n        <QuranSettingsPanel\n          open={showSettings}\n          onClose={() => setShowSettings(false)}\n        />\n\n        {/* Navigation Panel Dialog */}\n        <Dialog \n          open={showNavigationPanel}\n          onClose={() => setShowNavigationPanel(false)}\n          maxWidth=\"md\"\n          fullWidth\n        >\n          <DialogTitle sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            Quran Navigation\n            <IconButton onClick={() => setShowNavigationPanel(false)} edge=\"end\">\n              <CloseIcon />\n            </IconButton>\n          </DialogTitle>\n          <DialogContent>\n            <QuranNavigationPanel onNavigate={handleNavigate} />\n          </DialogContent>\n        </Dialog>\n        \n        {/* Attribution Footer */}\n        <Paper \n          elevation={1} \n          sx={{ \n            p: 2, \n            mt: 4, \n            borderRadius: 2,\n            textAlign: 'center',\n            backgroundColor: theme.palette.background.paper\n          }}\n        >\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Quran data/audio provided by{' '}\n            <Link \n              href=\"https://alquran.cloud\" \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n            >\n              AlQuran.cloud\n            </Link>\n            {' '}and{' '}\n            <Link \n              href=\"https://islamic.network\" \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n            >\n              Islamic Network\n            </Link>\n            . Tajweed rendering powered by iMuslim Life's Tajweed API.\n          </Typography>\n        </Paper>\n      </Container>\n    </QuranProgressProvider>\n  );\n};\n\n// We wrap the QuranPage content with QuranProgressProvider\nconst QuranPage = () => {\n  return (\n    <QuranProgressProvider>\n      <QuranPageContent />\n    </QuranProgressProvider>\n  );\n};\n\nexport default QuranPage;","/**\n * tajweedParser.js - JavaScript implementation of the PHP Tajweed class\n * Parses Quranic text with tajweed markup and converts it to styled HTML\n */\n\n// Tajweed rule constants\nconst TAJWEED_RULES = {\n  WASL: 1,                  // Hamzat ul Wasl\n  SILENT: 2,                // Silent\n  LAAM_SHAMSIYAH: 3,        // Lam Shamsiyyah\n  MADDA_NORMAL: 4,          // Normal Prolongation: 2 Vowels\n  MADDA_PERMISSIBLE: 5,     // Permissible Prolongation: 2, 4, 6 Vowels\n  MADDA_NECESSARY: 17,      // Necessary Prolongation: 6 Vowels\n  QALAQAH: 6,               // Qalaqah\n  MADDA_OBLIGATORY: 7,      // Obligatory Prolongation: 4-5 Vowels\n  IKHAFA_SHAFAWI: 8,        // Ikhafa' Shafawi - With Meem\n  IDGHAM_SHAFAWI: 9,        // Idgham Shafawi - With Meem\n  IQLAB: 10,                // Iqlab\n  IDGHAM_GHUNNAH: 11,       // Idgham - With Ghunnah\n  IDGHAM_NO_GHUNNAH: 12,    // Idgham - Without Ghunnah\n  IDGHAM_MUTAJANISAYN: 13,  // Idgham - Mutajanisayn\n  IDGHAM_MUTAQARIBAYN: 14,  // Idgham - Mutaqaribayn\n  GHUNNAH: 15,              // Ghunnah: 2 Vowels\n  IKHAFA: 16                // Ikhafa'\n};\n\n// Tajweed metadata according to the provided table\nconst TAJWEED_META = {\n  [TAJWEED_RULES.WASL]: {\n    identifier: '[h',\n    type: 'hamza-wasl',\n    description: 'Hamzat ul Wasl',\n    default_css_class: 'ham_wasl',\n    html_color: '#AAAAAA'\n  },\n  [TAJWEED_RULES.SILENT]: {\n    identifier: '[s',\n    type: 'silent',\n    description: 'Silent',\n    default_css_class: 'slnt',\n    html_color: '#AAAAAA'\n  },\n  [TAJWEED_RULES.LAAM_SHAMSIYAH]: {\n    identifier: '[l',\n    type: 'laam-shamsiyah',\n    description: 'Lam Shamsiyyah',\n    default_css_class: 'slnt',\n    html_color: '#AAAAAA'\n  },\n  [TAJWEED_RULES.MADDA_NORMAL]: {\n    identifier: '[n',\n    type: 'madda-normal',\n    description: 'Normal Prolongation: 2 Vowels',\n    default_css_class: 'madda_normal',\n    html_color: '#537FFF'\n  },\n  [TAJWEED_RULES.MADDA_PERMISSIBLE]: {\n    identifier: '[p',\n    type: 'madda-permissible',\n    description: 'Permissible Prolongation: 2, 4, 6 Vowels',\n    default_css_class: 'madda_permissible',\n    html_color: '#4050FF'\n  },\n  [TAJWEED_RULES.MADDA_NECESSARY]: {\n    identifier: '[m',\n    type: 'madda-necesssary',\n    description: 'Necessary Prolongation: 6 Vowels',\n    default_css_class: 'madda_necessary',\n    html_color: '#000EBC'\n  },\n  [TAJWEED_RULES.QALAQAH]: {\n    identifier: '[q',\n    type: 'qalaqah',\n    description: 'Qalqalah',\n    default_css_class: 'qlq',\n    html_color: '#DD0008'\n  },\n  [TAJWEED_RULES.MADDA_OBLIGATORY]: {\n    identifier: '[o',\n    type: 'madda-obligatory',\n    description: 'Obligatory Prolongation: 4-5 Vowels',\n    default_css_class: 'madda_obligatory', // Fixed typo in class name\n    html_color: '#2144C1'\n  },\n  [TAJWEED_RULES.IKHAFA_SHAFAWI]: {\n    identifier: '[c',\n    type: 'ikhafa-shafawi',\n    description: 'Ikhafa\\' Shafawi - With Meem',\n    default_css_class: 'ikhf_shfw',\n    html_color: '#D500B7'\n  },\n  [TAJWEED_RULES.IKHAFA]: {\n    identifier: '[f',\n    type: 'ikhafa',\n    description: 'Ikhafa\\'',\n    default_css_class: 'ikhf',\n    html_color: '#9400A8'\n  },\n  [TAJWEED_RULES.IDGHAM_SHAFAWI]: {\n    identifier: '[w',\n    type: 'idgham-shafawi',\n    description: 'Idgham Shafawi - With Meem',\n    default_css_class: 'idghm_shfw',\n    html_color: '#58B800'\n  },\n  [TAJWEED_RULES.IQLAB]: {\n    identifier: '[i',\n    type: 'iqlab',\n    description: 'Iqlab',\n    default_css_class: 'iqlb',\n    html_color: '#26BFFD'\n  },\n  [TAJWEED_RULES.IDGHAM_GHUNNAH]: {\n    identifier: '[a',\n    type: 'idgham-with-ghunnah',\n    description: 'Idgham - With Ghunnah',\n    default_css_class: 'idgh_ghn',\n    html_color: '#169777'\n  },\n  [TAJWEED_RULES.IDGHAM_NO_GHUNNAH]: {\n    identifier: '[u',\n    type: 'idgham-without-ghunnah',\n    description: 'Idgham - Without Ghunnah',\n    default_css_class: 'idgh_w_ghn',\n    html_color: '#169200'\n  },\n  [TAJWEED_RULES.IDGHAM_MUTAJANISAYN]: {\n    identifier: '[d',\n    type: 'idgham-mutajanisayn',\n    description: 'Idgham - Mutajanisayn',\n    default_css_class: 'idgh_mus',\n    html_color: '#A1A1A1'\n  },\n  [TAJWEED_RULES.IDGHAM_MUTAQARIBAYN]: {\n    identifier: '[b',\n    type: 'idgham-mutaqaribayn',\n    description: 'Idgham - Mutaqaribayn',\n    default_css_class: 'idgh_mut', // Fixed to match the table (was idgh_mus)\n    html_color: '#A1A1A1'\n  },\n  [TAJWEED_RULES.GHUNNAH]: {\n    identifier: '[g',\n    type: 'ghunnah',\n    description: 'Ghunnah: 2 Vowels',\n    default_css_class: 'ghn',\n    html_color: '#FF7E1E'\n  }\n};\n\n// Helper CSS that defines all the tajweed classes with their respective colors\nconst tajweedCSS = `\n.ham_wasl { color: #AAAAAA !important; }\n.slnt { color: #AAAAAA !important; }\n.madda_normal { color: #537FFF !important; }\n.madda_permissible { color: #4050FF !important; }\n.madda_necessary { color: #000EBC !important; }\n.qlq { color: #DD0008 !important; }\n.madda_obligatory { color: #2144C1 !important; }\n.ikhf_shfw { color: #D500B7 !important; }\n.ikhf { color: #9400A8 !important; }\n.idghm_shfw { color: #58B800 !important; }\n.iqlb { color: #26BFFD !important; }\n.idgh_ghn { color: #169777 !important; }\n.idgh_w_ghn { color: #169200 !important; }\n.idgh_mus { color: #A1A1A1 !important; }\n.idgh_mut { color: #A1A1A1 !important; }\n.ghn { color: #FF7E1E !important; }\n\n/* Add cursor style to indicate hoverable tajweed elements */\n[data-tajweed-rule] {\n  cursor: help;\n}\n`;\n\n// Add CSS to document if it's in a browser environment\nif (typeof document !== 'undefined') {\n  // Only add the styles if they haven't been added already\n  if (!document.getElementById('tajweed-styles')) {\n    const style = document.createElement('style');\n    style.id = 'tajweed-styles';\n    style.textContent = tajweedCSS;\n    document.head.appendChild(style);\n  }\n}\n\n/**\n * Parses tajweed using a method similar to the original PHP implementation.\n * @param {string} text - Verse text with tajweed markup.\n * @param {boolean} addDataAttributes - Whether to include data-* attributes (for tooltips).\n * @returns {string} - HTML string with <span> tags.\n */\nfunction parseLikePHP(text, addDataAttributes = true) {\n    let processed = text;\n\n    // Step 1: Replace identifiers with the start of the span tag\n    for (const metaKey in TAJWEED_META) {\n        const meta = TAJWEED_META[metaKey];\n        if (!meta || !meta.identifier) continue; // Skip if meta is invalid\n\n        const identifier = meta.identifier;\n        const cssClass = meta.default_css_class;\n        const color = meta.html_color;\n\n        // Construct the starting tag part, leaving it open (no '>')\n        let startTag = `<span class=\"${cssClass}\" style=\"color:${color};\"`; // Use span instead of <tajweed>\n\n        if (addDataAttributes) {\n            const ruleTitle = meta.type.split('-').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n            const ruleDescription = meta.description;\n            const ruleData = `${ruleTitle}:${ruleDescription}`;\n            startTag += ` data-tajweed-rule=\"${ruleData}\" data-tajweed-color=\"${color}\"`;\n        }\n        // IMPORTANT: Still no closing '>'\n\n        // Use replaceAll for global replacement of the identifier\n        // Need to escape the identifier for replaceAll if it contains special regex chars (like '[')\n        // Although, since we are replacing literal strings, escaping might not be strictly needed for replaceAll\n        // Let's assume identifiers are simple like '[n' and don't need escaping for string replaceAll\n        processed = processed.replaceAll(identifier, startTag);\n    }\n\n    // Step 2: Close the start tags and add end tags based on brackets\n    // Replace the '[' that follows the content with the closing '>' for the span tag\n    processed = processed.replaceAll('[', '\">');\n    // Replace the ']' that marks the end of the content with the closing '</span>' tag\n    processed = processed.replaceAll(']', '</span>');\n\n    // Step 3: Clean up any accidentally created empty tags or malformed structures\n    // (This might be needed if the input format is inconsistent)\n    // Example: Remove empty spans: <span ...></span>\n    processed = processed.replace(/<span[^>]*><\\/span>/g, '');\n\n    return processed;\n}\n\n/**\n * Applies ZWJ fixes similar to the PHP webkitFix function.\n * @param {string} text - HTML string generated by parseLikePHP.\n * @returns {string} - HTML string with ZWJ characters inserted.\n */\nfunction webkitFixJS(text) {\n    const ZWJ = '\\u200D'; // Unicode ZWJ character\n    let fixed = text;\n\n    // Regex to match closing span followed by a non-whitespace character (\\S)\n    // Inserts ZWJ between them\n    fixed = fixed.replace(/(<\\/span>)(\\S)/g, `$1${ZWJ}$2`);\n\n    // Regex to match a non-whitespace character (\\S) followed by an opening span\n    // Inserts ZWJ between them\n    // This regex handles attributes within the span tag\n    fixed = fixed.replace(/(\\S)(<span\\s+[^>]*>)/g, `$1${ZWJ}$2`);\n\n    // --- Optional: ZWJ inside spans (less common, but might help) ---\n    // fixed = fixed.replace(/(<span\\s+[^>]*>)(\\S)/g, `$1${ZWJ}$2`); // After span start\n    // fixed = fixed.replace(/(\\S)(<\\/span>)/g, `$1${ZWJ}$2`); // Before span end\n    // --- End Optional ---\n\n    // Specific Alif fix (mimicking PHP) - if 'ٱ' is U+0671\n     fixed = fixed.replace(new RegExp('\\u0671' + ZWJ, 'g'), '\\u0671');\n     // Add other non-joining characters if needed (e.g., ا, د, ذ, ر, ز, و)\n     // Example for 'ا' (U+0627):\n     // fixed = fixed.replace(new RegExp('\\u0627' + ZWJ, 'g'), '\\u0627');\n\n\n    // Cleanup redundant ZWJ and ZWJ near spaces\n    fixed = fixed.replace(new RegExp(ZWJ + ZWJ, 'g'), ZWJ); // Replace double ZWJ with single\n    fixed = fixed.replace(new RegExp('\\\\s' + ZWJ, 'g'), ' '); // Remove ZWJ after space\n    fixed = fixed.replace(new RegExp(ZWJ + '\\\\s', 'g'), ' '); // Remove ZWJ before space\n\n    return fixed;\n}\n\n/**\n * Main parsing function - Orchestrator.\n * @param {string} text - Verse text with tajweed markup\n * @param {boolean} applyColors - Whether to apply color styling (defaults to true)\n * @param {boolean} forceMobileFix - Force the mobile-specific rendering logic\n * @returns {string} - HTML formatted text with tajweed markup\n */\nexport function parseTajweedText(text, applyColors = true, forceMobileFix = false) {\n  if (!text) {\n    return '';\n  }\n\n  // Determine if we need the mobile-specific fix\n  const isMobileWebKit = forceMobileFix || (/iPhone|iPad|iPod/i.test(navigator?.userAgent) || (/Android/i.test(navigator?.userAgent) && /AppleWebKit/i.test(navigator?.userAgent) && !/Chrome/i.test(navigator?.userAgent)));\n\n  if (!applyColors) {\n    // Simple stripping if colors are off (remains the same)\n    let strippedText = text.replace(/\\[([a-z])(?::\\d+)?\\[([^\\]]*)\\]/g, '$2');\n    strippedText = strippedText.replace(/[\\[\\]]/g, ''); // Clean up any stray brackets\n    return strippedText;\n  }\n\n  // Generate the base HTML using the PHP-like logic\n  // ALWAYS add data attributes now\n  const addDataAttrs = true; // Changed from !isMobileWebKit\n  let htmlResult = parseLikePHP(text, addDataAttrs);\n\n  // Apply the ZWJ fix only for mobile WebKit (still needed for structure)\n  if (isMobileWebKit) {\n    htmlResult = webkitFixJS(htmlResult);\n  }\n\n  // Return the result\n  return htmlResult;\n}\n\n// Export the main function\nexport default parseTajweedText;\n"],"names":["QuranProgressContext","createContext","QuranProgressProvider","_ref","children","progress","setProgress","useState","savedProgress","localStorage","getItem","JSON","parse","readSurahs","readAyahs","timeSpent","lastReadTimestamp","overallCompletion","currentStreak","lastReadDate","dailyGoal","weeklyGoal","useEffect","setItem","stringify","markAyahAsRead","surahNumber","ayahNumber","prev","surahKey","ayahKey","Date","now","totalRead","lastRead","ayahsRead","uniqueAyahsRead","Object","keys","length","Math","min","round","today","toDateString","_jsx","Provider","value","markAyahsAsRead","ayahs","forEach","ayah","numberInSurah","isAyahRead","resetProgress","defaultProgress","updateGoals","getSurahCompletion","totalAyahsInSurah","getDailyStats","todayCount","values","timestamp","ayahsReadToday","dailyGoalProgress","constructor","data","assign","this","generateAudioUrl","surah","word","String","padStart","number","text","juz","manzil","page","ruku","hizbQuarter","sajda","translation","tafsir","audioUrl","words","trim","startsWith","wordsArray","Array","isArray","map","wordObj","Word","e","_data$ayahs","name","englishName","englishNameTranslation","revelationType","Ayah","getAyah","find","getAyahRange","startNumber","endNumber","filter","hasBismillah","_data$surahs","surahs","Surah","edition","QuranEdition","getSurah","getSurahByName","toLowerCase","globalNumber","a","isTajweed","loadedEditions","Map","availableEditions","identifier","language","type","getAvailableEditions","getEditionDetails","loadEdition","has","get","response","fetch","ok","Error","json","quran","Quran","set","error","console","getAudioUrl","reciter","arguments","undefined","bitrate","selectedBitrate","includes","globalAyahNumber","getGlobalAyahNumber","ayahInSurah","ayahCounts","i","getNextAyah","navigationMode","quranData","nextAyahNumber","currentMarker","s","searchSurah","checkAyah","SAMPLE_TEXT","reciters","label","image","ReciterOption","props","components","Option","_jsxs","Box","sx","display","alignItems","p","src","alt","style","width","height","borderRadius","marginRight","boxShadow","Typography","variant","fontWeight","ReciterSingleValue","SingleValue","open","onClose","settings","updateSetting","resetSettings","increaseFontSize","decreaseFontSize","quranEditions","useQuranSettings","tabIndex","setTabIndex","React","drawerTitleId","quranTypes","translations","tafsirs","groupedTranslations","reduce","acc","t","options","push","Drawer","anchor","xs","sm","maxWidth","justifyContent","mb","id","IconButton","onClick","edge","CloseIcon","Divider","Tabs","onChange","handleTabChange","event","newValue","Tab","icon","TextFormatIcon","TranslateIcon","MusicNoteIcon","VisibilityIcon","role","hidden","gutterBottom","FormControl","fullWidth","margin","InputLabel","Select","labelId","quranEdition","target","MenuItem","Grid","container","spacing","AVAILABLE_FONTS","font","item","Paper","fontFamily","family","onKeyPress","key","textAlign","cursor","border","borderColor","transition","color","fontSize","direction","mt","disabled","MIN_FONT_SIZE","RemoveIcon","Slider","handleFontSizeSliderChange","valueLabelDisplay","step","FONT_SIZE_STEP","marks","max","MAX_FONT_SIZE","mx","AddIcon","my","bgcolor","FormControlLabel","control","Switch","checked","showTranslation","showTransliteration","ReactSelect","inputId","classNamePrefix","found","translationId","option","placeholder","isClearable","showTafsir","tafsirId","wordByWord","r","reciterId","styles","base","state","isFocused","minHeight","background","isSelected","autoPlayAyahs","showTajweed","showPageView","RadioGroup","Radio","Button","startIcon","RestartAltIcon","selectedSurah","onSelectSurah","searchQuery","setSearchQuery","filteredSurahs","query","toString","elevation","component","TextField","size","InputProps","startAdornment","InputAdornment","position","SearchIcon","List","maxHeight","overflow","pt","dense","ListItemButton","selected","ListItemText","primary","split","secondary","STORAGE_KEYS","QURAN_STATS","quranProgressTracker","_initializeStorage","defaultStreak","longestStreak","history","defaultGoals","dailyAyahs","completionTarget","markAsRead","isComplete","_isValidSurah","_isValidAyah","toISOString","read","updateLastReadPosition","_updateReadingStreak","window","dispatchEvent","Event","markRangeAsRead","startSurah","startAyah","endSurah","endAyah","firstAyah","lastAyah","_getSurahAyahCount","lastPosition","getLastReadPosition","getAyahReadTimestamp","getOverallProgress","completedCount","percentage","completed","total","getSurahProgress","surahAyahCount","getJuzProgress","removeItem","streakData","getReadingStreak","streak","setReadingGoals","goals","updatedGoals","getReadingGoals","getDailyProgress","remainingToday","exportProgressData","readingStreak","importProgressData","yesterday","setDate","getDate","setHours","yesterdayString","shift","ayahCount","freeze","log","selectedWord","setSelectedWord","tajweedQuranData","bubbleRef","useRef","handleClick","current","contains","document","addEventListener","removeEventListener","ayahText","lineHeight","marginBottom","wordBreak","textRendering","WebkitFontSmoothing","idx","wordNumberInAyah","word_number_in_ayah","arabicWithTajweed","word_arabic_tajweed","word_arabic","padding","marginLeft","title","word_translation","stopPropagation","audio","default","audioAttempts","maxAttempts","tryPlayAudio","audioPath","Audio","err","warn","wordElement","currentTarget","originalBackground","setTimeout","play","then","catch","surahNum","ayahNum","wordNum","defaultAudioFile","dangerouslySetInnerHTML","__html","require","word_transliteration","ref","bottom","right","zIndex","minWidth","whiteSpace","animation","marginTop","fontStyle","borderLeft","borderRight","borderTop","Boolean","block","arr","parts","arabic","audioFile","KIDS_COLORS","alert","originalColor","transform","sajdaAyahs","rukuEndpoints","hizbQuarters","juzStartPoints","getAyahMark","marksList","mark","playingVariant","initial","scale","animate","duration","repeat","Infinity","repeatType","ease","rest","memo","isPlaying","isBookmarked","onPlay","onPause","onToggleBookmark","theme","useTheme","isVisible","setIsVisible","hasMarkedAsRead","setHasMarkedAsRead","observer","IntersectionObserver","_ref2","entry","isIntersecting","threshold","rootMargin","ayahElement","getElementById","observe","unobserve","timer","clearTimeout","scrollTimeout","classList","add","scrollIntoView","behavior","remove","hasBeenRead","sajdaMark","rukuMark","hizbMark","juzMark","hasSpecialMark","_Fragment","motion","div","variants","palette","main","success","light","alpha","className","mode","mr","Tooltip","Chip","TouchAppIcon","AltRouteIcon","FilterCenterFocusIcon","LooksOneIcon","CheckCircleOutlineIcon","PauseIcon","PlayArrowIcon","BookmarkIcon","BookmarkBorderIcon","WordByWordSpeechBubble","WordByWordSpeechBubbleKids","lang","parseTajweedText","tajweedText","transliteration","divider","visuallyHidden","clip","currentPosition","maxPosition","onNavigationModeChange","onPositionChange","onGoToSurah","anchorEl","setAnchorEl","jumpToValue","setJumpToValue","menuId","jumpInputId","handleModeMenuClose","handleModeSelect","handleJumpTo","parseInt","isNaN","flexWrap","gap","endIcon","KeyboardArrowDownIcon","getNavigationModeText","Menu","ml","getMaxPositionByMode","htmlFor","endAdornment","handlePrevious","scrollTo","top","NavigateBeforeIcon","handleNext","NavigateNextIcon","ViewListIcon","createNavigationItems","from","_","floor","getNavigationIcon","MenuBookIcon","ViewDayIcon","ViewWeekIcon","onNavigate","activeTab","setActiveTab","items","hizb","borderBottom","scrollButtons","allowScrollButtonsMobile","iconPosition","md","lg","Card","CardActionArea","handleItemClick","flexDirection","align","TajweedTooltip","tooltipData","setTooltipData","tooltipPosition","setTooltipPosition","x","y","handleMouseEnter","hasAttribute","ruleData","getAttribute","description","rect","getBoundingClientRect","left","scrollX","scrollY","closest","opacity","to","overallProgress","setOverallProgress","setLastRead","setReadingStreak","recentActivity","setRecentActivity","dailyProgress","setDailyProgress","surahName","setSurahName","refreshKey","setRefreshKey","showResetDialog","setShowResetDialog","expanded","setExpanded","progressRef","paper","highlightColor","badgeVariants","rotate","stiffness","fetchProgressData","useCallback","async","daily","lastDays","slice","reverse","quranService","handleStorageChange","saved","handleRefresh","toggleExpand","visible","shadows","ExpandLessIcon","handleResetProgress","RefreshIcon","Collapse","in","timeout","flex","CircularProgress","thickness","AnimatePresence","exit","StarIcon","date","index","toLocaleDateString","whileHover","CalendarTodayIcon","diffMs","diffMins","diffHours","diffDays","formatTimeSince","whileTap","CheckCircleIcon","handleResumeReading","px","py","LoopIcon","Fade","ButtonBase","focusRipple","Dialog","DialogTitle","DialogContent","DialogActions","confirmResetProgress","NAVIGATION_MODES","PROPERTY_MAPPINGS","QuranPageContent","isSmallScreen","useMediaQuery","breakpoints","down","loading","setLoading","setError","setQuranData","translationData","setTranslationData","tafsirData","setTafsirData","setTajweedQuranData","setSelectedSurah","showSettings","setShowSettings","audioPlaying","setAudioPlaying","currentAyah","setCurrentAyah","bookmarkedAyahs","setBookmarkedAyahs","setNavigationMode","setCurrentPosition","showNavigationPanel","setShowNavigationPanel","displayedAyahs","setDisplayedAyahs","showAudioControls","setShowAudioControls","playbackRate","setPlaybackRate","repeatAyah","setRepeatAyah","audioRef","showSafariTajweedWarning","navigator","ua","userAgent","test","isSafari","loadQuranEdition","tajweedQuran","loadTajweedQuran","loadTranslation","loadTafsir","savedBookmarks","filteredAyahs","propertyName","ceil","surahEnglishName","sort","b","handleAudioEnd","nextAyah","currentIndex","findIndex","playAyah","audioBitrate","innerHeight","documentElement","clientHeight","innerWidth","clientWidth","lowerBitrateUrl","pauseAudio","pause","handleAyahClick","handleSurahSelect","handleFontSizeChange","increase","handlePositionChange","toggleBookmark","bookmarkId","prevBookmarks","newBookmarks","isAyahBookmarked","handleNextNavigation","maxPos","handlePreviousNavigation","selectedSurahData","groupedAyahs","getAyahsGroupedBySurah","surahMap","meta","generateMetaTags","modeName","charAt","toUpperCase","keywords","canonicalUrl","structuredDataJson","useMemo","generateStructuredData","_quranService$getEdit","translatorName","translator","chapterSchema","audioSchemaJson","generateAudioObjectSchema","reciterInfo","surahUrl","ayahNumberInSurah","audioSchema","Container","Alert","severity","Helmet","content","property","rel","href","QuranProgressView","getNavigationTitle","v","MenuIcon","ZoomOutIcon","ZoomInIcon","handlePlayPause","SettingsIcon","Number","RepeatOneIcon","RepeatIcon","objectFit","QuranNavigationControls","SurahList","backgroundColor","_translationData$getS","_tafsirData$getSurah","EnhancedAyahView","group","pb","_translationData$getS2","_tafsirData$getSurah2","surahObj","QuranSettingsPanel","QuranNavigationPanel","handleNavigate","Link","QuranPage","TAJWEED_RULES","TAJWEED_META","default_css_class","html_color","createElement","textContent","head","appendChild","_navigator","_navigator2","_navigator3","_navigator4","applyColors","isMobileWebKit","strippedText","replace","htmlResult","addDataAttributes","processed","metaKey","cssClass","startTag","join","replaceAll","parseLikePHP","ZWJ","fixed","RegExp","webkitFixJS"],"sourceRoot":""}